[{"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js":"1","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js":"2","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js":"3","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js":"4","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx":"5","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx":"6","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx":"7","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js":"8","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js":"9","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Data.jsx":"10","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js":"11","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx":"12","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Workspace.jsx":"13","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openWorkspacesContext.js":"14","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Self-Workspace.jsx":"15","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Other-Workspace.jsx":"16","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Experiment.jsx":"17","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx":"18","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx":"19","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Workspaces.jsx":"20","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/workspaces.js":"21","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Feed-Workspace-Card.jsx":"22","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Self-Workspaces.jsx":"23","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Row-Card.jsx":"24","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Square-Card.jsx":"25","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Workspaces.jsx":"26","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search-Workspaces.jsx":"27"},{"size":495,"mtime":1642349270944,"results":"28","hashOfConfig":"29"},{"size":4001,"mtime":1642538844225,"results":"30","hashOfConfig":"29"},{"size":1766,"mtime":1641237875936,"results":"31","hashOfConfig":"29"},{"size":134,"mtime":1639341716098,"results":"32","hashOfConfig":"29"},{"size":4419,"mtime":1642348558560,"results":"33","hashOfConfig":"29"},{"size":2385,"mtime":1642376412481,"results":"34","hashOfConfig":"29"},{"size":1407,"mtime":1642540093264,"results":"35","hashOfConfig":"29"},{"size":134,"mtime":1640810261516,"results":"36","hashOfConfig":"29"},{"size":135,"mtime":1641219148050,"results":"37","hashOfConfig":"29"},{"size":1330,"mtime":1641065585265,"results":"38","hashOfConfig":"29"},{"size":136,"mtime":1641050477587,"results":"39","hashOfConfig":"29"},{"size":2480,"mtime":1642537774608,"results":"40","hashOfConfig":"29"},{"size":10902,"mtime":1642348816799,"results":"41","hashOfConfig":"29"},{"size":1217,"mtime":1642349697065,"results":"42","hashOfConfig":"29"},{"size":150,"mtime":1642349129604,"results":"43","hashOfConfig":"29"},{"size":154,"mtime":1642349118276,"results":"44","hashOfConfig":"29"},{"size":150,"mtime":1642349107492,"results":"45","hashOfConfig":"29"},{"size":144,"mtime":1642348874732,"results":"46","hashOfConfig":"29"},{"size":140,"mtime":1642348562273,"results":"47","hashOfConfig":"29"},{"size":1248,"mtime":1642349259488,"results":"48","hashOfConfig":"29"},{"size":140,"mtime":1642348244514,"results":"49","hashOfConfig":"29"},{"size":1200,"mtime":1642542482533,"results":"50","hashOfConfig":"29"},{"size":1045,"mtime":1642522522419,"results":"51","hashOfConfig":"29"},{"size":1808,"mtime":1642531376612,"results":"52","hashOfConfig":"29"},{"size":2037,"mtime":1642525638352,"results":"53","hashOfConfig":"29"},{"size":3033,"mtime":1642540334523,"results":"54","hashOfConfig":"29"},{"size":2564,"mtime":1642538905588,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"yw0j30",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js",[],["116","117"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js",["118","119","120","121"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx",["122","123","124"],"import React, {useState, useEffect, useContext} from 'react'\nimport usersAPI from '../API/users'\nimport authAPI from \"../API/auth\"\nimport ViewSelfWorkspaces from '../Components/View-Self-Workspaces';\nimport { CurrentUserContext } from '../Contexts/currentUserContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Account = ({currentUser}) => {\n    const [user, setUser] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [password, setPassword] = useState(\"\")\n    const {removeCurrentUser} = useContext(CurrentUserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const user = await usersAPI.get(\"/\");\n\n                setUser(user.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const signout = async () => {\n        await authAPI.get(\"/signout\");\n\n        removeCurrentUser();\n\n        if (typeof window !== 'undefined') {\n            window.location = `/sign-in`\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">\n                    <div className=\"home-left-column\">\n                        <ViewSelfWorkspaces bookmarked={false} />\n                        <ViewSelfWorkspaces bookmarked={true} />\n                    </div>\n                    <div className=\"account-information home-middle-column\">\n                        <h1>Account Settings</h1>\n                        <label>Name</label>\n                        <p>{user.name}</p>\n                        <label>Username</label>\n                        <p>{user.username}</p>\n                        <label>Email Address</label>\n                        <p>{user.email}</p>\n                        <form className=\"account-form\">\n                            <label>Password</label>\n                            <input placeholder=\"Change Password\" value={password} onChange={e => {setPassword(e.target.value)}} />\n                            <button disabled={password === \"\"}>Save Changes</button>\n                        </form>\n                        <button onClick={() => {signout()}}>Sign Out</button>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Account\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Data.jsx",["125"],"import React, {useState, useEffect} from 'react'\n\nconst ViewData = ({displayData}) => {\n    const [header, setHeader] = useState([])\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        setHeader([])\n        setData([])\n        \n        const tempData = displayData.slice(displayData.indexOf('\\n')+1).split('\\n');\n        setHeader(displayData.slice(0, displayData.indexOf('\\n')).split(','))\n\n        tempData.map((row) => {\n            setData(previous => [...previous, row.split(',')])\n        })\n    }, [displayData])\n\n    const displayHeader = () => {\n        return (\n            header.map((item, i) => {\n                return <th key={i}>{item}</th>\n            })\n        )\n    }\n    \n    const displayBody = () => {\n        return (\n            data.map((row, i) => {\n                return (\n                    <tr key={i}>\n                        {row.map((item, j) => {\n                            return <td key={j}>{item}</td>\n                        })}\n                    </tr>\n                )\n            })\n        )\n    }\n\n    return (\n        <table className=\"project-data-table\">\n            <tbody>\n                <tr>\n                    {displayHeader()}\n                </tr>\n                {displayBody()}\n            </tbody>\n        </table>\n    )\n}\n\nexport default ViewData\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx",["126"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Workspace.jsx",["127","128"],"import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport projectAPI from '../API/projects'\nimport userAPI from '../API/users'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\n\nconst NewProject = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [data, setData] = useState();\n    const [displayData, setDisplayData] = useState();\n    const [importMethod, setImportMethod] = useState(\"\")\n    const [image, setImage] = useState();\n    const [dataID, setDataID] = useState(\"\")\n    const [projects, setProjects] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectAPI.get(\"/\");\n\n                projects.data.data.map((project) => {\n                    setProjects(previous => [...previous, project.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (data !== undefined) {\n            setDataID(\"\")\n\n            const file = data;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDisplayData(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [data])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataID(\"\")\n        setData()\n        setDisplayData()\n    }\n\n    const existingProject = () => {\n        setData(undefined)\n\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n            .then(response => response.text())\n            .then(text => {setDisplayData(text)})\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const projectResponse = await projectAPI.post(\"/\", {\n                title: title,\n                data: \"none\",\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                visibility: visibility\n            });\n\n            uploadFile(projectResponse.data.data)\n        } catch (err) {}\n    }\n\n    const uploadFile = async (projectID) => {\n        if (importMethod === \"file\" && data !== undefined) {\n            const formData = new FormData();\n\n            formData.append('data', data);\n            formData.append('id', projectID)\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n            \n            try {\n                await projectAPI.put(`/${projectID}`, {\n                    data: `${projectID}-data`\n                });\n\n                history.push(`/project/${projectID}`)\n            } catch (err) {}\n        } else if (importMethod === \"existing\" && dataID !== \"\") {\n            try {\n                await projectAPI.put(`/${projectID}`, {\n                    data: dataID\n                });\n\n                history.push(`/project/${projectID}`)\n            } catch (err) {}\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-project\">\n                    <div className=\"sidebar\">\n                        <h1>New Project</h1> \n                        <div className=\"new-project-header\">\n                            <p className=\"new-project-title\">{title}</p> \n                        </div>\n                        <button className={`${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"sidebar-stage\"} ${!setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled>Data</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-project-setup\">\n                            <div className=\"new-project-setup-information\">\n                                <input className=\"new-project-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-project-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onClick={() => {setVisibility(previous => !previous)}}\n                                            value={visibility} />\n                                </div>\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImage(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-project-nav\">   \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { !setupStage &&\n                        <>\n                            <div className=\"new-project-import\">\n                                <div className=\"new-project-import-options\">\n                                    <p>Import Data</p>\n                                    <button onClick={() => {setImportMethod(\"existing\")}}>Existing Data</button>\n                                    <button onClick={() => {setImportMethod(\"file\")}}>Upload File</button>\n                                </div>\n                                <div className=\"new-project-import-method\">\n                                {importMethod !== \"\" &&\n                                    <>\n                                        {importMethod === \"file\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    key={Date.now()}\n                                                    onChange={e => {setData(e.target.files[0])}} />\n                                        :\n                                            <>\n                                                <input className=\"new-project-import-projectid\"\n                                                        placeholder=\"Data ID\"\n                                                        onChange={e => {setDataID(e.target.value)}}\n                                                        value={dataID} />\n                                                <button className=\"new-project-next\"\n                                                        disabled={dataID === \"\"}\n                                                        onClick={() => {existingProject()}}>Fetch</button>\n                                            </>\n                                        }\n                                    </>\n                                }\n                                </div>\n                                {(data !== undefined || dataID !== \"\") && displayData !== undefined &&\n                                    <div className=\"new-project-data\">\n                                        <div className=\"new-project-data-information\">\n                                            {data !== undefined ?\n                                                <p className=\"new-project-filename\">File: {data.name}</p> \n                                                :\n                                                <p className=\"new-project-filename\">Data: {dataID}</p> \n                                            }\n                                            <button className=\"new-project-cancel\"\n                                                    onClick={() => {remove()}}>Remove</button>\n                                        </div>\n                                        <div className=\"new-project-data-table\">\n                                            <ViewData displayData={displayData} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        disabled={disableCreate}\n                                        onClick={() => {uploadImage()}}>Create</button>\n                            </div>\n                        </>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewProject\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openWorkspacesContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Self-Workspace.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Other-Workspace.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Experiment.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Workspaces.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/workspaces.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Feed-Workspace-Card.jsx",["129","130"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Self-Workspaces.jsx",["131"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst ViewSelfWorkspaces = ({bookmarked}) => {\n    return (\n        <div className=\"home-my-workspaces-container\">\n            <div className=\"home-my-workspaces-heading\">\n                <p>{bookmarked ? \"Bookmarked Workspaces\" : \"My Workspaces\"}</p>\n                {!bookmarked && \n                    <Link to=\"/new-project\">\n                        <AddIcon className=\"home-my-workspaces-new-project-icon\" />\n                    </Link>\n                }\n            </div>\n            <div className=\"home-my-workspaces-list\">\n                <div className=\"home-my-workspaces-item\">\n                    <img src=\"https://via.placeholder.com/100\" />\n                    <p>Workspace 1</p>\n                </div>\n                <Link to={bookmarked ? \"/bookmarked-workspaces\" : \"/my-workspaces\"} className=\"home-my-workspaces-all\">See All</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewSelfWorkspaces\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Row-Card.jsx",["132"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Square-Card.jsx",["133"],"import React, {useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenWorkspacesContext } from '../Contexts/openWorkspacesContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst WorkspaceSquareCard = ({workspace, self}) => {\n    const {addOpenWorkspaces} = useContext(OpenWorkspacesContext);\n\n    return (\n        <Link to={`/workspace/${workspace._id}`} className=\"workspace-square-card\" onClick={() => {addOpenWorkspaces(workspace._id, workspace.title)}}>\n            <img src=\"https://via.placeholder.com/1000\" />\n            <p className=\"workspace-square-card-heading\">{workspace.title}</p>\n            <div>\n                {self && \n                    <>\n                        {true ? \n                            <VisibilityIcon className=\"workspace-square-card-visibility\" />\n                        :\n                            <VisibilityOffIcon className=\"workspace-square-card-visibility\" />\n                        }\n                    </>\n                }\n                {!self && <p className=\"workspace-square-card-meta\">Dylan Tate</p>}\n                <p className=\"workspace-square-card-meta\">Updated 2 hours ago</p>\n                {self && \n                    <>\n                        <ThumbUpIcon className=\"workspace-square-card-icon\" />\n                        <p className=\"workspace-square-card-upvotes\">128</p>\n                    </>\n                }\n            </div>\n            {!self &&\n                <div className=\"workspace-square-card-other\">\n                    <BookmarkIcon className=\"workspace-square-card-icon\" />\n                    <ThumbUpIcon className=\"workspace-square-card-icon\" />\n                    <p className=\"workspace-square-card-upvotes\">128</p>\n                </div>\n            }\n        </Link>\n    )\n}\n\nexport default WorkspaceSquareCard","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Workspaces.jsx",["134","135"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search-Workspaces.jsx",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":22},{"ruleId":"142","severity":1,"message":"146","line":15,"column":8,"nodeType":"144","messageId":"145","endLine":15,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":16,"column":8,"nodeType":"144","messageId":"145","endLine":16,"endColumn":18},{"ruleId":"142","severity":1,"message":"148","line":17,"column":8,"nodeType":"144","messageId":"145","endLine":17,"endColumn":16},{"ruleId":"142","severity":1,"message":"149","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"150","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":15},{"ruleId":"142","severity":1,"message":"151","line":14,"column":11,"nodeType":"144","messageId":"145","endLine":14,"endColumn":18},{"ruleId":"152","severity":1,"message":"153","line":14,"column":28,"nodeType":"154","messageId":"155","endLine":14,"endColumn":30},{"ruleId":"142","severity":1,"message":"156","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"157","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":29,"column":50,"nodeType":"154","messageId":"155","endLine":29,"endColumn":52},{"ruleId":"158","severity":1,"message":"159","line":9,"column":13,"nodeType":"160","endLine":9,"endColumn":61},{"ruleId":"158","severity":1,"message":"159","line":12,"column":21,"nodeType":"160","endLine":12,"endColumn":67},{"ruleId":"158","severity":1,"message":"159","line":18,"column":21,"nodeType":"160","endLine":18,"endColumn":66},{"ruleId":"158","severity":1,"message":"159","line":14,"column":13,"nodeType":"160","endLine":14,"endColumn":59},{"ruleId":"158","severity":1,"message":"159","line":14,"column":13,"nodeType":"160","endLine":14,"endColumn":59},{"ruleId":"142","severity":1,"message":"161","line":2,"column":9,"nodeType":"144","messageId":"145","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"162","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":36},{"ruleId":"142","severity":1,"message":"161","line":2,"column":9,"nodeType":"144","messageId":"145","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"162","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":36},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'OtherWorkspace' is defined but never used.","Identifier","unusedVar","'NewExperiment' is defined but never used.","'Experiment' is defined but never used.","'NotFound' is defined but never used.","'Link' is defined but never used.","'AddIcon' is defined but never used.","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'userAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]