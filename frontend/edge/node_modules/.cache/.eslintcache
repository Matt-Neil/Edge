[{"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js":"1","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js":"2","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js":"3","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js":"4","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx":"5","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx":"6","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx":"7","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js":"8","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js":"9","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js":"10","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx":"11","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx":"12","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx":"13","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx":"14","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Item.jsx":"15","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openItemsContext.js":"16","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Row-Card.jsx":"17","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Square-Card.jsx":"18","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx":"19","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/global.js":"20","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Dataset.jsx":"21","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/items.js":"22","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Model-Node.jsx":"23","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/train.js":"24","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Shortcut.jsx":"25","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/cardFormatContext.js":"26","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Chart.jsx":"27","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/predict.js":"28","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/messageContext.js":"29","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/MessageCard.jsx":"30"},{"size":825,"mtime":1649422925662,"results":"31","hashOfConfig":"32"},{"size":4784,"mtime":1646834713874,"results":"33","hashOfConfig":"32"},{"size":1703,"mtime":1647389201688,"results":"34","hashOfConfig":"32"},{"size":134,"mtime":1639341716098,"results":"35","hashOfConfig":"32"},{"size":5341,"mtime":1649496660909,"results":"36","hashOfConfig":"32"},{"size":6119,"mtime":1649496662606,"results":"37","hashOfConfig":"32"},{"size":984,"mtime":1648485970081,"results":"38","hashOfConfig":"32"},{"size":107,"mtime":1648468753698,"results":"39","hashOfConfig":"32"},{"size":135,"mtime":1641219148050,"results":"40","hashOfConfig":"32"},{"size":136,"mtime":1641050477587,"results":"41","hashOfConfig":"32"},{"size":4428,"mtime":1646999247096,"results":"42","hashOfConfig":"32"},{"size":157,"mtime":1643322933916,"results":"43","hashOfConfig":"32"},{"size":110063,"mtime":1649593436263,"results":"44","hashOfConfig":"32"},{"size":6456,"mtime":1647457044707,"results":"45","hashOfConfig":"32"},{"size":2077,"mtime":1647457064895,"results":"46","hashOfConfig":"32"},{"size":1236,"mtime":1643565439585,"results":"47","hashOfConfig":"32"},{"size":5026,"mtime":1647457090258,"results":"48","hashOfConfig":"32"},{"size":5495,"mtime":1647457092395,"results":"49","hashOfConfig":"32"},{"size":9511,"mtime":1646834938353,"results":"50","hashOfConfig":"32"},{"size":136,"mtime":1643133085776,"results":"51","hashOfConfig":"32"},{"size":45164,"mtime":1649593422469,"results":"52","hashOfConfig":"32"},{"size":135,"mtime":1643901354878,"results":"53","hashOfConfig":"32"},{"size":498,"mtime":1648575114667,"results":"54","hashOfConfig":"32"},{"size":141,"mtime":1645959654919,"results":"55","hashOfConfig":"32"},{"size":3791,"mtime":1646597094714,"results":"56","hashOfConfig":"32"},{"size":806,"mtime":1646834516798,"results":"57","hashOfConfig":"32"},{"size":2707,"mtime":1649067921557,"results":"58","hashOfConfig":"32"},{"size":143,"mtime":1649247579439,"results":"59","hashOfConfig":"32"},{"size":770,"mtime":1649430710639,"results":"60","hashOfConfig":"32"},{"size":195,"mtime":1649423388981,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yw0j30",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js",[],["134","135"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx",["136"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx",["137"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport HeaderOpenItem from '../Components/Header-Open-Item'\n\nconst Header = ({openItems}) => {\n    return (\n        <div className=\"header\">\n            <Link to=\"/home\" className=\"header-home\">\n                <img src=\"http://localhost:3000/home-icon.png\" className=\"header-home-icon\" />\n            </Link>\n            <div className=\"header-open\">\n                {openItems.length !== 0 &&\n                    <>\n                        {openItems.map((item, i) => {\n                            return <HeaderOpenItem item={item} key={i} />\n                        })}\n                    </>\n                }\n            </div>\n            <span />\n            <Link to=\"/account\" className=\"header-account\">\n                <AccountCircleIcon className=\"header-account-icon\" />\n            </Link>\n        </div>\n    )\n}\n\nexport default Header","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx",["138","139"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { CardFormatContext } from '../Contexts/cardFormatContext';\nimport usersAPI from '../API/users'\nimport SearchIcon from '@mui/icons-material/Search';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport Shortcut from '../Components/Shortcut';\n\nconst Home = ({setSearchPhrase}) => {\n    const [recent, setRecent] = useState()\n    const [loaded, setLoaded] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const {cardFormat, changeCardFormat} = useContext(CardFormatContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const recent = await usersAPI.get(\"/recent\");\n\n                setRecent(recent.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <div className=\"home-search\">\n                            <input className=\"home-search-input\" \n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"home-search-icon\" onClick={e => searchFunctionButton()} />\n                        </div>\n                        <div className=\"sidebar-divided\" />\n                        <Link className=\"home-options-link\" to=\"/public-workspaces\">\n                            <p>Public Workspaces</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <Link className=\"home-options-link\" to=\"public-datasets\">\n                            <p>Public Datasets</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"workspaces\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"datasets\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"bookmarked\"} />\n                    </div>\n                    <div className=\"inner\">\n                        <div className=\"home-inner\">\n                            <div className=\"view-items-top\">\n                                <h1>Your Recents</h1>\n                                <div className=\"toggle-card-type\">\n                                    <span />\n                                    <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {changeCardFormat()}} />\n                                    <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {changeCardFormat()}} />\n                                </div>\n                            </div>\n                            <div className=\"view-items-list\">\n                                {recent.length > 0 &&\n                                    <>\n                                        {recent.map((item, i) => {\n                                            return cardFormat ? <ItemRowCard item={item} created={true} key={i} /> : <ItemSquareCard item={item} created={true} key={i} />\n                                        })}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Home\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx",[],["140","141"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx",["156","157","158","159"],"import React, {useState, useEffect, useContext} from 'react'\nimport {Link, useHistory, useParams} from \"react-router-dom\"\nimport { CardFormatContext } from '../Contexts/cardFormatContext';\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport globalAPI from '../API/global'\nimport SearchIcon from '@mui/icons-material/Search';\nimport Shortcut from '../Components/Shortcut'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\n\nconst Search = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const {cardFormat, changeCardFormat} = useContext(CardFormatContext);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (searchPhrase === null) {\n                if (urlPhrase) {\n                    const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n                    if (items.data.data.length < 21) {\n                        setFinishedItems(true)\n                    }\n\n                    setItems(items.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/home\");\n                }\n            } else {\n                const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataItems = async (id) => {\n        if (!finishedItems) {\n            try {\n                const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            {fetchDataItems(items[items.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <div className=\"home-search\">\n                            <input className=\"home-search-input\" \n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"home-search-icon\" onClick={e => searchFunctionButton()} />\n                        </div>\n                        <div className=\"sidebar-divided\" />\n                        <Link className=\"home-options-link\" to=\"/public-workspaces\">\n                            <p>Public Workspaces</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <Link className=\"home-options-link\" to=\"public-datasets\">\n                            <p>Public Datasets</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"workspaces\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"datasets\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"bookmarked\"} />\n                    </div>\n                    <div className=\"inner\">\n                        <div className=\"home-inner\">\n                            <div className=\"view-items-top\">\n                                <h1>Search Results: {urlPhrase}</h1>\n                                <div className=\"toggle-card-type\">\n                                    <span />\n                                    <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {changeCardFormat()}} />\n                                    <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {changeCardFormat()}} />\n                                </div>\n                            </div>\n                            <p className=\"view-items-results\">{`${items.length} Results`}</p>\n                            <div className=\"view-items-list\">\n                                {items.length > 0 &&\n                                    <>\n                                        {items.map((item, i) => {\n                                            return cardFormat ? \n                                                <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={currentUser.id === item.creator} key={i} /> \n                                                : \n                                                <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={currentUser.id === item.creator} key={i} />\n                                        })}\n                                    </>\n                                }\n                            </div>\n                            {items.length >= 0 && finishedItems ?\n                                <p className=\"end-items\">End reached</p>\n                                :\n                                <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Search","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Item.jsx",["160","161","162","163"],"import React, {useState, useContext} from 'react'\nimport { useLocation, Link, useHistory } from 'react-router-dom'\nimport CloseIcon from '@mui/icons-material/Close';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\n\nconst HeaderOpenItems = ({item}) => {\n    const [mouseOver, setMouseOver] = useState(false)\n    const history = useHistory();\n    const location = useLocation();\n    const {removeOpenItems} = useContext(OpenItemsContext);\n\n    const checkCurrent = () => {\n        if (location.pathname.substring(11) === item.id || location.pathname.substring(9) === item.id) return true\n\n        return false\n    }\n\n    const closeItem = () => {\n        removeOpenItems(item.id)\n        \n        if (checkCurrent()) {\n            history.replace(\"/home\")\n        }\n    }\n\n    return (\n        <div className={`item-header ${checkCurrent() && \"item-header-selected\"}`}\n                onMouseEnter={() => {setMouseOver(true)}}\n                onMouseLeave={() => {setMouseOver(false)}}>\n            {item.type === \"workspace\" ? \n                <>\n                    {(checkCurrent() || mouseOver) ? \n                        <img src=\"http://localhost:3000/workspace.png\" /> \n                    : \n                        <img src=\"http://localhost:3000/workspace-grey.png\" />\n                    } \n                </>\n            : \n                <>  \n                    {(checkCurrent() || mouseOver) ? \n                        <img src=\"http://localhost:3000/dataset.png\" /> \n                    :\n                        <img src=\"http://localhost:3000/dataset-grey.png\" />\n                    }\n                </>\n            }\n            <Link to={item.type === \"workspace\" ? `/workspace/${item.id}` : `/dataset/${item.id}`} className=\"item-header-link\">\n                <p className={`item-header-title ${(checkCurrent() || mouseOver) && \"item-header-title-selected\"}`}>{item.title}</p>\n            </Link>\n            <CloseIcon className=\"item-header-close\" onClick={() => {closeItem()}} />\n        </div>\n    )\n}\n\nexport default HeaderOpenItems","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openItemsContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Row-Card.jsx",["164","165","166","167"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport globalAPI from '../API/global'\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst ItemRowCard = ({item, created, creator, currentUserID}) => {\n    const [bookmarked, setBookmarked] = useState(item.bookmarked)\n    const [upvoted, setUpvoted] = useState(item.upvoted)\n    const [upvotes, setUpvotes] = useState(item.upvotes)\n    const [visibility, setVisibility] = useState(item.visibility)\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(item.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const addHeader = () => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${item._id}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${item._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"item-row-card\" onClick={() => {addHeader()}}>\n            <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}>\n                <img src={`http://localhost:4000/images/${item.picture}`} className=\"item-row-card-picture\" />\n            </Link>\n            <div className=\"item-row-card-information\">\n                <div className=\"item-row-card-heading\">\n                    {item.type === \"workspace\" ? <img src=\"http://localhost:3000/workspace.png\" /> : <img src=\"http://localhost:3000/dataset.png\" />}\n                    <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`} className=\"item-row-card-title\">{item.title}</Link>\n                </div>\n                <div>\n                    {!created && <p className=\"item-row-card-meta\">{creator}</p>}\n                    <p className=\"item-row-card-meta\">{date}</p>\n                </div>\n            </div>\n            <div>\n                <ThumbUpIcon className={`item-row-card-icon ${upvoted ? \"blue2\" : \"white\"}`} onClick={() => {updateUpvote()}} />\n                <p className={`item-row-card-upvotes ${upvoted ? \"blue2\" : \"white\"}`}>{upvotes}</p>\n                {!created && item.creator !== currentUserID && <BookmarkIcon className={`item-row-card-icon ${bookmarked ? \"blue2\" : \"white\"}`} onClick={() => {updateBookmark()}} />}\n                {created && \n                    <>\n                        {visibility ? \n                            <VisibilityIcon className=\"item-row-card-visibility\" onClick={() => {updateVisibility()}} />\n                        :\n                            <VisibilityOffIcon className=\"item-row-card-visibility\" onClick={() => {updateVisibility()}} />\n                        }\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ItemRowCard","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Square-Card.jsx",["168","169","170","171"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport globalAPI from '../API/global'\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst ItemSquareCard = ({item, created, creator, currentUserID}) => {\n    const [bookmarked, setBookmarked] = useState(item.bookmarked)\n    const [upvoted, setUpvoted] = useState(item.upvoted)\n    const [upvotes, setUpvotes] = useState(item.upvotes)\n    const [visibility, setVisibility] = useState(item.visibility)\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(item.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const addHeader = () => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${item._id}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${item._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"item-square-card\" onClick={() => {addHeader()}}>\n            <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}>\n                <img src={`http://localhost:4000/images/${item.picture}`} className=\"item-square-card-picture\" />\n            </Link>\n            <div className=\"item-square-card-heading\">\n                {item.type === \"workspace\" ? <img src=\"http://localhost:3000/workspace.png\" /> : <img src=\"http://localhost:3000/dataset.png\" />}\n                <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`} className=\"item-square-card-title\">{item.title}</Link>\n            </div>\n            <div>\n                <p className=\"item-square-card-meta\">{created ? \"You\" : creator}</p>\n                <p className=\"item-square-card-meta\">{date}</p>\n            </div>\n            <div className=\"item-square-card-bottom\">\n                {!created ?\n                    <>\n                        <ThumbUpIcon className={`item-square-card-icon ${upvoted ? \"blue2\" : \"white\"}`} onClick={() => {updateUpvote()}} />\n                        <p className={`item-square-card-upvotes ${upvoted ? \"blue2\" : \"white\"}`}>{upvotes}</p>\n                        {item.creator !== currentUserID && <BookmarkIcon className={`item-square-card-icon ${bookmarked ? \"blue2\" : \"white\"}`} onClick={() => {updateBookmark()}} />}\n                    </>\n                    :\n                    <>\n                        <ThumbUpIcon className={`item-square-card-icon ${upvoted ? \"blue2\" : \"white\"}`} onClick={() => {updateUpvote()}} />\n                        <p className={`item-square-card-upvotes ${upvoted ? \"blue2\" : \"white\"}`}>{upvotes}</p>\n                        {created && \n                            <>\n                                {visibility ? \n                                    <VisibilityIcon className=\"item-square-card-visibility\" onClick={() => {updateVisibility()}} />\n                                :\n                                    <VisibilityOffIcon className=\"item-square-card-visibility\" onClick={() => {updateVisibility()}} />\n                                }\n                            </>\n                        }\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ItemSquareCard","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx",["172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHistory, Link} from \"react-router-dom\"\nimport { CardFormatContext } from '../Contexts/cardFormatContext';\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport Shortcut from '../Components/Shortcut'\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport SearchIcon from '@mui/icons-material/Search';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\n\nconst ViewItems = ({type, currentUser, setSearchPhrase}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const {cardFormat, changeCardFormat} = useContext(CardFormatContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let items;\n\n                switch (type) {\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created?type=dataset&date=${new Date().toISOString()}`);\n                        break;\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created?type=workspace&date=${new Date().toISOString()}`);\n                        break;\n                    case \"bookmarks\":\n                        items = await usersAPI.get(`/bookmarked?date=${new Date().toISOString()}`);\n                        break;\n                    case \"public-workspaces\":\n                        items = await itemsAPI.get(`/public?type=workspace&date=${new Date().toISOString()}`);\n                        break;\n                    case \"public-datasets\":\n                        items = await itemsAPI.get(`/public?type=dataset&date=${new Date().toISOString()}`);\n                        break;\n                }\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n    \n    const fetchDataItems = async (date) => {\n        if (!finishedItems) {\n            try {\n                let fetchedItems;\n\n                switch (type) {\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created?type=dataset&date=${date}`);\n                        break;\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created?type=workspace&date=${date}`);\n                        break;\n                    case \"bookmarks\":\n                        items = await usersAPI.get(`/bookmarked?date=${date}`);\n                        break;\n                    case \"public-workspaces\":\n                        items = await itemsAPI.get(`/public?type=workspace&date=${date}`);\n                        break;\n                    case \"public-datasets\":\n                        items = await itemsAPI.get(`/public?type=dataset&date=${date}`);\n                        break;   \n                }\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            if (type === \"public-workspaces\" || type === \"public-datasets\") {\n                {fetchDataItems(items[items.length-1].createdAt)}\n            } else {\n                {fetchDataItems(items[items.length-1].updatedAt)}\n            }\n        }\n    };\n\n    const displayHeading = () => {\n        let heading;\n\n        switch (type) {\n            case \"created-workspaces\":\n                heading = \"Your Workspaces\"\n                break;\n            case \"created-datasets\":\n                heading = \"Your Datasets\"\n                break;\n            case \"bookmarks\":\n                heading = \"Your Bookmarks\"\n                break;\n            case \"public-workspaces\":\n                heading = \"Public Workspaces\"\n                break;\n            case \"public-datasets\":\n                heading = \"Public Datasets\"\n                break;\n        }\n\n        return <h1>{heading}</h1>\n    }\n    \n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <div className=\"home-search\">\n                            <input className=\"home-search-input\" \n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"home-search-icon\" onClick={e => searchFunctionButton()} />\n                        </div>\n                        <div className=\"sidebar-divided\" />\n                        <Link className=\"home-options-link\" to=\"/public-workspaces\">\n                            <p>Public Workspaces</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <Link className=\"home-options-link\" to=\"public-datasets\">\n                            <p>Public Datasets</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"workspaces\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"datasets\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"bookmarks\"} />\n                    </div>\n                    <div className=\"inner\">\n                        <div className=\"home-inner\">\n                            <div className=\"view-items-top\">\n                                {displayHeading()}\n                                {type === \"created-workspaces\" && <Link to=\"/create-workspace\" className=\"blue-button\">Create Workspace</Link>}\n                                {type === \"created-datasets\" && <Link to=\"/create-dataset\" className=\"blue-button\">Create Dataset</Link>}\n                                <div className=\"toggle-card-type\">\n                                    <span />\n                                    <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {changeCardFormat()}} />\n                                    <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {changeCardFormat()}} />\n                                </div>\n                            </div>\n                            {(type === \"created-workspaces\" || type === \"public-workspaces\") ?\n                                <p className=\"view-items-results\">{`${items.length} Workspaces`}</p>\n                            : (type === \"created-datasets\" || type === \"public-datasets\") ?\n                                <p className=\"view-items-results\">{`${items.length} Datasets`}</p>\n                            :\n                                <p className=\"view-items-results\">{`${items.length} Bookmarks`}</p>\n                            }\n                            <div className=\"view-items-list\">\n                                {items.length > 0 &&\n                                    <>\n                                        {items.map((item, i) => {\n                                            if (type === \"created-workspaces\" || type === \"created-datasets\") return cardFormat ? <ItemRowCard item={item} created={true} key={i} /> : <ItemSquareCard item={item} created={true} key={i} />\n\n                                            return cardFormat ?\n                                                <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={currentUser.id === item.creator} key={i} /> \n                                                : \n                                                <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={currentUser.id === item.creator} key={i} />\n                                        })}\n                                    </>\n                                }\n                            </div>\n                            {items.length >= 0 && finishedItems ?\n                                <p className=\"end-items\">End reached</p>\n                                :\n                                <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default ViewItems","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/global.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Dataset.jsx",["185","186","187","188","189","190","191","192","193","194","195","196","197"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/items.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Model-Node.jsx",["198"],"import React from 'react'\n\nconst ModelNode = ({type, selected, last}) => {\n    return (\n        <div className={`model-node ${type === \"Input\" && \"model-node-input\"}`}>\n            <div className={selected ? \"model-node-selected\" : \"model-node-unselected\"}>\n                <p>{type}</p>\n            </div>\n            {!last &&\n                <img src=\"http://localhost:3000/Node-Connector.png\" className=\"model-node-connector\" />\n            }\n        </div>\n    )\n};\n\nexport default ModelNode;\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/train.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Shortcut.jsx",["199","200"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom';\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Shortcut = ({type, currentUserID, datasetID}) => {\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let items;\n\n                if (type === \"workspaces\") {\n                    items = await usersAPI.get(`/created-shortcut?type=workspace`);\n                } else if (type === \"datasets\") {\n                    items = await usersAPI.get(`/created-shortcut?type=dataset`);\n                } else if (type === \"bookmarked\") {\n                    items = await usersAPI.get(`/bookmarked-shortcut`);\n                } else {\n                    items = await itemsAPI.get(`/associated-workspaces?id=${datasetID}`);\n                }\n\n                setItems(items.data.data)\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const addHeader = (item) => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"shortcut\">\n                    <div className=\"shortcut-header\">\n                        {type === \"related\" ?\n                            <p className=\"shortcut-link\">Related Workspaces</p>\n                        :\n                            <Link className=\"shortcut-link\"\n                                    to={type === \"workspaces\" ? \"/created-workspaces\" : (type === \"datasets\") ? \"/created-datasets\" : \"/bookmarked\"}>\n                                {type === \"workspaces\" ? \"Your Workspaces\" : (type === \"datasets\") ? \"Your Datasets\" : \"Your Bookmarked\"}\n                            </Link>\n                        }\n                        <span />\n                        {type === \"workspaces\" && \n                            <Link to=\"/create-workspace\">\n                                <AddIcon className=\"shortcut-icon\" />\n                            </Link>\n                        }\n                        {type === \"datasets\" && \n                            <Link to=\"/create-dataset\">\n                                <AddIcon className=\"shortcut-icon\" />\n                            </Link>\n                        }\n                    </div>\n                    <div className=\"shortcut-body\">\n                        {items.length === 0 ?\n                            <p className=\"shortcut-none\">Empty</p>\n                        :\n                            <>\n                                {items.map((item, i) => {\n                                    return (\n                                        <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}\n                                                className=\"shortcut-item\" \n                                                onClick={() => {addHeader(item)}}\n                                                key={i}>\n                                            <img src={`http://localhost:4000/images/${item.picture}`} />\n                                            <p>{item.title}</p>\n                                        </Link>\n                                    )\n                                })}\n                            </>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Shortcut","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/cardFormatContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Chart.jsx",["201"],"import React from 'react'\nimport { Line } from 'react-chartjs-2';\nimport Chart from '../Components/Chart';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst ChartComponent = ({x, y1, y2, type}) => {\n    return (\n        <div className=\"chart\">\n            <p className=\"chart-title\">{type} / Epochs</p>\n            <Line \n                data={{\n                    labels: x,\n                    datasets: [\n                        {\n                            label: `Training ${type}`,\n                            data: y1,\n                            borderColor: '#3C51F9',\n                            tension: 0,\n                            backgroundColor: ['#FBFBFB'],\n                        },\n                        {\n                            label: `Validation ${type}`,\n                            fill: false,\n                            borderDash: [5, 5],\n                            data: y2,\n                            borderColor: '#3C51F9',\n                            tension: 0,\n                            backgroundColor: ['#FBFBFB'],\n                        }\n                    ],\n                }} \n                options={{\n                    plugins: {\n                        legend: {\n                            display: true,\n                            position: 'right'\n                        }\n                    },\n                    scales: {\n                        x: {\n                            display: true,\n                            title: {\n                                display: true,\n                                text: 'Epochs',\n                                color: '#FBFBFB',\n                                padding: {top: 10, left: 0, right: 0, bottom: 0}\n                            }\n                        },\n                        y: {\n                            display: true,\n                            title: {\n                                display: true,\n                                text: type,\n                                color: '#FBFBFB',\n                                padding: {top: 0, left: 0, right: 0, bottom: 10}\n                            }\n                        }\n                    },\n                    maintainAspectRatio: false,\n                    responsive: false,\n                    animation: false\n                }}\n                height={400} \n                width={650}\n            />\n        </div>\n    )\n}\n\nexport default ChartComponent","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/predict.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/messageContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/MessageCard.jsx",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":38,"column":8,"nodeType":"208","endLine":38,"endColumn":10,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":10,"column":17,"nodeType":"212","endLine":10,"endColumn":95},{"ruleId":"210","severity":1,"message":"211","line":79,"column":37,"nodeType":"212","endLine":79,"endColumn":156},{"ruleId":"210","severity":1,"message":"211","line":80,"column":37,"nodeType":"212","endLine":80,"endColumn":157},{"ruleId":"202","replacedBy":"213"},{"ruleId":"204","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":77,"column":57,"nodeType":"217","messageId":"218","endLine":77,"endColumn":59},{"ruleId":"215","severity":1,"message":"216","line":117,"column":46,"nodeType":"217","messageId":"218","endLine":117,"endColumn":48},{"ruleId":"206","severity":1,"message":"219","line":136,"column":8,"nodeType":"208","endLine":136,"endColumn":10,"suggestions":"220"},{"ruleId":"206","severity":1,"message":"221","line":176,"column":8,"nodeType":"208","endLine":176,"endColumn":25,"suggestions":"222"},{"ruleId":"215","severity":1,"message":"216","line":252,"column":46,"nodeType":"217","messageId":"218","endLine":252,"endColumn":48},{"ruleId":"215","severity":1,"message":"216","line":405,"column":32,"nodeType":"217","messageId":"218","endLine":405,"endColumn":34},{"ruleId":"215","severity":1,"message":"216","line":531,"column":46,"nodeType":"217","messageId":"218","endLine":531,"endColumn":48},{"ruleId":"210","severity":1,"message":"211","line":626,"column":29,"nodeType":"212","endLine":627,"endColumn":128},{"ruleId":"210","severity":1,"message":"211","line":710,"column":41,"nodeType":"212","endLine":710,"endColumn":112},{"ruleId":"223","severity":1,"message":"224","line":779,"column":98,"nodeType":"225","messageId":"226","endLine":791,"endColumn":98},{"ruleId":"223","severity":1,"message":"224","line":948,"column":109,"nodeType":"225","messageId":"226","endLine":960,"endColumn":110},{"ruleId":"210","severity":1,"message":"211","line":1451,"column":57,"nodeType":"212","endLine":1451,"endColumn":106},{"ruleId":"215","severity":1,"message":"227","line":1472,"column":72,"nodeType":"217","messageId":"228","endLine":1472,"endColumn":74},{"ruleId":"210","severity":1,"message":"211","line":1476,"column":65,"nodeType":"212","endLine":1476,"endColumn":181},{"ruleId":"206","severity":1,"message":"229","line":47,"column":8,"nodeType":"208","endLine":47,"endColumn":10,"suggestions":"230"},{"ruleId":"223","severity":1,"message":"224","line":79,"column":13,"nodeType":"225","messageId":"226","endLine":79,"endColumn":56},{"ruleId":"210","severity":1,"message":"211","line":118,"column":37,"nodeType":"212","endLine":118,"endColumn":156},{"ruleId":"210","severity":1,"message":"211","line":119,"column":37,"nodeType":"212","endLine":119,"endColumn":157},{"ruleId":"210","severity":1,"message":"211","line":33,"column":25,"nodeType":"212","endLine":33,"endColumn":74},{"ruleId":"210","severity":1,"message":"211","line":35,"column":25,"nodeType":"212","endLine":35,"endColumn":79},{"ruleId":"210","severity":1,"message":"211","line":41,"column":25,"nodeType":"212","endLine":41,"endColumn":72},{"ruleId":"210","severity":1,"message":"211","line":43,"column":25,"nodeType":"212","endLine":43,"endColumn":77},{"ruleId":"206","severity":1,"message":"231","line":35,"column":8,"nodeType":"208","endLine":35,"endColumn":10,"suggestions":"232"},{"ruleId":"210","severity":1,"message":"211","line":76,"column":17,"nodeType":"212","endLine":76,"endColumn":111},{"ruleId":"210","severity":1,"message":"211","line":80,"column":50,"nodeType":"212","endLine":80,"endColumn":99},{"ruleId":"210","severity":1,"message":"211","line":80,"column":102,"nodeType":"212","endLine":80,"endColumn":149},{"ruleId":"206","severity":1,"message":"231","line":35,"column":8,"nodeType":"208","endLine":35,"endColumn":10,"suggestions":"233"},{"ruleId":"210","severity":1,"message":"211","line":76,"column":17,"nodeType":"212","endLine":76,"endColumn":114},{"ruleId":"210","severity":1,"message":"211","line":79,"column":46,"nodeType":"212","endLine":79,"endColumn":95},{"ruleId":"210","severity":1,"message":"211","line":79,"column":98,"nodeType":"212","endLine":79,"endColumn":145},{"ruleId":"234","severity":1,"message":"235","line":25,"column":17,"nodeType":"236","messageId":"237","endLine":41,"endColumn":18},{"ruleId":"206","severity":1,"message":"238","line":52,"column":8,"nodeType":"208","endLine":52,"endColumn":10,"suggestions":"239"},{"ruleId":"234","severity":1,"message":"235","line":73,"column":17,"nodeType":"236","messageId":"237","endLine":89,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":75,"column":25,"nodeType":"242","messageId":"243","endLine":75,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":78,"column":25,"nodeType":"242","messageId":"243","endLine":78,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":81,"column":25,"nodeType":"242","messageId":"243","endLine":81,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":84,"column":25,"nodeType":"242","messageId":"243","endLine":84,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":87,"column":25,"nodeType":"242","messageId":"243","endLine":87,"endColumn":30},{"ruleId":"223","severity":1,"message":"224","line":103,"column":17,"nodeType":"225","messageId":"226","endLine":103,"endColumn":66},{"ruleId":"223","severity":1,"message":"224","line":105,"column":17,"nodeType":"225","messageId":"226","endLine":105,"endColumn":66},{"ruleId":"234","severity":1,"message":"235","line":113,"column":9,"nodeType":"236","messageId":"237","endLine":129,"endColumn":10},{"ruleId":"210","severity":1,"message":"211","line":171,"column":37,"nodeType":"212","endLine":171,"endColumn":156},{"ruleId":"210","severity":1,"message":"211","line":172,"column":37,"nodeType":"212","endLine":172,"endColumn":157},{"ruleId":"215","severity":1,"message":"216","line":72,"column":53,"nodeType":"217","messageId":"218","endLine":72,"endColumn":55},{"ruleId":"215","severity":1,"message":"216","line":102,"column":46,"nodeType":"217","messageId":"218","endLine":102,"endColumn":48},{"ruleId":"206","severity":1,"message":"244","line":119,"column":8,"nodeType":"208","endLine":119,"endColumn":10,"suggestions":"245"},{"ruleId":"206","severity":1,"message":"221","line":140,"column":8,"nodeType":"208","endLine":140,"endColumn":25,"suggestions":"246"},{"ruleId":"206","severity":1,"message":"247","line":148,"column":8,"nodeType":"208","endLine":148,"endColumn":16,"suggestions":"248"},{"ruleId":"215","severity":1,"message":"216","line":178,"column":51,"nodeType":"217","messageId":"218","endLine":178,"endColumn":53},{"ruleId":"249","severity":1,"message":"250","line":556,"column":34,"nodeType":"242","messageId":"251","endLine":556,"endColumn":42},{"ruleId":"210","severity":1,"message":"211","line":576,"column":29,"nodeType":"212","endLine":577,"endColumn":126},{"ruleId":"210","severity":1,"message":"211","line":797,"column":65,"nodeType":"212","endLine":797,"endColumn":105},{"ruleId":"215","severity":1,"message":"227","line":828,"column":76,"nodeType":"217","messageId":"228","endLine":828,"endColumn":78},{"ruleId":"210","severity":1,"message":"211","line":832,"column":61,"nodeType":"212","endLine":841,"endColumn":63},{"ruleId":"215","severity":1,"message":"227","line":866,"column":76,"nodeType":"217","messageId":"228","endLine":866,"endColumn":78},{"ruleId":"210","severity":1,"message":"211","line":870,"column":61,"nodeType":"212","endLine":870,"endColumn":168},{"ruleId":"210","severity":1,"message":"211","line":10,"column":17,"nodeType":"212","endLine":10,"endColumn":104},{"ruleId":"206","severity":1,"message":"252","line":33,"column":8,"nodeType":"208","endLine":33,"endColumn":10,"suggestions":"253"},{"ruleId":"210","severity":1,"message":"211","line":77,"column":45,"nodeType":"212","endLine":77,"endColumn":105},{"ruleId":"254","severity":1,"message":"255","line":3,"column":8,"nodeType":"242","messageId":"256","endLine":3,"endColumn":13},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayMessageInterval'. Either include it or remove the dependency array.","ArrayExpression",["259"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["257"],["258"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'addOpenItems', 'type', and 'workspaceID'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'exist'. Either include it or remove the dependency array.",["261"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'history', 'searchPhrase', and 'urlPhrase'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'item.updated'. Either include it or remove the dependency array.",["263"],["264"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["265"],"no-const-assign","'items' is constant.","Identifier","const","React Hook useEffect has missing dependencies: 'addOpenItems', 'datasetID', and 'type'. Either include them or remove the dependency array.",["266"],["267"],"React Hook useEffect has missing dependencies: 'loaded' and 'updateDataset'. Either include them or remove the dependency array.",["268"],"no-use-before-define","'formData' was used before it was defined.","usedBeforeDefined","React Hook useEffect has missing dependencies: 'datasetID' and 'type'. Either include them or remove the dependency array.",["269"],"no-unused-vars","'Chart' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"274","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [displayMessageInterval]",{"range":"290","text":"291"},"Update the dependencies array to be: [addOpenItems, type, workspaceID]",{"range":"292","text":"293"},"Update the dependencies array to be: [exist, loaded, updated]",{"range":"294","text":"295"},"Update the dependencies array to be: [history, searchPhrase, urlPhrase]",{"range":"296","text":"297"},"Update the dependencies array to be: [item.updated]",{"range":"298","text":"299"},{"range":"300","text":"299"},"Update the dependencies array to be: [type]",{"range":"301","text":"302"},"Update the dependencies array to be: [addOpenItems, datasetID, type]",{"range":"303","text":"304"},{"range":"305","text":"295"},"Update the dependencies array to be: [labels, loaded, updateDataset]",{"range":"306","text":"307"},"Update the dependencies array to be: [datasetID, type]",{"range":"308","text":"309"},[1532,1534],"[displayMessageInterval]",[6975,6977],"[addOpenItems, type, workspaceID]",[8931,8948],"[exist, loaded, updated]",[1790,1792],"[history, searchPhrase, urlPhrase]",[2202,2204],"[item.updated]",[2205,2207],[2236,2238],"[type]",[5647,5649],"[addOpenItems, datasetID, type]",[7096,7113],[7286,7294],"[labels, loaded, updateDataset]",[1262,1264],"[datasetID, type]"]