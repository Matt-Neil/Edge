[{"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js":"1","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js":"2","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js":"3","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js":"4","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx":"5","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx":"6","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx":"7","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js":"8","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js":"9","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Data.jsx":"10","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js":"11","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx":"12","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Workspace.jsx":"13","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openWorkspacesContext.js":"14","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Experiment.jsx":"15","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx":"16","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx":"17","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Workspaces.jsx":"18","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/workspaces.js":"19","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Feed-Workspace-Card.jsx":"20","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Self-Workspaces.jsx":"21","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Row-Card.jsx":"22","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Square-Card.jsx":"23","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Workspaces.jsx":"24","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search-Workspaces.jsx":"25","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx":"26"},{"size":495,"mtime":1642349270944,"results":"27","hashOfConfig":"28"},{"size":4238,"mtime":1642864368075,"results":"29","hashOfConfig":"28"},{"size":1766,"mtime":1641237875936,"results":"30","hashOfConfig":"28"},{"size":134,"mtime":1639341716098,"results":"31","hashOfConfig":"28"},{"size":4419,"mtime":1642348558560,"results":"32","hashOfConfig":"28"},{"size":2286,"mtime":1642812878719,"results":"33","hashOfConfig":"28"},{"size":1416,"mtime":1642810805822,"results":"34","hashOfConfig":"28"},{"size":134,"mtime":1640810261516,"results":"35","hashOfConfig":"28"},{"size":135,"mtime":1641219148050,"results":"36","hashOfConfig":"28"},{"size":1330,"mtime":1641065585265,"results":"37","hashOfConfig":"28"},{"size":136,"mtime":1641050477587,"results":"38","hashOfConfig":"28"},{"size":3331,"mtime":1642812550574,"results":"39","hashOfConfig":"28"},{"size":10902,"mtime":1642348816799,"results":"40","hashOfConfig":"28"},{"size":1217,"mtime":1642864101778,"results":"41","hashOfConfig":"28"},{"size":150,"mtime":1642349107492,"results":"42","hashOfConfig":"28"},{"size":144,"mtime":1642348874732,"results":"43","hashOfConfig":"28"},{"size":140,"mtime":1642348562273,"results":"44","hashOfConfig":"28"},{"size":1163,"mtime":1642811422863,"results":"45","hashOfConfig":"28"},{"size":140,"mtime":1642348244514,"results":"46","hashOfConfig":"28"},{"size":2749,"mtime":1642812122323,"results":"47","hashOfConfig":"28"},{"size":3421,"mtime":1642820099324,"results":"48","hashOfConfig":"28"},{"size":3612,"mtime":1642866332582,"results":"49","hashOfConfig":"28"},{"size":3944,"mtime":1642866306071,"results":"50","hashOfConfig":"28"},{"size":6994,"mtime":1642823502485,"results":"51","hashOfConfig":"28"},{"size":5131,"mtime":1642822924912,"results":"52","hashOfConfig":"28"},{"size":4781,"mtime":1642868297097,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"yw0j30",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js",[],["109","110"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js",["111","112","113"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Data.jsx",["114"],"import React, {useState, useEffect} from 'react'\n\nconst ViewData = ({displayData}) => {\n    const [header, setHeader] = useState([])\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        setHeader([])\n        setData([])\n        \n        const tempData = displayData.slice(displayData.indexOf('\\n')+1).split('\\n');\n        setHeader(displayData.slice(0, displayData.indexOf('\\n')).split(','))\n\n        tempData.map((row) => {\n            setData(previous => [...previous, row.split(',')])\n        })\n    }, [displayData])\n\n    const displayHeader = () => {\n        return (\n            header.map((item, i) => {\n                return <th key={i}>{item}</th>\n            })\n        )\n    }\n    \n    const displayBody = () => {\n        return (\n            data.map((row, i) => {\n                return (\n                    <tr key={i}>\n                        {row.map((item, j) => {\n                            return <td key={j}>{item}</td>\n                        })}\n                    </tr>\n                )\n            })\n        )\n    }\n\n    return (\n        <table className=\"project-data-table\">\n            <tbody>\n                <tr>\n                    {displayHeader()}\n                </tr>\n                {displayBody()}\n            </tbody>\n        </table>\n    )\n}\n\nexport default ViewData\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Workspace.jsx",["115","116"],"import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport projectAPI from '../API/projects'\nimport userAPI from '../API/users'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\n\nconst NewProject = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [data, setData] = useState();\n    const [displayData, setDisplayData] = useState();\n    const [importMethod, setImportMethod] = useState(\"\")\n    const [image, setImage] = useState();\n    const [dataID, setDataID] = useState(\"\")\n    const [projects, setProjects] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectAPI.get(\"/\");\n\n                projects.data.data.map((project) => {\n                    setProjects(previous => [...previous, project.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (data !== undefined) {\n            setDataID(\"\")\n\n            const file = data;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDisplayData(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [data])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataID(\"\")\n        setData()\n        setDisplayData()\n    }\n\n    const existingProject = () => {\n        setData(undefined)\n\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n            .then(response => response.text())\n            .then(text => {setDisplayData(text)})\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const projectResponse = await projectAPI.post(\"/\", {\n                title: title,\n                data: \"none\",\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                visibility: visibility\n            });\n\n            uploadFile(projectResponse.data.data)\n        } catch (err) {}\n    }\n\n    const uploadFile = async (projectID) => {\n        if (importMethod === \"file\" && data !== undefined) {\n            const formData = new FormData();\n\n            formData.append('data', data);\n            formData.append('id', projectID)\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n            \n            try {\n                await projectAPI.put(`/${projectID}`, {\n                    data: `${projectID}-data`\n                });\n\n                history.push(`/project/${projectID}`)\n            } catch (err) {}\n        } else if (importMethod === \"existing\" && dataID !== \"\") {\n            try {\n                await projectAPI.put(`/${projectID}`, {\n                    data: dataID\n                });\n\n                history.push(`/project/${projectID}`)\n            } catch (err) {}\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-project\">\n                    <div className=\"sidebar\">\n                        <h1>New Project</h1> \n                        <div className=\"new-project-header\">\n                            <p className=\"new-project-title\">{title}</p> \n                        </div>\n                        <button className={`${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"sidebar-stage\"} ${!setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled>Data</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-project-setup\">\n                            <div className=\"new-project-setup-information\">\n                                <input className=\"new-project-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-project-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onClick={() => {setVisibility(previous => !previous)}}\n                                            value={visibility} />\n                                </div>\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImage(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-project-nav\">   \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { !setupStage &&\n                        <>\n                            <div className=\"new-project-import\">\n                                <div className=\"new-project-import-options\">\n                                    <p>Import Data</p>\n                                    <button onClick={() => {setImportMethod(\"existing\")}}>Existing Data</button>\n                                    <button onClick={() => {setImportMethod(\"file\")}}>Upload File</button>\n                                </div>\n                                <div className=\"new-project-import-method\">\n                                {importMethod !== \"\" &&\n                                    <>\n                                        {importMethod === \"file\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    key={Date.now()}\n                                                    onChange={e => {setData(e.target.files[0])}} />\n                                        :\n                                            <>\n                                                <input className=\"new-project-import-projectid\"\n                                                        placeholder=\"Data ID\"\n                                                        onChange={e => {setDataID(e.target.value)}}\n                                                        value={dataID} />\n                                                <button className=\"new-project-next\"\n                                                        disabled={dataID === \"\"}\n                                                        onClick={() => {existingProject()}}>Fetch</button>\n                                            </>\n                                        }\n                                    </>\n                                }\n                                </div>\n                                {(data !== undefined || dataID !== \"\") && displayData !== undefined &&\n                                    <div className=\"new-project-data\">\n                                        <div className=\"new-project-data-information\">\n                                            {data !== undefined ?\n                                                <p className=\"new-project-filename\">File: {data.name}</p> \n                                                :\n                                                <p className=\"new-project-filename\">Data: {dataID}</p> \n                                            }\n                                            <button className=\"new-project-cancel\"\n                                                    onClick={() => {remove()}}>Remove</button>\n                                        </div>\n                                        <div className=\"new-project-data-table\">\n                                            <ViewData displayData={displayData} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        disabled={disableCreate}\n                                        onClick={() => {uploadImage()}}>Create</button>\n                            </div>\n                        </>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewProject\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openWorkspacesContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Experiment.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Workspaces.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/workspaces.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Feed-Workspace-Card.jsx",["117","118","119"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Self-Workspaces.jsx",["120","121"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Row-Card.jsx",["122","123"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Square-Card.jsx",["124","125"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Workspaces.jsx",["126","127","128","129","130"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search-Workspaces.jsx",["131","132","133","134","135"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx",["136","137","138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":14,"column":8,"nodeType":"146","messageId":"147","endLine":14,"endColumn":21},{"ruleId":"144","severity":1,"message":"148","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":18},{"ruleId":"144","severity":1,"message":"149","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":14,"column":28,"nodeType":"152","messageId":"153","endLine":14,"endColumn":30},{"ruleId":"144","severity":1,"message":"154","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":29,"column":50,"nodeType":"152","messageId":"153","endLine":29,"endColumn":52},{"ruleId":"155","severity":1,"message":"156","line":24,"column":8,"nodeType":"157","endLine":24,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":28,"column":13,"nodeType":"161","endLine":28,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":31,"column":21,"nodeType":"161","endLine":31,"endColumn":86},{"ruleId":"159","severity":1,"message":"160","line":47,"column":45,"nodeType":"161","endLine":47,"endColumn":110},{"ruleId":"159","severity":1,"message":"160","line":59,"column":45,"nodeType":"161","endLine":59,"endColumn":110},{"ruleId":"155","severity":1,"message":"156","line":28,"column":8,"nodeType":"157","endLine":28,"endColumn":10,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"160","line":39,"column":17,"nodeType":"161","endLine":39,"endColumn":82},{"ruleId":"155","severity":1,"message":"156","line":28,"column":8,"nodeType":"157","endLine":28,"endColumn":10,"suggestions":"163"},{"ruleId":"159","severity":1,"message":"160","line":39,"column":17,"nodeType":"161","endLine":39,"endColumn":82},{"ruleId":"155","severity":1,"message":"164","line":41,"column":8,"nodeType":"157","endLine":41,"endColumn":10,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":88,"column":17,"nodeType":"168","messageId":"169","endLine":88,"endColumn":81},{"ruleId":"166","severity":1,"message":"167","line":90,"column":17,"nodeType":"168","messageId":"169","endLine":90,"endColumn":81},{"ruleId":"159","severity":1,"message":"160","line":129,"column":29,"nodeType":"161","endLine":129,"endColumn":147},{"ruleId":"159","severity":1,"message":"160","line":130,"column":29,"nodeType":"161","endLine":130,"endColumn":149},{"ruleId":"144","severity":1,"message":"170","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},{"ruleId":"155","severity":1,"message":"171","line":44,"column":8,"nodeType":"157","endLine":44,"endColumn":10,"suggestions":"172"},{"ruleId":"166","severity":1,"message":"167","line":76,"column":13,"nodeType":"168","messageId":"169","endLine":76,"endColumn":71},{"ruleId":"159","severity":1,"message":"160","line":98,"column":29,"nodeType":"161","endLine":98,"endColumn":147},{"ruleId":"159","severity":1,"message":"160","line":99,"column":29,"nodeType":"161","endLine":99,"endColumn":149},{"ruleId":"144","severity":1,"message":"173","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"170","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},{"ruleId":"155","severity":1,"message":"174","line":24,"column":8,"nodeType":"157","endLine":24,"endColumn":10,"suggestions":"175"},{"ruleId":"159","severity":1,"message":"160","line":62,"column":37,"nodeType":"161","endLine":62,"endColumn":102},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'NewExperiment' is defined but never used.","Identifier","unusedVar","'Experiment' is defined but never used.","'NotFound' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'userAPI' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'workspace.updatedAt'. Either include it or remove the dependency array.","ArrayExpression",["178"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["179"],["180"],"React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["181"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'searchPhrase', and 'urlPhrase'. Either include them or remove the dependency array.",["182"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'workspaceID'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [workspace.updatedAt]",{"range":"194","text":"195"},{"range":"196","text":"195"},{"range":"197","text":"195"},"Update the dependencies array to be: [type]",{"range":"198","text":"199"},"Update the dependencies array to be: [history, searchPhrase, urlPhrase]",{"range":"200","text":"201"},"Update the dependencies array to be: [workspaceID]",{"range":"202","text":"203"},[1603,1605],"[workspace.updatedAt]",[1898,1900],[1901,1903],[1708,1710],"[type]",[1687,1689],"[history, searchPhrase, urlPhrase]",[843,845],"[workspaceID]"]