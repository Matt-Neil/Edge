[{"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js":"1","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js":"2","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js":"3","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js":"4","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx":"5","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx":"6","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx":"7","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js":"8","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js":"9","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js":"10","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx":"11","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx":"12","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx":"13","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/workspaces.js":"14","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx":"15","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Shortcut.jsx":"16","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx":"17","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Item.jsx":"18","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openItemsContext.js":"19","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Feed-Card.jsx":"20","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Row-Card.jsx":"21","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Square-Card.jsx":"22","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx":"23","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/datasets.js":"24","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/global.js":"25","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Dataset.jsx":"26","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Dataset.jsx":"27","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Experiment.jsx":"28","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Workspace.jsx":"29","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/items.js":"30","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Model-Node.jsx":"31","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Experiment-Card.jsx":"32"},{"size":475,"mtime":1643123857789,"results":"33","hashOfConfig":"34"},{"size":5465,"mtime":1644715264397,"results":"35","hashOfConfig":"34"},{"size":1703,"mtime":1643565273503,"results":"36","hashOfConfig":"34"},{"size":134,"mtime":1639341716098,"results":"37","hashOfConfig":"34"},{"size":4024,"mtime":1645027601977,"results":"38","hashOfConfig":"34"},{"size":3194,"mtime":1644767318169,"results":"39","hashOfConfig":"34"},{"size":1151,"mtime":1645661094216,"results":"40","hashOfConfig":"34"},{"size":134,"mtime":1640810261516,"results":"41","hashOfConfig":"34"},{"size":135,"mtime":1641219148050,"results":"42","hashOfConfig":"34"},{"size":136,"mtime":1641050477587,"results":"43","hashOfConfig":"34"},{"size":3375,"mtime":1643903495694,"results":"44","hashOfConfig":"34"},{"size":27051,"mtime":1645359546113,"results":"45","hashOfConfig":"34"},{"size":157,"mtime":1643322933916,"results":"46","hashOfConfig":"34"},{"size":140,"mtime":1642348244514,"results":"47","hashOfConfig":"34"},{"size":29212,"mtime":1645659729331,"results":"48","hashOfConfig":"34"},{"size":3482,"mtime":1643906575534,"results":"49","hashOfConfig":"34"},{"size":4962,"mtime":1644541311598,"results":"50","hashOfConfig":"34"},{"size":1431,"mtime":1645463781588,"results":"51","hashOfConfig":"34"},{"size":1236,"mtime":1643565439585,"results":"52","hashOfConfig":"34"},{"size":3982,"mtime":1644770048944,"results":"53","hashOfConfig":"34"},{"size":5030,"mtime":1644767656411,"results":"54","hashOfConfig":"34"},{"size":5499,"mtime":1644767673837,"results":"55","hashOfConfig":"34"},{"size":7890,"mtime":1644541304743,"results":"56","hashOfConfig":"34"},{"size":138,"mtime":1643133092475,"results":"57","hashOfConfig":"34"},{"size":136,"mtime":1643133085776,"results":"58","hashOfConfig":"34"},{"size":41128,"mtime":1645661148422,"results":"59","hashOfConfig":"34"},{"size":23013,"mtime":1645641408917,"results":"60","hashOfConfig":"34"},{"size":27428,"mtime":1645453965755,"results":"61","hashOfConfig":"34"},{"size":14576,"mtime":1645659080761,"results":"62","hashOfConfig":"34"},{"size":135,"mtime":1643901354878,"results":"63","hashOfConfig":"34"},{"size":561,"mtime":1644496588053,"results":"64","hashOfConfig":"34"},{"size":2729,"mtime":1644769556133,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"yw0j30",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/index.js",[],["141","142"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js",["143"],"import React, {useState, useContext} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport \"./Styles/app.css\";\n\nimport { CurrentUserContext } from './Contexts/currentUserContext';\nimport { OpenItemsContext } from './Contexts/openItemsContext';\nimport ViewItems from \"./Pages/View-Items\"\nimport Home from \"./Pages/Home\"\nimport Account from \"./Pages/Account\"\nimport CreateWorkspace from \"./Pages/Create-Workspace\"\nimport CreateDataset from \"./Pages/Create-Dataset\"\nimport Workspace from \"./Pages/Workspace\"\nimport Dataset from \"./Pages/Dataset\"\nimport Search from \"./Pages/Search\"\nimport SignIn from \"./Pages/Sign-In\"\nimport CreateExperiment from \"./Pages/Create-Experiment\"\nimport Experiment from \"./Pages/Experiment\"\nimport NotFound from \"./Pages/Not-Found\"\nimport Header from \"./Components/Header\"\n\nexport default function App() {\n    const [searchPhrase, setSearchPhrase] = useState(null);\n    const {currentUser} = useContext(CurrentUserContext);\n    const {openItems} = useContext(OpenItemsContext);\n\n    const redirectPage = () => {\n        if (currentUser.loaded) {\n            if (currentUser.empty) {\n                return <Redirect to={\"/sign-in\"} />\n            } else {\n                return <Redirect to={`/home`} />\n            }\n        }\n    }\n\n    const redirectSignin = () => {\n        if (currentUser.loaded) {\n            if (currentUser.empty) {\n                return <SignIn />\n            } else {\n                return <Redirect to={`/home`} />\n            }\n        }\n    }\n\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    {redirectPage()}\n                </Route>\n                <Route exact path=\"/sign-in\">\n                    {redirectSignin()}\n                </Route>\n                {currentUser.loaded &&\n                    <>\n                        {currentUser.empty ?\n                            <Redirect to={\"/sign-in\"} />\n                        :\n                            <>\n                                <div className=\"whole-body\">\n                                    <Header openItems={openItems} />\n                                    <Route exact path=\"/home\">\n                                        <Home setSearchPhrase={setSearchPhrase} currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/created-workspaces\">\n                                        <ViewItems type={\"created-workspaces\"} />\n                                    </Route>\n                                    <Route exact path=\"/created-datasets\">\n                                        <ViewItems type={\"created-datasets\"} />\n                                    </Route>\n                                    <Route exact path=\"/bookmarked\">\n                                        <ViewItems type={\"bookmarked\"} currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/all-workspaces\">\n                                        <ViewItems type={\"all-workspaces\"} currentUser={currentUser} setSearchPhrase={setSearchPhrase} />\n                                    </Route>\n                                    <Route exact path=\"/all-datasets\">\n                                        <ViewItems type={\"all-datasets\"} currentUser={currentUser} setSearchPhrase={setSearchPhrase} />\n                                    </Route>\n                                    <Route path=\"/search-results/:id\" render={(props) => <Search currentUser={currentUser} searchPhrase={searchPhrase} setSearchPhrase={setSearchPhrase} key={props.location.key} />} />\n                                    <Route exact path=\"/workspace/:id/create-experiment\">\n                                        <CreateExperiment currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/workspace/:workspace/experiment/:experiment\">\n                                        <Experiment currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/workspace/:id\" render={(props) => <Workspace currentUser={currentUser} key={props.location.key} />} />\n                                    <Route exact path=\"/dataset/:id\" render={(props) => <Dataset currentUser={currentUser} key={props.location.key} />} />\n                                    <Route exact path=\"/create-workspace\">\n                                        <CreateWorkspace currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/create-dataset\">\n                                        <CreateDataset currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/account\">\n                                        <Account />\n                                    </Route>\n                                    {/* <Route exact path=\"/404\">\n                                        <NotFound />\n                                    </Route> */}\n                                </div>\n                            </>\n                        }\n                    </>\n                }\n                {/* <Redirect to=\"/404\" /> */}\n            </Switch>\n        </Router>\n    );\n}","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/auth.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Sign-In.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header.jsx",["144"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/files.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/users.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/images.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Not-Found.jsx",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/workspaces.js",[],["161","162"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx",["163","164","165","166","167","168","169","170","171","172","173","174"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Shortcut.jsx",["175","176"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom';\nimport usersAPI from '../API/users'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Shortcut = ({type, currentUserID}) => {\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let items;\n\n                if (type === \"workspaces\") {\n                    items = await usersAPI.get(`/created-shortcut?type=workspace`);\n                } else if (type === \"datasets\") {\n                    items = await usersAPI.get(`/created-shortcut?type=dataset`);\n                } else if (type === \"bookmarked\") {\n                    items = await usersAPI.get(`/bookmarked`);\n                }\n\n                setItems(items.data.data)\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const addHeader = (item) => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"shortcut-items-container\">\n                    <div className=\"shortcut-items-heading\">\n                        <p>{type === \"workspaces\" ? \"Created Workspaces\" : (type === \"datasets\") ? \"Created Datasets\" : \"Bookmarked\"}</p>\n                        {type === \"workspaces\" && \n                            <Link to=\"/create-workspace\">\n                                <AddIcon className=\"shortcut-items-create-item-icon\" />\n                            </Link>\n                        }\n                        {type === \"datasets\" && \n                            <Link to=\"/create-dataset\">\n                                <AddIcon className=\"shortcut-items-create-item-icon\" />\n                            </Link>\n                        }\n                    </div>\n                    <div className=\"shortcut-items-list\">\n                        {items.length === 0 ?\n                            <p className=\"shortcut-items-list-none\">Empty</p>\n                        :\n                            <>\n                                {items.map((item, i) => {\n                                    return (\n                                        <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}\n                                                className=\"shortcut-list-item\" \n                                                onClick={() => {addHeader(item)}}\n                                                key={i}>\n                                            <img src={`http://localhost:4000/images/${item.picture}`} />\n                                            <p>{item.title}</p>\n                                        </Link>\n                                    )\n                                })}\n                                <Link to={type === \"workspaces\" ? \"/created-workspaces\" : (type === \"datasets\") ? \"/created-datasets\" : \"/bookmarked\"}\n                                        className=\"shortcut-items-all\">See All</Link>\n                            </>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Shortcut\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx",["177","178","179","180"],"import React, {useState, useEffect} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport globalAPI from '../API/global'\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst AccountWorkspaces = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (searchPhrase === null) {\n                if (urlPhrase) {\n                    const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n                    if (items.data.data.length < 21) {\n                        setFinishedItems(true)\n                    }\n\n                    setItems(items.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/home\");\n                }\n            } else {\n                const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataItems = async (id) => {\n        if (!finishedItems) {\n            try {\n                const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            {fetchDataItems(items[items.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-items-body\">\n                        <div className=\"view-items-search\">\n                            <input className=\"view-items-search-input\"\n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"view-items-search-icon\" onClick={() => searchFunctionButton()} />\n                        </div>\n                        <div className=\"view-items-top\">\n                            <h1>Search Results</h1>\n                        </div>\n                        <div className=\"view-items-middle\">\n                            <p>{`${items.length} Results`}</p>\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-items-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-items-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-items-list\">\n                            {items.length > 0 &&\n                                <>\n                                    {items.map((item, i) => {\n                                        return rowFormat ? \n                                            <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={false} key={i} /> \n                                            : \n                                            <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={false} key={i} />\n                                    })}\n                                </>\n                            }\n                        </div>\n                        {items.length >= 0 && finishedItems ?\n                            <p className=\"end-items\">No more results</p>\n                            :\n                            <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Header-Open-Item.jsx",["181","182","183","184"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openItemsContext.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Feed-Card.jsx",["185","186","187","188","189"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport globalAPI from '../API/global'\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\n\nconst FeedWorkspaceCard = ({item, creator}) => {\n    const [bookmarked, setBookmarked] = useState(item.bookmarked)\n    const [upvoted, setUpvoted] = useState(item.upvoted)\n    const [upvotes, setUpvotes] = useState(item.upvotes)\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(item.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${item._id}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"item-feed-card-card\">\n            <img src=\"http://localhost:3000/Feed-Bar.png\" className=\"item-feed-card-bar\" />\n            <div className=\"item-feed-card-body\">\n                <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}>\n                    <img src={`http://localhost:4000/images/${item.picture}`} className=\"item-feed-card-picture\" />\n                </Link>\n                <div className=\"item-feed-card-heading\">\n                    {item.type === \"workspace\" ? <img src=\"http://localhost:3000/workspace.png\" /> : <img src=\"http://localhost:3000/dataset.png\" />}\n                    <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`} className=\"item-feed-card-title\">{item.title}</Link>\n                </div>\n                <div>\n                    <p className=\"item-feed-card-meta\">{creator}</p>\n                    <p className=\"item-feed-card-meta\">{date}</p>\n                    <BookmarkIcon className={`item-feed-card-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />\n                    <ThumbUpIcon className={`item-feed-card-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                    <p className={`item-feed-card-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                </div>\n                <p className=\"item-feed-card-description\">{item.description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default FeedWorkspaceCard","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Row-Card.jsx",["190","191","192","193"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport globalAPI from '../API/global'\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst WorkspaceRowCard = ({item, created, creator, currentUserID}) => {\n    const [bookmarked, setBookmarked] = useState(item.bookmarked)\n    const [upvoted, setUpvoted] = useState(item.upvoted)\n    const [upvotes, setUpvotes] = useState(item.upvotes)\n    const [visibility, setVisibility] = useState(item.visibility)\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(item.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const addHeader = () => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${item._id}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${item._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"item-row-card\" onClick={() => {addHeader()}}>\n            <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}>\n                <img src={`http://localhost:4000/images/${item.picture}`} className=\"item-row-card-picture\" />\n            </Link>\n            <div className=\"item-row-card-information\">\n                <div className=\"item-row-card-heading\">\n                    {item.type === \"workspace\" ? <img src=\"http://localhost:3000/workspace.png\" /> : <img src=\"http://localhost:3000/dataset.png\" />}\n                    <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`} className=\"item-row-card-title\">{item.title}</Link>\n                </div>\n                <div>\n                    {!created && <p className=\"item-row-card-meta\">{creator}</p>}\n                    <p className=\"item-row-card-meta\">{date}</p>\n                </div>\n            </div>\n            <div>\n                {!created && item.creator !== currentUserID && <BookmarkIcon className={`item-row-card-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                <ThumbUpIcon className={`item-row-card-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                <p className={`item-row-card-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                {created && \n                    <>\n                        {visibility ? \n                            <VisibilityIcon className=\"item-row-card-visibility\" onClick={() => {updateVisibility()}} />\n                        :\n                            <VisibilityOffIcon className=\"item-row-card-visibility\" onClick={() => {updateVisibility()}} />\n                        }\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default WorkspaceRowCard","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Square-Card.jsx",["194","195","196","197"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport globalAPI from '../API/global'\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst WorkspaceSquareCard = ({item, created, creator, currentUserID}) => {\n    const [bookmarked, setBookmarked] = useState(item.bookmarked)\n    const [upvoted, setUpvoted] = useState(item.upvoted)\n    const [upvotes, setUpvotes] = useState(item.upvotes)\n    const [visibility, setVisibility] = useState(item.visibility)\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(item.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const addHeader = () => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${item._id}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${item._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"item-square-card\" onClick={() => {addHeader()}}>\n            <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}>\n                <img src={`http://localhost:4000/images/${item.picture}`} className=\"item-square-card-picture\" />\n            </Link>\n            <div className=\"item-square-card-heading\">\n                {item.type === \"workspace\" ? <img src=\"http://localhost:3000/workspace.png\" /> : <img src=\"http://localhost:3000/dataset.png\" />}\n                <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`} className=\"item-square-card-title\">{item.title}</Link>\n            </div>\n            <div>\n                {!created && <p className=\"item-square-card-meta\">{creator}</p>}\n                <p className=\"item-square-card-meta\">{date}</p>\n                {created && \n                    <div className=\"item-square-card-bottom\">\n                        <ThumbUpIcon className={`item-square-card-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                        <p className={`item-square-card-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                        {created && \n                            <>\n                                {visibility ? \n                                    <VisibilityIcon className=\"item-square-card-visibility\" onClick={() => {updateVisibility()}} />\n                                :\n                                    <VisibilityOffIcon className=\"item-square-card-visibility\" onClick={() => {updateVisibility()}} />\n                                }\n                            </>\n                        }\n                    </div>\n                }\n            </div>\n            {!created &&\n                <div className=\"item-square-card-other\">\n                    {item.creator !== currentUserID && <BookmarkIcon className={`item-square-card-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                    <ThumbUpIcon className={`item-square-card-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                    <p className={`item-square-card-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default WorkspaceSquareCard","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx",["198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, {useState, useEffect} from 'react'\nimport {useHistory, Link} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst ViewItems = ({type, currentUser, setSearchPhrase}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let items;\n\n                switch (type) {\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created?type=dataset&date=${new Date().toISOString()}`);\n                        break;\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created?type=workspace&date=${new Date().toISOString()}`);\n                        break;\n                    case \"bookmarked\":\n                        items = await usersAPI.get(`/bookmarked?date=${new Date().toISOString()}`);\n                        break;\n                    case \"all-workspaces\":\n                        items = await itemsAPI.get(`/all?type=workspace&date=${new Date().toISOString()}`);\n                        break;\n                    case \"all-datasets\":\n                        items = await itemsAPI.get(`/all?type=dataset&date=${new Date().toISOString()}`);\n                        break;\n                }\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n    \n    const fetchDataItems = async (date) => {\n        if (!finishedItems) {\n            try {\n                let fetchedItems;\n\n                switch (type) {\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created?type=dataset&date=${date}`);\n                        break;\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created?type=workspace&date=${date}`);\n                        break;\n                    case \"bookmarked\":\n                        items = await usersAPI.get(`/bookmarked?date=${date}`);\n                        break;\n                    case \"all-workspaces\":\n                        items = await itemsAPI.get(`/all?type=workspace&date=${date}`);\n                        break;\n                    case \"all-datasets\":\n                        items = await itemsAPI.get(`/all?type=dataset&date=${date}`);\n                        break;   \n                }\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            if (type === \"all-workspaces\" || type === \"all-datasets\") {\n                {fetchDataItems(items[items.length-1].createdAt)}\n            } else {\n                {fetchDataItems(items[items.length-1].updatedAt)}\n            }\n        }\n    };\n\n    const displayHeading = () => {\n        let heading;\n\n        switch (type) {\n            case \"created-workspaces\":\n                heading = \"Created Workspaces\"\n                break;\n            case \"created-datasets\":\n                heading = \"Created Datasets\"\n                break;\n            case \"bookmarked\":\n                heading = \"Bookmarked\"\n                break;\n            case \"all-workspaces\":\n                heading = \"All Workspaces\"\n                break;\n            case \"all-datasets\":\n                heading = \"All Datasets\"\n                break;\n        }\n\n        return <h1>{heading}</h1>\n    }\n    \n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-items-body\">\n                        {type === \"all\" &&\n                            <div className=\"view-items-search\">\n                                <input className=\"view-items-search-input\"\n                                        placeholder=\"Search\"\n                                        value={input}\n                                        onChange={e => setInput(e.target.value)}\n                                        onKeyPress={searchFunctionKey} />\n                                <SearchIcon className=\"view-items-search-icon\" onClick={e => searchFunctionButton()} />\n                            </div>\n                        }\n                        <div className=\"view-items-top\">\n                            {displayHeading()}\n                            {type === \"created-workspaces\" && <Link to=\"/create-workspace\" className=\"blue-button\">Create Workspace</Link>}\n                            {type === \"created-datasets\" && <Link to=\"/create-dataset\" className=\"blue-button\">Create Dataset</Link>}\n                        </div>\n                        <div className=\"view-items-middle\">\n                            {(type === \"created-workspaces\" || type === \"all-workspaces\") ?\n                                <p>{`${items.length} Workspaces`}</p>\n                            : (type === \"created-datasets\" || type === \"all-dataset\") ?\n                                <p>{`${items.length} Datasets`}</p>\n                            :\n                                <p>{`${items.length} Bookmarks`}</p>\n                            }\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-items-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-items-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-items-list\">\n                            {items.length > 0 &&\n                                <>\n                                    {items.map((item, i) => {\n                                        if (type === \"created-workspaces\" || type === \"created-datasets\") return rowFormat ? <ItemRowCard item={item} created={true} key={i} /> : <ItemSquareCard item={item} created={true} key={i} />\n\n                                        return rowFormat ? <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} /> : <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} />\n                                    })}\n                                </>\n                            }\n                        </div>\n                        {items.length >= 0 && finishedItems ?\n                            <p className=\"end-items\">No more bookmarks</p>\n                            :\n                            <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default ViewItems","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/datasets.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/global.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Dataset.jsx",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Dataset.jsx",["228","229","230","231","232"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Experiment.jsx",["233","234","235","236"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Workspace.jsx",["237","238","239","240"],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/API/items.js",[],"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Model-Node.jsx",["241"],"import React from 'react'\n\nconst ModelNode = ({type, value, selected, last}) => {\n    return (\n        <div className={`model-node ${type === \"Input\" && \"model-node-input\"}`}>\n            <div className={selected ? \"model-node-selected\" : \"model-node-unselected\"}>\n                <p>{type}</p>\n            </div>\n            <p className=\"model-node-value\">{value}</p>\n            {!last &&\n                <img src=\"http://localhost:3000/Node-Connector.png\" className=\"model-node-connector\" />\n            }\n        </div>\n    )\n};\n\nexport default ModelNode;\n","/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Experiment-Card.jsx",["242"],"import React, {useState, useEffect} from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport itemsAPI from '../API/items'\nimport { Link } from 'react-router-dom';\n\nconst ExperimentCard = ({experiment, created, workspaceID}) => {\n    const [date, setDate] = useState(\"\");\n    const [visibility, setVisibility] = useState(experiment.visibility)\n\n    useEffect(() => {\n        const updatedDate = new Date(experiment.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} year(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} month(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} day(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hour(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minute(s) ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const updateVisibility = async () => {\n        try {\n            await itemsAPI.put(`/experiment-visibility/${experiment._id}?workspace=${workspaceID}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"experiment-card\">\n            <Link className=\"experiment-card-title\" to={`/workspace/${workspaceID}/experiment/${experiment._id}`}>{experiment.title}</Link>\n            <p className=\"experiment-card-date\">{date}</p>\n            {created &&\n                <>\n                    {visibility ? \n                        <VisibilityIcon className=\"experiment-card-icon\" onClick={() => {updateVisibility()}} />\n                    :\n                        <VisibilityOffIcon className=\"experiment-card-icon\" onClick={() => {updateVisibility()}} />\n                    }\n                </>\n            }\n        </div>\n    )\n};\n\nexport default ExperimentCard;\n",{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":18,"column":8,"nodeType":"249","messageId":"250","endLine":18,"endColumn":16},{"ruleId":"247","severity":1,"message":"251","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":54,"column":8,"nodeType":"254","endLine":54,"endColumn":10,"suggestions":"255"},{"ruleId":"252","severity":1,"message":"256","line":75,"column":8,"nodeType":"254","endLine":75,"endColumn":25,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":125,"column":49,"nodeType":"260","messageId":"261","endLine":125,"endColumn":95},{"ruleId":"258","severity":1,"message":"259","line":173,"column":94,"nodeType":"260","messageId":"261","endLine":185,"endColumn":94},{"ruleId":"258","severity":1,"message":"259","line":187,"column":93,"nodeType":"260","messageId":"261","endLine":187,"endColumn":133},{"ruleId":"258","severity":1,"message":"259","line":210,"column":77,"nodeType":"260","messageId":"261","endLine":210,"endColumn":117},{"ruleId":"258","severity":1,"message":"259","line":256,"column":57,"nodeType":"260","messageId":"261","endLine":256,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":266,"column":57,"nodeType":"260","messageId":"261","endLine":266,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":276,"column":57,"nodeType":"260","messageId":"261","endLine":276,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":286,"column":57,"nodeType":"260","messageId":"261","endLine":286,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":296,"column":57,"nodeType":"260","messageId":"261","endLine":296,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":306,"column":57,"nodeType":"260","messageId":"261","endLine":306,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":316,"column":57,"nodeType":"260","messageId":"261","endLine":316,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":330,"column":57,"nodeType":"260","messageId":"261","endLine":330,"endColumn":97},{"ruleId":"258","severity":1,"message":"259","line":354,"column":73,"nodeType":"260","messageId":"261","endLine":354,"endColumn":113},{"ruleId":"258","severity":1,"message":"259","line":370,"column":81,"nodeType":"260","messageId":"261","endLine":370,"endColumn":121},{"ruleId":"243","replacedBy":"262"},{"ruleId":"245","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":103,"column":46,"nodeType":"266","messageId":"267","endLine":103,"endColumn":48},{"ruleId":"252","severity":1,"message":"268","line":123,"column":8,"nodeType":"254","endLine":123,"endColumn":10,"suggestions":"269"},{"ruleId":"252","severity":1,"message":"256","line":144,"column":8,"nodeType":"254","endLine":144,"endColumn":25,"suggestions":"270"},{"ruleId":"258","severity":1,"message":"259","line":162,"column":13,"nodeType":"260","messageId":"261","endLine":162,"endColumn":78},{"ruleId":"271","severity":1,"message":"272","line":369,"column":29,"nodeType":"273","endLine":369,"endColumn":109},{"ruleId":"258","severity":1,"message":"259","line":376,"column":45,"nodeType":"260","messageId":"261","endLine":376,"endColumn":91},{"ruleId":"271","severity":1,"message":"272","line":382,"column":41,"nodeType":"273","endLine":382,"endColumn":90},{"ruleId":"258","severity":1,"message":"259","line":388,"column":53,"nodeType":"260","messageId":"261","endLine":388,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":393,"column":41,"nodeType":"273","endLine":393,"endColumn":90},{"ruleId":"258","severity":1,"message":"259","line":423,"column":53,"nodeType":"260","messageId":"261","endLine":423,"endColumn":99},{"ruleId":"264","severity":1,"message":"274","line":511,"column":76,"nodeType":"266","messageId":"275","endLine":511,"endColumn":78},{"ruleId":"271","severity":1,"message":"272","line":516,"column":73,"nodeType":"273","endLine":516,"endColumn":159},{"ruleId":"252","severity":1,"message":"276","line":30,"column":8,"nodeType":"254","endLine":30,"endColumn":10,"suggestions":"277"},{"ruleId":"271","severity":1,"message":"272","line":66,"column":45,"nodeType":"273","endLine":66,"endColumn":105},{"ruleId":"252","severity":1,"message":"278","line":44,"column":8,"nodeType":"254","endLine":44,"endColumn":10,"suggestions":"279"},{"ruleId":"258","severity":1,"message":"259","line":76,"column":13,"nodeType":"260","messageId":"261","endLine":76,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":98,"column":29,"nodeType":"273","endLine":98,"endColumn":142},{"ruleId":"271","severity":1,"message":"272","line":99,"column":29,"nodeType":"273","endLine":99,"endColumn":144},{"ruleId":"247","severity":1,"message":"280","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":24},{"ruleId":"247","severity":1,"message":"281","line":1,"column":38,"nodeType":"249","messageId":"250","endLine":1,"endColumn":47},{"ruleId":"271","severity":1,"message":"272","line":27,"column":42,"nodeType":"273","endLine":27,"endColumn":91},{"ruleId":"271","severity":1,"message":"272","line":27,"column":94,"nodeType":"273","endLine":27,"endColumn":141},{"ruleId":"252","severity":1,"message":"282","line":30,"column":8,"nodeType":"254","endLine":30,"endColumn":10,"suggestions":"283"},{"ruleId":"271","severity":1,"message":"272","line":56,"column":13,"nodeType":"273","endLine":56,"endColumn":92},{"ruleId":"271","severity":1,"message":"272","line":59,"column":21,"nodeType":"273","endLine":59,"endColumn":116},{"ruleId":"271","severity":1,"message":"272","line":62,"column":50,"nodeType":"273","endLine":62,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":62,"column":102,"nodeType":"273","endLine":62,"endColumn":149},{"ruleId":"252","severity":1,"message":"282","line":35,"column":8,"nodeType":"254","endLine":35,"endColumn":10,"suggestions":"284"},{"ruleId":"271","severity":1,"message":"272","line":76,"column":17,"nodeType":"273","endLine":76,"endColumn":111},{"ruleId":"271","severity":1,"message":"272","line":80,"column":50,"nodeType":"273","endLine":80,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":80,"column":102,"nodeType":"273","endLine":80,"endColumn":149},{"ruleId":"252","severity":1,"message":"282","line":35,"column":8,"nodeType":"254","endLine":35,"endColumn":10,"suggestions":"285"},{"ruleId":"271","severity":1,"message":"272","line":76,"column":17,"nodeType":"273","endLine":76,"endColumn":114},{"ruleId":"271","severity":1,"message":"272","line":79,"column":46,"nodeType":"273","endLine":79,"endColumn":95},{"ruleId":"271","severity":1,"message":"272","line":79,"column":98,"nodeType":"273","endLine":79,"endColumn":145},{"ruleId":"286","severity":1,"message":"287","line":22,"column":17,"nodeType":"288","messageId":"289","endLine":38,"endColumn":18},{"ruleId":"252","severity":1,"message":"276","line":49,"column":8,"nodeType":"254","endLine":49,"endColumn":10,"suggestions":"290"},{"ruleId":"286","severity":1,"message":"287","line":70,"column":17,"nodeType":"288","messageId":"289","endLine":86,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":72,"column":25,"nodeType":"249","messageId":"293","endLine":72,"endColumn":30},{"ruleId":"291","severity":1,"message":"292","line":75,"column":25,"nodeType":"249","messageId":"293","endLine":75,"endColumn":30},{"ruleId":"291","severity":1,"message":"292","line":78,"column":25,"nodeType":"249","messageId":"293","endLine":78,"endColumn":30},{"ruleId":"291","severity":1,"message":"292","line":81,"column":25,"nodeType":"249","messageId":"293","endLine":81,"endColumn":30},{"ruleId":"291","severity":1,"message":"292","line":84,"column":25,"nodeType":"249","messageId":"293","endLine":84,"endColumn":30},{"ruleId":"258","severity":1,"message":"259","line":100,"column":17,"nodeType":"260","messageId":"261","endLine":100,"endColumn":66},{"ruleId":"258","severity":1,"message":"259","line":102,"column":17,"nodeType":"260","messageId":"261","endLine":102,"endColumn":66},{"ruleId":"286","severity":1,"message":"287","line":110,"column":9,"nodeType":"288","messageId":"289","endLine":126,"endColumn":10},{"ruleId":"271","severity":1,"message":"272","line":159,"column":29,"nodeType":"273","endLine":159,"endColumn":142},{"ruleId":"271","severity":1,"message":"272","line":160,"column":29,"nodeType":"273","endLine":160,"endColumn":144},{"ruleId":"264","severity":1,"message":"265","line":113,"column":46,"nodeType":"266","messageId":"267","endLine":113,"endColumn":48},{"ruleId":"252","severity":1,"message":"294","line":130,"column":8,"nodeType":"254","endLine":130,"endColumn":10,"suggestions":"295"},{"ruleId":"252","severity":1,"message":"256","line":151,"column":8,"nodeType":"254","endLine":151,"endColumn":25,"suggestions":"296"},{"ruleId":"258","severity":1,"message":"259","line":169,"column":13,"nodeType":"260","messageId":"261","endLine":169,"endColumn":77},{"ruleId":"271","severity":1,"message":"272","line":422,"column":29,"nodeType":"273","endLine":422,"endColumn":109},{"ruleId":"258","severity":1,"message":"259","line":429,"column":45,"nodeType":"260","messageId":"261","endLine":429,"endColumn":91},{"ruleId":"271","severity":1,"message":"272","line":435,"column":41,"nodeType":"273","endLine":435,"endColumn":88},{"ruleId":"258","severity":1,"message":"259","line":441,"column":53,"nodeType":"260","messageId":"261","endLine":441,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":446,"column":41,"nodeType":"273","endLine":446,"endColumn":88},{"ruleId":"258","severity":1,"message":"259","line":475,"column":53,"nodeType":"260","messageId":"261","endLine":475,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":562,"column":111,"nodeType":"266","messageId":"267","endLine":562,"endColumn":113},{"ruleId":"264","severity":1,"message":"274","line":623,"column":83,"nodeType":"266","messageId":"275","endLine":623,"endColumn":85},{"ruleId":"271","severity":1,"message":"272","line":628,"column":73,"nodeType":"273","endLine":628,"endColumn":113},{"ruleId":"264","severity":1,"message":"274","line":651,"column":76,"nodeType":"266","messageId":"275","endLine":651,"endColumn":78},{"ruleId":"271","severity":1,"message":"272","line":656,"column":73,"nodeType":"273","endLine":656,"endColumn":149},{"ruleId":"271","severity":1,"message":"272","line":685,"column":41,"nodeType":"273","endLine":685,"endColumn":159},{"ruleId":"271","severity":1,"message":"272","line":686,"column":41,"nodeType":"273","endLine":686,"endColumn":161},{"ruleId":"264","severity":1,"message":"265","line":42,"column":50,"nodeType":"266","messageId":"267","endLine":42,"endColumn":52},{"ruleId":"252","severity":1,"message":"297","line":66,"column":8,"nodeType":"254","endLine":66,"endColumn":18,"suggestions":"298"},{"ruleId":"264","severity":1,"message":"265","line":294,"column":123,"nodeType":"266","messageId":"267","endLine":294,"endColumn":125},{"ruleId":"264","severity":1,"message":"274","line":323,"column":87,"nodeType":"266","messageId":"275","endLine":323,"endColumn":89},{"ruleId":"271","severity":1,"message":"272","line":328,"column":77,"nodeType":"273","endLine":328,"endColumn":117},{"ruleId":"247","severity":1,"message":"299","line":23,"column":26,"nodeType":"249","messageId":"250","endLine":23,"endColumn":42},{"ruleId":"264","severity":1,"message":"265","line":40,"column":68,"nodeType":"266","messageId":"267","endLine":40,"endColumn":70},{"ruleId":"252","severity":1,"message":"268","line":62,"column":8,"nodeType":"254","endLine":62,"endColumn":10,"suggestions":"300"},{"ruleId":"258","severity":1,"message":"259","line":159,"column":98,"nodeType":"260","messageId":"261","endLine":171,"endColumn":98},{"ruleId":"264","severity":1,"message":"265","line":40,"column":54,"nodeType":"266","messageId":"267","endLine":40,"endColumn":56},{"ruleId":"264","severity":1,"message":"265","line":99,"column":46,"nodeType":"266","messageId":"267","endLine":99,"endColumn":48},{"ruleId":"264","severity":1,"message":"274","line":262,"column":76,"nodeType":"266","messageId":"275","endLine":262,"endColumn":78},{"ruleId":"271","severity":1,"message":"272","line":267,"column":73,"nodeType":"273","endLine":267,"endColumn":157},{"ruleId":"271","severity":1,"message":"272","line":11,"column":17,"nodeType":"273","endLine":11,"endColumn":104},{"ruleId":"252","severity":1,"message":"301","line":28,"column":8,"nodeType":"254","endLine":28,"endColumn":10,"suggestions":"302"},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'experimentID' and 'workspaceID'. Either include them or remove the dependency array.","ArrayExpression",["305"],"React Hook useEffect has a missing dependency: 'exist'. Either include it or remove the dependency array.",["306"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["303"],["304"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'addOpenItems', 'currentUser.id', and 'workspaceID'. Either include them or remove the dependency array.",["307"],["308"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["309"],"React Hook useEffect has missing dependencies: 'history', 'searchPhrase', and 'urlPhrase'. Either include them or remove the dependency array.",["310"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'item.updated'. Either include it or remove the dependency array.",["311"],["312"],["313"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["314"],"no-const-assign","'items' is constant.","const","React Hook useEffect has missing dependencies: 'addOpenItems' and 'datasetID'. Either include them or remove the dependency array.",["315"],["316"],"React Hook useEffect has a missing dependency: 'dataType'. Either include it or remove the dependency array.",["317"],"'setDisabledTrain' is assigned a value but never used.",["318"],"React Hook useEffect has a missing dependency: 'experiment.updated'. Either include it or remove the dependency array.",["319"],"no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"322","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"331","fix":"334"},{"desc":"327","fix":"335"},{"desc":"336","fix":"337"},{"desc":"322","fix":"338"},{"desc":"339","fix":"340"},{"desc":"324","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [experimentID, workspaceID]",{"range":"344","text":"345"},"Update the dependencies array to be: [exist, loaded, updated]",{"range":"346","text":"347"},"Update the dependencies array to be: [addOpenItems, currentUser.id, workspaceID]",{"range":"348","text":"349"},{"range":"350","text":"347"},"Update the dependencies array to be: [type]",{"range":"351","text":"352"},"Update the dependencies array to be: [history, searchPhrase, urlPhrase]",{"range":"353","text":"354"},"Update the dependencies array to be: [item.updated]",{"range":"355","text":"356"},{"range":"357","text":"356"},{"range":"358","text":"356"},{"range":"359","text":"352"},"Update the dependencies array to be: [addOpenItems, datasetID]",{"range":"360","text":"361"},{"range":"362","text":"347"},"Update the dependencies array to be: [dataFile, dataType]",{"range":"363","text":"364"},{"range":"365","text":"349"},"Update the dependencies array to be: [experiment.updated]",{"range":"366","text":"367"},[2369,2371],"[experimentID, workspaceID]",[3822,3839],"[exist, loaded, updated]",[5859,5861],"[addOpenItems, currentUser.id, workspaceID]",[7308,7325],[1091,1093],"[type]",[1579,1581],"[history, searchPhrase, urlPhrase]",[1856,1858],"[item.updated]",[2207,2209],[2210,2212],[2009,2011],[6114,6116],"[addOpenItems, datasetID]",[7563,7580],[2677,2687],"[dataFile, dataType]",[2871,2873],[1795,1797],"[experiment.updated]"]