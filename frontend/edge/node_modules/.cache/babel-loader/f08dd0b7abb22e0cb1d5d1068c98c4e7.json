{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport ProjectCard from '../Components/Project-Card';\nimport projectsAPI from '../API/projects';\nimport fileAPI from '../API/files';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [projects, setProjects] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [pictureFile, setPictureFile] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projects = await projectsAPI.get(\"/\");\n        setProjects(projects.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const uploadPicture = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('picture', pictureFile);\n\n    try {\n      const uploadResponse = await fileAPI.post(\"/upload\", formData);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new-project\",\n          className: \"home-new-project\",\n          children: \"New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-projects\",\n        children: projects.map((project, i) => {\n          return /*#__PURE__*/_jsxDEV(ProjectCard, {\n            project: project\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: uploadPicture,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"pictureInput\",\n            type: \"file\",\n            name: \"picture\",\n            onChange: e => {\n              setPictureFile(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"pictureUpload text4\",\n            type: \"submit\",\n            value: \"Upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Home, \"OSJCJqrVzYmLCxg9gt4kmeFpX5M=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx"],"names":["React","useState","useEffect","useHistory","Link","useParams","ProjectCard","projectsAPI","fileAPI","Home","projects","setProjects","loaded","setLoaded","data","setData","pictureFile","setPictureFile","fetchData","get","err","uploadPicture","e","preventDefault","formData","FormData","append","uploadResponse","post","map","project","i","target","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport ProjectCard from '../Components/Project-Card'\nimport projectsAPI from '../API/projects'\nimport fileAPI from '../API/files'\n\nconst Home = () => {\n    const [projects, setProjects] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [data, setData] = useState(\"\")\n    const [pictureFile, setPictureFile] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectsAPI.get(\"/\");\n\n                setProjects(projects.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const uploadPicture = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('picture', pictureFile);\n\n        try {\n            const uploadResponse = await fileAPI.post(\"/upload\", formData);\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <>  \n                    <div className=\"home-top\">\n                        <h1>All Projects</h1>\n                        <Link to=\"/new-project\" className=\"home-new-project\">New Project</Link>\n                    </div>\n                    <div className=\"home-projects\">\n                        {projects.map((project, i) => {\n                            return <ProjectCard project={project} key={i} />\n                        })}\n                    </div>\n                    <form method=\"POST\" onSubmit={uploadPicture} encType=\"multipart/form-data\">\n                        <div>\n                            <input className=\"pictureInput\" type=\"file\" name=\"picture\" onChange={e => {setPictureFile(e.target.files[0])}} />\n                        </div>\n                        <div>\n                            <input className=\"pictureUpload text4\" type=\"submit\" value=\"Upload image\" />\n                        </div>\n                    </form>\n                </>\n            }\n        </>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}