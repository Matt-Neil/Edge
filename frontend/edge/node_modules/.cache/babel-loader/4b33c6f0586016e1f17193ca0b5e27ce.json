{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport projectsAPI from '../API/projects';\nimport ViewTable from \"../Components/View-Data\";\nimport ViewModel from \"../Components/View-Model\";\nimport EditModel from \"../Components/Edit-Model\";\nimport ProjectCard from \"../Components/Project-Card\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Project = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [project, setProject] = useState();\n  const [displayData, setDisplayData] = useState(true);\n  const [displayModel, setDisplayModel] = useState(false);\n  const [displayExperiment, setDisplayExperiment] = useState(false);\n  const [editData, setEditData] = useState(false);\n  const [editModel, setEditModel] = useState(false);\n  const [data, setData] = useState(\"\");\n  const projectID = useParams().id; // useEffect(() => {\n  //     fetch('http://127.0.0.1:5000/files/training_data.txt')\n  //         .then(response => response.text())\n  //         .then(text => {setData(text)})\n  // }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const project = await projectsAPI.get(`/${projectID}`);\n        setProject(project.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const displayDataPage = () => {\n    setDisplayData(true);\n    setDisplayModel(false);\n    setDisplayExperiment(false);\n  };\n\n  const displayModelPage = () => {\n    setDisplayData(false);\n    setDisplayModel(true);\n    setDisplayExperiment(false);\n  };\n\n  const displayExperimentPage = () => {\n    setDisplayData(false);\n    setDisplayModel(false);\n    setDisplayExperiment(true);\n  };\n\n  const edit = () => {\n    if (displayData) {\n      setEditData(previous => !previous);\n    } else {\n      setEditModel(previous => !previous);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [loaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"project-redeploy\",\n          children: \"Retrain Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"project-delete\",\n          children: \"Delete Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: displayData ? \"project-option-selected\" : \"project-option\",\n            onClick: () => {\n              displayDataPage();\n            },\n            children: \"Data Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: displayModel ? \"project-option-selected\" : \"project-option\",\n            onClick: () => {\n              displayModelPage();\n            },\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: displayExperiment ? \"project-option-selected\" : \"project-option\",\n            onClick: () => {\n              displayExperimentPage();\n            },\n            children: \"Experiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), !displayExperiment && /*#__PURE__*/_jsxDEV(EditIcon, {\n            className: \"project-edit\",\n            onClick: () => {\n              edit();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), displayData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-data\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-data-table\",\n            children: displayData !== undefined && /*#__PURE__*/_jsxDEV(ViewTable, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), displayModel && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-model\",\n          children: editModel ? /*#__PURE__*/_jsxDEV(EditModel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(ViewModel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), displayExperiment && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-experiment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-experiment-list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-experiment-detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n            project: {\n              title: \"asdasd\",\n              id: \"sjkdajksjd\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Project, \"5LNMuyET3d3fdK2HADA26xihzGo=\", false, function () {\n  return [useParams];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Project.jsx"],"names":["React","useState","useEffect","Link","useParams","projectsAPI","ViewTable","ViewModel","EditModel","ProjectCard","EditIcon","Project","currentUser","loaded","setLoaded","project","setProject","displayData","setDisplayData","displayModel","setDisplayModel","displayExperiment","setDisplayExperiment","editData","setEditData","editModel","setEditModel","data","setData","projectID","id","fetchData","get","err","displayDataPage","displayModelPage","displayExperimentPage","edit","previous","title","undefined"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link, useParams} from \"react-router-dom\"\nimport projectsAPI from '../API/projects'\nimport ViewTable from \"../Components/View-Data\"\nimport ViewModel from \"../Components/View-Model\"\nimport EditModel from \"../Components/Edit-Model\"\nimport ProjectCard from \"../Components/Project-Card\"\nimport EditIcon from '@mui/icons-material/Edit'\n\nconst Project = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false);\n    const [project, setProject] = useState();\n    const [displayData, setDisplayData] = useState(true);\n    const [displayModel, setDisplayModel] = useState(false);\n    const [displayExperiment, setDisplayExperiment] = useState(false);\n    const [editData, setEditData] = useState(false);\n    const [editModel, setEditModel] = useState(false);\n    const [data, setData] = useState(\"\")\n    const projectID = useParams().id;\n\n    // useEffect(() => {\n    //     fetch('http://127.0.0.1:5000/files/training_data.txt')\n    //         .then(response => response.text())\n    //         .then(text => {setData(text)})\n    // }, [])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const project = await projectsAPI.get(`/${projectID}`);\n\n                setProject(project.data.data)\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const displayDataPage = () => {\n        setDisplayData(true)\n        setDisplayModel(false)\n        setDisplayExperiment(false)\n    }\n\n    const displayModelPage = () => {\n        setDisplayData(false)\n        setDisplayModel(true)\n        setDisplayExperiment(false)\n    }\n\n    const displayExperimentPage = () => {\n        setDisplayData(false)\n        setDisplayModel(false)\n        setDisplayExperiment(true)\n    }\n\n    const edit = () => {\n        if (displayData) {\n            setEditData(previous => !previous)\n        } else {\n            setEditModel(previous => !previous)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"project\">\n                <div className=\"sidebar\">\n                    {loaded ?\n                        <h1>{project.title}</h1>\n                    :\n                        <h1></h1>\n                    }\n                    <button className=\"project-redeploy\">Retrain Model</button>\n                    {/* IF CREATING API\n                    <p>Current Deployment</p>\n                    <select>\n                        <option>Experiment 1</option>\n                    </select>\n                    <button className=\"project-redeploy\">Deploy Experiment</button>\n                    <p>Last Deployed: {loaded && <span>2 days</span>}</p> */}\n                    <span />\n                    <button className=\"project-delete\">Delete Project</button>\n                </div>\n                <div className=\"project-body\">\n                    <div className=\"project-top\">\n                        <button className={displayData ? \"project-option-selected\" : \"project-option\"}\n                                onClick={() => {displayDataPage()}}>Data Set</button>\n                        <button className={displayModel ? \"project-option-selected\" : \"project-option\"}\n                                onClick={() => {displayModelPage()}}>Model</button>\n                        <button className={displayExperiment ? \"project-option-selected\" : \"project-option\"}\n                                onClick={() => {displayExperimentPage()}}>Experiments</button>\n                        <span />\n                        {!displayExperiment && \n                            <EditIcon className=\"project-edit\"\n                                        onClick={() => {edit()}} />\n                        }\n                    </div>\n                    {displayData &&\n                        <div className=\"project-data\">\n                            <div className=\"project-data-table\">\n                                {displayData !== undefined && <ViewTable />}\n                            </div>\n                        </div>\n                    }\n                    {displayModel &&\n                        <div className=\"project-model\">\n                            {editModel ? <EditModel /> : <ViewModel />}\n                        </div>\n                    }\n                    {displayExperiment &&\n                        <div className=\"project-experiment\">\n                            <div className=\"project-experiment-list\">\n                            </div>\n                            <div className=\"project-experiment-detail\">\n                            </div>\n                            <ProjectCard project={{title: \"asdasd\", id: \"sjkdajksjd\"}} />\n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Project\n"]},"metadata":{},"sourceType":"module"}