{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport globalAPI from '../API/global';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = _ref => {\n  _s();\n\n  let {\n    searchPhrase,\n    setSearchPhrase,\n    currentUser\n  } = _ref;\n  const [filter, setFilter] = useState(\"workspaces\");\n  const [workspaces, setWorkspaces] = useState();\n  const [datasets, setDatasets] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n  const [finishedDatasets, setFinishedDatasets] = useState(false);\n  const urlPhrase = useParams().id;\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchPhrase === null) {\n        if (urlPhrase) {\n          const workspaces = await globalAPI.get(`/search?phrase=${urlPhrase}&type=workspace`);\n          const datasets = await globalAPI.get(`/search?phrase=${urlPhrase}&type=dataset`);\n\n          if (workspaces.data.data.length < 21) {\n            setFinishedWorkspaces(true);\n          }\n\n          if (datasets.data.data.length < 21) {\n            setFinishedDatasets(true);\n          }\n\n          setWorkspaces(workspaces.data.data);\n          setDatasets(datasets.data.data);\n          setLoaded(true);\n        } else {\n          history.push(\"/home\");\n        }\n      } else {\n        const workspaces = await globalAPI.get(`/search?phrase=${searchPhrase}&type=workspace`);\n        const datasets = await globalAPI.get(`/search?phrase=${searchPhrase}&type=dataset`);\n\n        if (workspaces.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        if (datasets.data.data.length < 21) {\n          setFinishedDatasets(true);\n        }\n\n        setWorkspaces(workspaces.data.data);\n        setDatasets(datasets.data.data);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDataWorkspaces = async id => {\n    if (!finishedWorkspaces) {\n      try {\n        const fetchedWorkspaces = await globalAPI.get(`/search?phrase=${urlPhrase}&type=workspace&id=${id}`);\n\n        if (fetchedWorkspaces.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        setWorkspaces(workspaces => [...workspaces, ...fetchedWorkspaces.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const fetchDataDatasets = async id => {\n    if (!finishedDatasets) {\n      try {\n        const fetchedDatasets = await globalAPI.get(`/search?phrase=${urlPhrase}&type=dataset&id=${id}`);\n\n        if (fetchedDatasets.data.data.length < 21) {\n          setFinishedDatasets(true);\n        }\n\n        setDatasets(datasets => [...datasets, ...fetchedDatasets.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (workspaces.length !== 0 && filter === \"workspaces\") {\n      {\n        fetchDataWorkspaces(workspaces[workspaces.length - 1]._id);\n      }\n    }\n\n    if (datasets.length !== 0 && filter === \"datasets\") {\n      {\n        fetchDataDatasets(datasets[datasets.length - 1]._id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-workspaces-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"view-workspaces-search-input\",\n            placeholder: \"Search\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: searchFunctionKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"view-workspaces-search-icon\",\n            onClick: e => searchFunctionButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"other-workspace-select\",\n            onChange: e => {\n              setFilter(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"workspaces\",\n              children: \"Workspaces\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"datasets\",\n              children: \"Datasets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-top\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${workspaces.length} Workspaces`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/List.png\",\n            className: \"view-workspaces-row-icon\",\n            onClick: () => {\n              setRowFormat(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/Grid.png\",\n            className: \"view-workspaces-grid-icon\",\n            onClick: () => {\n              setRowFormat(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-list\",\n          children: [workspaces.length > 0 && filter === \"workspaces\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: workspaces.map((workspace, i) => {\n              return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                item: workspace,\n                creator: workspace.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 60\n              }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                item: workspace,\n                creator: workspace.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 187\n              }, this);\n            })\n          }, void 0, false), datasets.length > 0 && filter === \"datasets\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: datasets.map((dataset, i) => {\n              return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                item: dataset,\n                creator: dataset.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 60\n              }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                item: dataset,\n                creator: dataset.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 183\n              }, this);\n            })\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), workspaces.length >= 0 && finishedWorkspaces && filter === \"workspaces\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"end-workspaces\",\n          children: \"No more workspaces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loadWorkspaces\",\n          onClick: () => {\n            loadMore();\n          },\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this), datasets.length >= 0 && finishedDatasets && filter === \"datasets\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"end-workspaces\",\n          children: \"No more datasets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loadWorkspaces\",\n          onClick: () => {\n            loadMore();\n          },\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"HwTbWTvTTWwq26TpUZcr88CDaUA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx"],"names":["React","useState","useEffect","useHistory","Link","useParams","ItemRowCard","ItemSquareCard","globalAPI","SearchIcon","AccountWorkspaces","searchPhrase","setSearchPhrase","currentUser","filter","setFilter","workspaces","setWorkspaces","datasets","setDatasets","loaded","setLoaded","rowFormat","setRowFormat","input","setInput","finishedWorkspaces","setFinishedWorkspaces","finishedDatasets","setFinishedDatasets","urlPhrase","id","history","fetchData","get","data","length","push","searchFunctionKey","e","key","searchFunctionButton","fetchDataWorkspaces","fetchedWorkspaces","err","fetchDataDatasets","fetchedDatasets","loadMore","_id","target","value","map","workspace","i","creatorName","name","dataset"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport globalAPI from '../API/global'\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst AccountWorkspaces = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [filter, setFilter] = useState(\"workspaces\")\n    const [workspaces, setWorkspaces] = useState();\n    const [datasets, setDatasets] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n    const [finishedDatasets, setFinishedDatasets] = useState(false);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (searchPhrase === null) {\n                if (urlPhrase) {\n                    const workspaces = await globalAPI.get(`/search?phrase=${urlPhrase}&type=workspace`);\n                    const datasets = await globalAPI.get(`/search?phrase=${urlPhrase}&type=dataset`);\n\n                    if (workspaces.data.data.length < 21) {\n                        setFinishedWorkspaces(true)\n                    }\n\n                    if (datasets.data.data.length < 21) {\n                        setFinishedDatasets(true)\n                    }\n\n                    setWorkspaces(workspaces.data.data);\n                    setDatasets(datasets.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/home\");\n                }\n            } else {\n                const workspaces = await globalAPI.get(`/search?phrase=${searchPhrase}&type=workspace`);\n                const datasets = await globalAPI.get(`/search?phrase=${searchPhrase}&type=dataset`);\n\n                if (workspaces.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                if (datasets.data.data.length < 21) {\n                    setFinishedDatasets(true)\n                }\n\n                setWorkspaces(workspaces.data.data);\n                setDatasets(datasets.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataWorkspaces = async (id) => {\n        if (!finishedWorkspaces) {\n            try {\n                const fetchedWorkspaces = await globalAPI.get(`/search?phrase=${urlPhrase}&type=workspace&id=${id}`);\n    \n                if (fetchedWorkspaces.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                setWorkspaces(workspaces => [...workspaces, ...fetchedWorkspaces.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const fetchDataDatasets = async (id) => {\n        if (!finishedDatasets) {\n            try {\n                const fetchedDatasets = await globalAPI.get(`/search?phrase=${urlPhrase}&type=dataset&id=${id}`);\n    \n                if (fetchedDatasets.data.data.length < 21) {\n                    setFinishedDatasets(true)\n                }\n\n                setDatasets(datasets => [...datasets, ...fetchedDatasets.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (workspaces.length !== 0 && filter === \"workspaces\") {\n            {fetchDataWorkspaces(workspaces[workspaces.length-1]._id)}\n        }\n\n        if (datasets.length !== 0 && filter === \"datasets\") {\n            {fetchDataDatasets(datasets[datasets.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-workspaces-body\">\n                        <div className=\"view-workspaces-search\">\n                            <input className=\"view-workspaces-search-input\"\n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"view-workspaces-search-icon\" onClick={e => searchFunctionButton()} />\n                            <select className=\"other-workspace-select\" onChange={e => {setFilter(e.target.value)}}>\n                                <option value=\"workspaces\">Workspaces</option>\n                                <option value=\"datasets\">Datasets</option>\n                            </select>\n                        </div>\n                        <div className=\"view-workspaces-top\">\n                            <h1>Search Results</h1>\n                        </div>\n                        <div className=\"view-workspaces-middle\">\n                            <p>{`${workspaces.length} Workspaces`}</p>\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-workspaces-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-workspaces-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-workspaces-list\">\n                            {workspaces.length > 0 && filter === \"workspaces\" &&\n                                <>\n                                    {workspaces.map((workspace, i) => {\n                                        return rowFormat ? <ItemRowCard item={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={false} key={i} /> : <ItemSquareCard item={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={false} key={i} />\n                                    })}\n                                </>\n                            }\n                            {datasets.length > 0 && filter === \"datasets\" &&\n                                <>\n                                    {datasets.map((dataset, i) => {\n                                        return rowFormat ? <ItemRowCard item={dataset} creator={dataset.creatorName.name} currentUserID={currentUser.id} created={false} key={i} /> : <ItemSquareCard item={dataset} creator={dataset.creatorName.name} currentUserID={currentUser.id} created={false} key={i} />\n                                    })}\n                                </>\n                            }\n                        </div>\n                        {workspaces.length >= 0 && finishedWorkspaces && filter === \"workspaces\" ?\n                            <p className=\"end-workspaces\">No more workspaces</p>\n                            :\n                            <p className=\"loadWorkspaces\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                        {datasets.length >= 0 && finishedDatasets && filter === \"datasets\" ?\n                            <p className=\"end-workspaces\">No more datasets</p>\n                            :\n                            <p className=\"loadWorkspaces\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}