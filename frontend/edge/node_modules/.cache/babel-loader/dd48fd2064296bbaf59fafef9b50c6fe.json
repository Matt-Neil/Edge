{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport usersAPI from '../API/users';\nimport itemsAPI from '../API/items';\nimport globalAPI from '../API/global';\nimport imageAPI from '../API/images';\nimport trainAPI from '../API/train';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ModelNode from '../Components/Model-Node';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser,\n    type\n  } = _ref;\n  const [stage, setStage] = useState(\"model\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [updated, setUpdated] = useState();\n  const [picture, setPicture] = useState();\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(20);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [datasetID, setDatasetID] = useState(\"\");\n  const [uploadedDataset, setUploadedDataset] = useState();\n  const [workspace, setWorkspace] = useState([]);\n  const [images, setImages] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState([]);\n  const [viewDataset, setViewDataset] = useState(false);\n  const [refreshData, setRefreshData] = useState();\n  const [refreshDiagram, setRefreshDiagram] = useState();\n  const [changedSettings, setChangedSettings] = useState(false);\n  const [model, setModel] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(0);\n  const [configuration, setConfiguration] = useState({\n    epochs: \"\",\n    training_split: \"\",\n    validation_split: \"\",\n    test_split: \"\",\n    improvement: \"\",\n    patience: \"\",\n    batch: \"\",\n    lr_scheduler: false,\n    optimiser: \"\",\n    loss: \"\"\n  });\n  const [addNode, setAddNode] = useState(false);\n  const [results, setResults] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const [disableTrain, setDisabledTrain] = useState(true);\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const {\n    addOpenItems,\n    removeOpenItems\n  } = useContext(OpenItemsContext);\n  const modelRef = useRef(null);\n  const workspaceID = useParams().id;\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (type === \"create\") {\n          const workspace = await usersAPI.get(\"/created?type=workspace\");\n          workspace.data.data.map(workspace => {\n            setWorkspace(previous => [...previous, workspace.title]);\n          });\n        } else {\n          const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n\n          if (workspace.data.data.creator === currentUser.id) {\n            addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n          }\n\n          setWorkspace(workspace.data.data);\n          setUpdated(workspace.data.data.updated);\n          setBookmarked(workspace.data.data.bookmarked);\n          setUpvoted(workspace.data.data.upvoted);\n          setPicture(workspace.data.data.picture);\n          setUpvotes(workspace.data.data.upvotes);\n          setDatasetID(workspace.data.data.dataset._id);\n          setVisibility(workspace.data.data.visibility);\n          setTitle(workspace.data.data.title);\n          setDescription(workspace.data.data.description);\n          setModel(workspace.data.data.model);\n          setConfiguration(workspace.data.data.configuration);\n          fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.imageFile}/labels.json`).then(response => response.json()).then(images => {\n            images.map(image => {\n              setImages(state => [...state, image.filename]);\n              setAssignedLabels(state => [...state, image.label]);\n            });\n            setUploadedDataset(workspace.data.data.dataset);\n          });\n        }\n\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (modelRef.current) {\n      modelRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'end'\n      });\n    }\n  }, [model, addNode]);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded, updated]);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && datasetID !== \"\") {\n      existingDataset();\n    }\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await globalAPI.put(`/visibility/${workspace._id}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 20);\n      setEnd((page - 1) * 20);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (page * 20 < images.length && images.length > 20) {\n      setPage(state => state + 1);\n      setStart(page * 20);\n      setEnd((page + 1) * 20);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const existingDataset = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?id=${datasetID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${checkPublic.data.data.imageFile}/labels.json`).then(response => response.json()).then(images => {\n          images.map(image => {\n            setImages(state => [...state, image.filename]);\n            setAssignedLabels(state => [...state, image.label]);\n          });\n          setUploadedDataset(checkPublic.data.data);\n          setRefreshData(new Date().getTime());\n          {\n            model.length === 0 && setModel([{\n              type: \"Input\",\n              value: 1,\n              activation: \"\"\n            }]);\n          }\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const workspaceResponse = await itemsAPI.post(\"/\", {\n        title: title,\n        dataset: uploadedDataset._id,\n        creator: currentUser.id,\n        description: description,\n        picture: imageName,\n        upvotes: [],\n        bookmarks: [],\n        updated: new Date().toISOString(),\n        visibility: visibility,\n        type: \"workspace\"\n      });\n      history.push(`/workspace/${workspaceResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  const train = async () => {\n    try {\n      // setDisabledTrain(true)\n      setStage(\"train\");\n      const formData = new FormData();\n      formData.append('epochs', configuration.epochs);\n      formData.append('training_split', configuration.training_split);\n      formData.append('validation_split', configuration.validation_split);\n      formData.append('test_split', configuration.test_split);\n      formData.append('improvement', configuration.improvement);\n      formData.append('patience', configuration.patience);\n      formData.append('batch', configuration.batch);\n      formData.append('lr_scheduler', configuration.lr_scheduler);\n      formData.append('optimiser', configuration.optimiser);\n      formData.append('loss', configuration.loss);\n      formData.append('imageFile', uploadedDataset.imageFile);\n      uploadedDataset.labels.map(label => {\n        formData.append('labels[]', label);\n      });\n      model.map(node => {\n        formData.append('activations[]', node.activation);\n        formData.append('units[]', node.value);\n      });\n      const response = await trainAPI.post(\"\", formData);\n\n      if (response) {\n        setResults(response);\n        setStage(\"evaluation\");\n      } else {\n        setDisabledTrain(false);\n      }\n    } catch (err) {}\n  };\n\n  const updateWorkspace = async () => {\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const tempPicture = picture;\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: imageResponse.data.data,\n          dataset: uploadedDataset._id,\n          updated: new Date().toISOString()\n        });\n        setImage(undefined);\n        setPicture(imageResponse.data.data);\n\n        if (tempPicture !== \"default.png\") {\n          await imageAPI.put('/remove', {\n            picture: tempPicture\n          });\n        }\n      } catch (err) {}\n    } else {\n      try {\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: picture,\n          dataset: uploadedDataset._id,\n          updated: new Date().toISOString()\n        });\n      } catch (err) {}\n    }\n\n    setUpdated(new Date().toISOString());\n    setChangedSettings(false);\n  };\n\n  const deleteWorkspace = async () => {\n    try {\n      await itemsAPI.delete(`/${workspaceID}`);\n      removeOpenItems(workspaceID);\n      history.replace(\"/home\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"create-item-title\",\n          placeholder: \"Title\",\n          onChange: e => {\n            setTitle(e.target.value);\n          },\n          disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"create-item-description\",\n          placeholder: \"Description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          },\n          disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this), workspace.creator === currentUser.id || type === \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"create-item-setup-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-setup-input\",\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImage(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"create-item-setup-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setVisibility(previous => !previous);\n              },\n              checked: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"create-workspace-import-existing\",\n          placeholder: \"Dataset ID\",\n          onChange: e => {\n            setDatasetID(e.target.value);\n          },\n          onKeyPress: searchFunctionKey,\n          disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n          value: datasetID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-item-view-dataset\",\n          onClick: () => {\n            setViewDataset(state => !state);\n          },\n          children: viewDataset ? \"Hide Dataset\" : \"Show Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this), type === \"view\" && workspace.creator === currentUser.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-divided\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"white-button\",\n            onClick: () => {\n              deleteWorkspace();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: changedSettings ? \"blue1-button\" : \"blue2-button\",\n            disabled: !changedSettings,\n            onClick: () => {\n              updateWorkspace();\n            },\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"create-item-data-notification\",\n          children: \"Dataset not public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 43\n        }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"create-item-data-notification\",\n          children: \"Dataset does not exist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: type === \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-items-top\",\n            children: workspace.creator === currentUser.id || type === \"create\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Create Workspace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: disableTrain ? \"blue2-button\" : \"blue1-button\",\n                disabled: disableTrain,\n                onClick: () => {\n                  uploadImage();\n                },\n                children: \"Train\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Evaluation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 33\n          }, this), model.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-modelling-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-model\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-diagram\",\n                children: [model.map((node, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-model-diagram-node\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          setSelectedNode(i);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ModelNode, {\n                          setSelectedNode: setSelectedNode,\n                          type: node.type,\n                          value: node.value,\n                          selected: i === selectedNode,\n                          last: i === model.length - 1\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 436,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 65\n                      }, this), node.type !== \"Input\" && (workspace.creator === currentUser.id || type === \"create\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          {\n                            selectedNode === i ? setSelectedNode(state => state - 1) : selectedNode < i ? setSelectedNode(state => state) : selectedNode > i && /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: selectedNode - i === 1 ? setSelectedNode(state => state - 1) : setSelectedNode(i)\n                            }, void 0, false);\n                          }\n                          model.splice(i, 1);\n                          setRefreshDiagram(new Date().getTime());\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n                          className: \"create-model-diagram-remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 61\n                    }, this), i === model.length - 1 && node.type !== \"Output\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: addNode && (workspace.creator === currentUser.id || type === \"create\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"create-model-diagram-add\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => {\n                            setAddNode(false);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n                            className: \"create-model-diagram-add-icon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 77\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"create-model-diagram-add-options\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              setModel(state => [...state, {\n                                type: \"Dense\",\n                                value: 0,\n                                activation: \"\"\n                              }]);\n                              setSelectedNode(model.length);\n                              setAddNode(false);\n                            },\n                            children: \"Dense\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 466,\n                            columnNumber: 81\n                          }, this), model.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              {\n                                uploadedDataset.labels.length === 2 ? setModel(state => [...state, {\n                                  type: \"Output\",\n                                  value: 1,\n                                  activation: \"\"\n                                }]) : setModel(state => [...state, {\n                                  type: \"Output\",\n                                  value: uploadedDataset.labels.length,\n                                  activation: \"\"\n                                }]);\n                              }\n                              setSelectedNode(model.length);\n                              setAddNode(false);\n                            },\n                            children: \"Output\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 475,\n                            columnNumber: 85\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 465,\n                          columnNumber: 77\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 73\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          setAddNode(true);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                          className: \"create-model-diagram-add-icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 497,\n                          columnNumber: 77\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 73\n                      }, this)\n                    }, void 0, false)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 57\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: modelRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 49\n                }, this)]\n              }, refreshDiagram, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-selected\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: model[selectedNode].type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: model[selectedNode].value,\n                  disabled: (model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.creator === currentUser.id || type === \"create\"),\n                  onChange: e => {\n                    setModel(state => {\n                      const stateCopy = [...state];\n                      stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                        value: Number(e.target.value)\n                      };\n                      return stateCopy;\n                    });\n                    setRefreshDiagram(new Date().getTime());\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 49\n                }, this), model[selectedNode].type !== \"Input\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Activation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: model[selectedNode].activation,\n                    disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                    onChange: e => {\n                      setModel(state => {\n                        const stateCopy = [...state];\n                        stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                          activation: e.target.value\n                        };\n                        return stateCopy;\n                      });\n                      setRefreshDiagram(new Date().getTime());\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      disabled: true,\n                      defaultValue: true,\n                      value: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"sigmoid\",\n                      children: \"Sigmoid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"softmax\",\n                      children: \"Softmax\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"softplus\",\n                      children: \"Softplus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"softsign\",\n                      children: \"Softsign\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"swish\",\n                      children: \"Swish\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"selu\",\n                      children: \"Selu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"tanh\",\n                      children: \"Tanh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"elu\",\n                      children: \"Elu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"exponential\",\n                      children: \"Exponential\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"gelu\",\n                      children: \"Gelu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"hard_sigmoid\",\n                      children: \"Hard Sigmoid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"linear\",\n                      children: \"Linear\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"relu\",\n                      children: \"Relu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-configuration\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-model-configuration-option\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Epochs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.epochs,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          epochs: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Training Split\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.training_split,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          training_split: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Validation Split\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.validation_split,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          validation_split: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Test Split\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.test_split,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          test_split: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Minimum Improvement\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.improvement,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          improvement: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Patience\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.patience,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          patience: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Batch Size\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.batch,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          batch: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Learning Rate Scheduler\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"create-model-configuration-option-checkbox\",\n                      type: \"checkbox\",\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          lr_scheduler: !configuration.lr_scheduler\n                        }));\n                      },\n                      checked: configuration.lr_scheduler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 626,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Optimiser\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: configuration.optimiser,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          optimiser: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        disabled: true,\n                        defaultValue: true,\n                        value: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adadelta\",\n                        children: \"Adadelta\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adagrad\",\n                        children: \"Adagrad\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adam\",\n                        children: \"Adam\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 646,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adamax\",\n                        children: \"Adamax\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Ftrl\",\n                        children: \"Ftrl\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Nadam\",\n                        children: \"Nadam\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"RMSprop\",\n                        children: \"RMSprop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 650,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"SGD\",\n                        children: \"SGD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 651,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Loss\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: configuration.loss,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          loss: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        disabled: true,\n                        defaultValue: true,\n                        value: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 662,\n                        columnNumber: 61\n                      }, this), uploadedDataset.labels.length === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"binary_crossentropy\",\n                          children: \"Binary Crossentropy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 665,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"hinge\",\n                          children: \"Hinge\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 666,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"squared_hinge\",\n                          children: \"Squared Hinge\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 667,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true), uploadedDataset.labels.length > 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"categorical_crossentropy\",\n                          children: \"Categorical Crossentropy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 672,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"sparse_categorical_crossentropy\",\n                          children: \"Sparse Categorical Crossentropy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 673,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"kl_divergence\",\n                          children: \"Kullback Leibler Divergence\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 674,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 41\n            }, this), viewDataset && uploadedDataset && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-model-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-data-header\",\n                children: \"Selected Dataset:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-data-header-dataset\",\n                children: uploadedDataset._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-data-images-list\",\n                children: images.map((image, i) => {\n                  if (i >= start && i < end) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-model-data-image\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `http://127.0.0.1:5000/files/${uploadedDataset.imageFile}/${image}.jpg`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 691,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: assignedLabels[i]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 692,\n                        columnNumber: 69\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 690,\n                      columnNumber: 65\n                    }, this);\n                  }\n                })\n              }, refreshData, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-data-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"create-model-data-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(images.length / 20)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"create-model-data-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: workspace.creator === currentUser.id || type === \"create\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"Select a dataset...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"No model...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 45\n            }, this)\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"AQPW7oB+i9VJCHgKnpxvdFgl4HY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useRef","useHistory","useParams","usersAPI","itemsAPI","globalAPI","imageAPI","trainAPI","OpenItemsContext","ArrowForwardIosIcon","ArrowBackIosNewIcon","ModelNode","ClearIcon","AddIcon","RemoveIcon","Workspace","currentUser","type","stage","setStage","title","setTitle","description","setDescription","visibility","setVisibility","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","updated","setUpdated","picture","setPicture","start","setStart","end","setEnd","page","setPage","image","setImage","datasetID","setDatasetID","uploadedDataset","setUploadedDataset","workspace","setWorkspace","images","setImages","assignedLabels","setAssignedLabels","viewDataset","setViewDataset","refreshData","setRefreshData","refreshDiagram","setRefreshDiagram","changedSettings","setChangedSettings","model","setModel","selectedNode","setSelectedNode","configuration","setConfiguration","epochs","training_split","validation_split","test_split","improvement","patience","batch","lr_scheduler","optimiser","loss","addNode","setAddNode","results","setResults","loaded","setLoaded","disableCreate","setDisabledCreate","disableTrain","setDisabledTrain","displayPublic","setDisplayPublic","displayExist","setDisplayExist","addOpenItems","removeOpenItems","useContext","modelRef","workspaceID","id","publicInterval","existInterval","history","fetchData","get","data","map","previous","creator","_id","dataset","fetch","imageFile","then","response","json","state","filename","label","err","current","scrollIntoView","behavior","block","inline","exist","updatedDate","Date","currentDate","getTime","setDate","Math","floor","toString","searchFunctionKey","e","key","existingDataset","updateUpvote","put","updateBookmark","updateVisibility","displayPublicInterval","clearInterval","setInterval","displayExistInterval","previousPage","nextPage","length","checkPublic","success","value","activation","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","workspaceResponse","bookmarks","toISOString","push","train","formData","labels","node","updateWorkspace","tempPicture","undefined","deleteWorkspace","delete","replace","target","files","i","splice","stateCopy","Number","ceil"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\"\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport globalAPI from '../API/global'\nimport imageAPI from '../API/images'\nimport trainAPI from '../API/train'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ModelNode from '../Components/Model-Node';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nconst Workspace = ({currentUser, type}) => {\n    const [stage, setStage] = useState(\"model\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [updated, setUpdated] = useState()\n    const [picture, setPicture] = useState()\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(20)\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [datasetID, setDatasetID] = useState(\"\")\n    const [uploadedDataset, setUploadedDataset] = useState()\n    const [workspace, setWorkspace] = useState([]);\n    const [images, setImages] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState([])\n    const [viewDataset, setViewDataset] = useState(false)\n    const [refreshData, setRefreshData] = useState()\n    const [refreshDiagram, setRefreshDiagram] = useState()\n    const [changedSettings, setChangedSettings] = useState(false)\n    const [model, setModel] = useState([])\n    const [selectedNode, setSelectedNode] = useState(0)\n    const [configuration, setConfiguration] = useState({epochs: \"\", training_split: \"\", validation_split: \"\", test_split: \"\", improvement: \"\",\n                                                        patience: \"\", batch: \"\", lr_scheduler: false, optimiser: \"\", loss: \"\"})\n    const [addNode, setAddNode] = useState(false)\n    const [results, setResults] = useState()\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const [disableTrain, setDisabledTrain] = useState(true)\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const {addOpenItems, removeOpenItems} = useContext(OpenItemsContext);\n    const modelRef = useRef(null)\n    const workspaceID = useParams().id;\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (type === \"create\") {\n                    const workspace = await usersAPI.get(\"/created?type=workspace\");\n    \n                    workspace.data.data.map((workspace) => {\n                        setWorkspace(previous => [...previous, workspace.title]);\n                    })\n                } else {\n                    const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n\n                    if (workspace.data.data.creator === currentUser.id) {\n                        addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                    }\n\n                    setWorkspace(workspace.data.data);\n                    setUpdated(workspace.data.data.updated);\n                    setBookmarked(workspace.data.data.bookmarked)\n                    setUpvoted(workspace.data.data.upvoted)\n                    setPicture(workspace.data.data.picture)\n                    setUpvotes(workspace.data.data.upvotes)\n                    setDatasetID(workspace.data.data.dataset._id)\n                    setVisibility(workspace.data.data.visibility)\n                    setTitle(workspace.data.data.title)\n                    setDescription(workspace.data.data.description)\n                    setModel(workspace.data.data.model)\n                    setConfiguration(workspace.data.data.configuration)\n\n                    fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.imageFile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(workspace.data.data.dataset)\n                        })\n                }\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (modelRef.current) {\n            modelRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'end',\n                inline: 'end'\n            })\n        }\n    }, [model, addNode])\n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded, updated])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && datasetID !== \"\") {\n            existingDataset()\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${workspace._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*20)\n            setEnd((page-1)*20)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if (page*20 < images.length && images.length > 20) {\n            setPage(state => state+1)\n            setStart((page)*20)\n            setEnd((page+1)*20)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const existingDataset = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?id=${datasetID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${checkPublic.data.data.imageFile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(checkPublic.data.data)\n                            setRefreshData(new Date().getTime())\n                            {model.length === 0 &&\n                                setModel([{type: \"Input\", value: 1, activation: \"\"}])\n                            }\n                        })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const workspaceResponse = await itemsAPI.post(\"/\", {\n                title: title,\n                dataset: uploadedDataset._id,\n                creator: currentUser.id,\n                description: description,\n                picture: imageName,\n                upvotes: [],\n                bookmarks: [],\n                updated: new Date().toISOString(),\n                visibility: visibility,\n                type: \"workspace\"\n            });\n\n            history.push(`/workspace/${workspaceResponse.data.data}`)\n        } catch (err) {}\n    }\n\n    const train = async () => {\n        try {\n            // setDisabledTrain(true)\n            setStage(\"train\")\n    \n            const formData = new FormData();\n        \n            formData.append('epochs', configuration.epochs)\n            formData.append('training_split', configuration.training_split)\n            formData.append('validation_split', configuration.validation_split)\n            formData.append('test_split', configuration.test_split)\n            formData.append('improvement', configuration.improvement)\n            formData.append('patience', configuration.patience)\n            formData.append('batch', configuration.batch)\n            formData.append('lr_scheduler', configuration.lr_scheduler)\n            formData.append('optimiser', configuration.optimiser)\n            formData.append('loss', configuration.loss)\n            formData.append('imageFile', uploadedDataset.imageFile)\n\n            uploadedDataset.labels.map(label => {\n                formData.append('labels[]', label)\n            })\n            model.map(node => {\n                formData.append('activations[]', node.activation)\n                formData.append('units[]', node.value)\n            })\n\n            const response = await trainAPI.post(\"\", formData);\n\n            if (response) {\n                setResults(response)\n                setStage(\"evaluation\")\n            } else {\n                setDisabledTrain(false)\n            }\n        } catch (err) {}\n    }\n\n    const updateWorkspace = async () => {\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n            \n            try {\n                const tempPicture = picture\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: imageResponse.data.data,\n                    dataset: uploadedDataset._id,\n                    updated: new Date().toISOString()\n                })\n\n                setImage(undefined)\n                setPicture(imageResponse.data.data)\n\n                if (tempPicture !== \"default.png\") {\n                    await imageAPI.put('/remove', {picture: tempPicture});\n                }\n            } catch (err) {}\n        } else {\n            try {\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: picture,\n                    dataset: uploadedDataset._id,\n                    updated: new Date().toISOString()\n                })\n            } catch (err) {}\n        }\n\n        setUpdated(new Date().toISOString())\n        setChangedSettings(false)\n    }\n\n    const deleteWorkspace = async () => {\n        try {\n            await itemsAPI.delete(`/${workspaceID}`)\n\n            removeOpenItems(workspaceID)\n            history.replace(\"/home\")\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <input className=\"create-item-title\"\n                                placeholder=\"Title\"\n                                onChange={e => {setTitle(e.target.value)}}\n                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                value={title} />\n                        <textarea className=\"create-item-description\"\n                                    placeholder=\"Description\"\n                                    onChange={e => {setDescription(e.target.value)}}\n                                    disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                    value={description} />\n                        {workspace.creator === currentUser.id || type === \"create\" &&\n                            <>\n                                <div className=\"create-item-setup\">\n                                    <label className=\"create-item-setup-label\">Picture</label>\n                                    <input className=\"create-item-setup-input\"\n                                            type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImage(e.target.files[0])}} />\n                                </div>\n                                <div className=\"create-item-setup\">\n                                    <label className=\"create-item-setup-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onChange={() => {setVisibility(previous => !previous)}}\n                                            checked={visibility} />\n                                </div>\n                            </>\n                        }\n                        <div className=\"sidebar-divided\" />\n                        <input className=\"create-workspace-import-existing\"\n                                placeholder=\"Dataset ID\"\n                                onChange={e => {setDatasetID(e.target.value)}}\n                                onKeyPress={searchFunctionKey}\n                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                value={datasetID} />\n                        <button className=\"create-item-view-dataset\"\n                                onClick={() => {setViewDataset(state => !state)}}>{viewDataset ? \"Hide Dataset\" : \"Show Dataset\"}</button>\n                        {type === \"view\" && workspace.creator === currentUser.id &&\n                            <>\n                                <div className=\"sidebar-divided\" />\n                                <button className=\"white-button\"\n                                        onClick={() => {deleteWorkspace()}}>Delete</button>\n                                <button className={changedSettings ? \"blue1-button\" : \"blue2-button\"}\n                                        disabled={!changedSettings}\n                                        onClick={() => {updateWorkspace()}}>Save Changes</button>\n                            </>\n                        }\n                        {displayPublic && <p className=\"create-item-data-notification\">Dataset not public</p>}\n                        {displayExist && <p className=\"create-item-data-notification\">Dataset does not exist</p>}\n                    </div>\n                    <div className=\"inner\">\n                        {type === \"create\" &&\n                            <>\n                                <div className=\"view-items-top\">\n                                    {workspace.creator === currentUser.id || type === \"create\" ?\n                                        <>\n                                            <h1>Create Workspace</h1>\n                                            <span />\n                                            <button className={disableTrain ? \"blue2-button\" : \"blue1-button\"}\n                                                    disabled={disableTrain}\n                                                    onClick={() => {uploadImage()}}>Train</button>\n                                        </>\n                                    :\n                                        <>\n                                            <p>Model</p>\n                                            <p>Evaluation</p>\n                                        </>\n                                    }\n                                </div>\n                                {model.length !== 0 ?\n                                    <div className=\"create-modelling-body\">\n                                        <div className=\"create-model\">\n                                            <div className=\"create-model-diagram\" key={refreshDiagram}>\n                                                {model.map((node, i) => {\n                                                    return (\n                                                        <div key={i}>\n                                                            <div className={\"create-model-diagram-node\"}>\n                                                                <div onClick={() => {setSelectedNode(i)}}>\n                                                                    <ModelNode setSelectedNode={setSelectedNode} type={node.type} value={node.value} selected={i === selectedNode} last={i === model.length-1} />\n                                                                </div>\n                                                                {node.type !== \"Input\" && (workspace.creator === currentUser.id || type === \"create\") &&\n                                                                    <div onClick={() => {{selectedNode === i ?\n                                                                                            setSelectedNode(state => state-1)\n                                                                                        : selectedNode < i ?\n                                                                                            setSelectedNode(state => state)\n                                                                                        : selectedNode > i &&\n                                                                                            <>\n                                                                                                {selectedNode-i === 1 ?\n                                                                                                    setSelectedNode(state => state-1)\n                                                                                                :\n                                                                                                    setSelectedNode(i)\n                                                                                                } \n                                                                                            </>  \n                                                                                        }\n                                                                                        model.splice(i, 1)\n                                                                                        setRefreshDiagram(new Date().getTime())}}>\n                                                                        <ClearIcon className=\"create-model-diagram-remove\" />\n                                                                    </div>\n                                                                }\n                                                            </div>\n                                                            {i === model.length-1 && node.type !== \"Output\" &&\n                                                                <>\n                                                                    {addNode && (workspace.creator === currentUser.id || type === \"create\") ?\n                                                                        <div className=\"create-model-diagram-add\">\n                                                                            <div onClick={() => {setAddNode(false)}}>\n                                                                                <RemoveIcon className=\"create-model-diagram-add-icon\" />\n                                                                            </div>\n                                                                            <div className=\"create-model-diagram-add-options\">\n                                                                                <button onClick={() => {setModel(state => [...state, {\n                                                                                    type: \"Dense\",\n                                                                                    value: 0,\n                                                                                    activation: \"\"\n                                                                                }])\n                                                                                setSelectedNode(model.length)\n                                                                                setAddNode(false)\n                                                                                }}>Dense</button>\n                                                                                {model.length > 1 &&\n                                                                                    <button onClick={() => {\n                                                                                        {uploadedDataset.labels.length === 2 ?\n                                                                                            setModel(state => [...state, {\n                                                                                                type: \"Output\",\n                                                                                                value: 1,\n                                                                                                activation: \"\"\n                                                                                            }])\n                                                                                        :\n                                                                                            setModel(state => [...state, {\n                                                                                                type: \"Output\",\n                                                                                                value: uploadedDataset.labels.length,\n                                                                                                activation: \"\"\n                                                                                            }])\n                                                                                        }\n                                                                                    setSelectedNode(model.length)\n                                                                                    setAddNode(false)\n                                                                                    }}>Output</button>\n                                                                                }\n                                                                            </div>\n                                                                        </div>\n                                                                    :\n                                                                        <div onClick={() => {setAddNode(true)}}>\n                                                                            <AddIcon className=\"create-model-diagram-add-icon\" />\n                                                                        </div>\n                                                                    }\n                                                                </>\n                                                            }\n                                                        </div>\n                                                    )\n                                                })}\n                                                <div ref={modelRef} />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"create-model-selected\">\n                                                <p>{model[selectedNode].type}</p>\n                                                <label>Units</label>\n                                                <input value={model[selectedNode].value} \n                                                        disabled={(model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.creator === currentUser.id || type === \"create\")}\n                                                        onChange={e => {setModel(state => {\n                                                                            const stateCopy = [...state]\n                                                                        \n                                                                            stateCopy[selectedNode] = {\n                                                                                ...stateCopy[selectedNode],\n                                                                                value: Number(e.target.value)\n                                                                            }\n                                                                        \n                                                                            return stateCopy\n                                                                        })\n                                                                        setRefreshDiagram(new Date().getTime())}} />\n                                                {model[selectedNode].type !== \"Input\" &&\n                                                    <>\n                                                        <label>Activation</label>\n                                                        <select value={model[selectedNode].activation} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setModel(state => {\n                                                                                    const stateCopy = [...state]\n                                                                                \n                                                                                    stateCopy[selectedNode] = {\n                                                                                        ...stateCopy[selectedNode],\n                                                                                        activation: e.target.value\n                                                                                    }\n                                                                                \n                                                                                    return stateCopy\n                                                                                })\n                                                                                setRefreshDiagram(new Date().getTime())}}>\n                                                                <option disabled defaultValue value=\"\"></option>\n                                                                <option value=\"sigmoid\">Sigmoid</option>\n                                                                <option value=\"softmax\">Softmax</option>\n                                                                <option value=\"softplus\">Softplus</option>\n                                                                <option value=\"softsign\">Softsign</option>\n                                                                <option value=\"swish\">Swish</option>\n                                                                <option value=\"selu\">Selu</option>\n                                                                <option value=\"tanh\">Tanh</option>\n                                                                <option value=\"elu\">Elu</option>\n                                                                <option value=\"exponential\">Exponential</option>\n                                                                <option value=\"gelu\">Gelu</option>\n                                                                <option value=\"hard_sigmoid\">Hard Sigmoid</option>\n                                                                <option value=\"linear\">Linear</option>\n                                                                <option value=\"relu\">Relu</option>\n                                                        </select>\n                                                    </>\n                                                }  \n                                            </div>\n                                            <div className=\"create-model-configuration\">\n                                                <div className=\"create-model-configuration-option\">\n                                                    <div>\n                                                        <label>Epochs</label>\n                                                        <input value={configuration.epochs}\n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")} \n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    epochs: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Training Split</label>\n                                                        <input value={configuration.training_split} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    training_split: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Validation Split</label>\n                                                        <input value={configuration.validation_split} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    validation_split: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Test Split</label>\n                                                        <input value={configuration.test_split} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    test_split: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Minimum Improvement</label>\n                                                        <input value={configuration.improvement} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    improvement: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Patience</label>\n                                                        <input value={configuration.patience} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    patience: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Batch Size</label>\n                                                        <input value={configuration.batch} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    batch: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Learning Rate Scheduler</label>\n                                                        <input className=\"create-model-configuration-option-checkbox\"\n                                                                type=\"checkbox\" \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    lr_scheduler: !configuration.lr_scheduler\n                                                                }))}}\n                                                                checked={configuration.lr_scheduler} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Optimiser</label>\n                                                        <select value={configuration.optimiser} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    optimiser: e.target.value\n                                                                }))}}>\n                                                            <option disabled defaultValue value=\"\"></option>\n                                                            <option value=\"Adadelta\">Adadelta</option>\n                                                            <option value=\"Adagrad\">Adagrad</option>\n                                                            <option value=\"Adam\">Adam</option>\n                                                            <option value=\"Adamax\">Adamax</option>\n                                                            <option value=\"Ftrl\">Ftrl</option>\n                                                            <option value=\"Nadam\">Nadam</option>\n                                                            <option value=\"RMSprop\">RMSprop</option>\n                                                            <option value=\"SGD\">SGD</option>\n                                                        </select>\n                                                    </div>\n                                                    <div>\n                                                        <label>Loss</label>\n                                                        <select value={configuration.loss} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    loss: e.target.value\n                                                                }))}}>\n                                                            <option disabled defaultValue value=\"\"></option>\n                                                            {uploadedDataset.labels.length === 2 &&\n                                                                <>\n                                                                    <option value=\"binary_crossentropy\">Binary Crossentropy</option>\n                                                                    <option value=\"hinge\">Hinge</option>\n                                                                    <option value=\"squared_hinge\">Squared Hinge</option>\n                                                                </>\n                                                            }\n                                                            {uploadedDataset.labels.length > 2 &&\n                                                                <>\n                                                                    <option value=\"categorical_crossentropy\">Categorical Crossentropy</option>\n                                                                    <option value=\"sparse_categorical_crossentropy\">Sparse Categorical Crossentropy</option>\n                                                                    <option value=\"kl_divergence\">Kullback Leibler Divergence</option>\n                                                                </>\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {viewDataset && uploadedDataset &&\n                                            <div className=\"create-model-data\">\n                                                <p className=\"create-item-data-header\">Selected Dataset:</p>\n                                                <p className=\"create-item-data-header-dataset\">{uploadedDataset._id}</p>\n                                                <div className=\"create-model-data-images-list\" key={refreshData}>\n                                                    {images.map((image, i) => {\n                                                        if (i >= start && i < end) {\n                                                            return (\n                                                                <div className=\"create-model-data-image\" key={i}>\n                                                                    <img src={`http://127.0.0.1:5000/files/${uploadedDataset.imageFile}/${image}.jpg`} />\n                                                                    <p>{assignedLabels[i]}</p>\n                                                                </div>\n                                                            )\n                                                        }\n                                                    })}\n                                                </div>\n                                                <div className=\"create-model-data-pagination\">\n                                                    <ArrowBackIosNewIcon className=\"create-model-data-pagination-icon\" onClick={() => {previousPage()}} />\n                                                    <p>Page {page} / {Math.ceil(images.length/20)}</p>\n                                                    <ArrowForwardIosIcon className=\"create-model-data-pagination-icon\" onClick={() => {nextPage()}} />\n                                                </div>\n                                            </div>\n                                        }\n                                    </div>\n                                :\n                                    <>\n                                        {workspace.creator === currentUser.id || type === \"create\" ?\n                                            <p className=\"end-items\">Select a dataset...</p>\n                                        :\n                                            <p className=\"end-items\">No model...</p>\n                                        }\n                                    </> \n                                }\n                            </>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Workspace"]},"metadata":{},"sourceType":"module"}