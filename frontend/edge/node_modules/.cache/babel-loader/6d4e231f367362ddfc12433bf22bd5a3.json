{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Dataset.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport datasetsAPI from '../API/datasets';\nimport globalAPI from '../API/global';\nimport fileAPI from '../API/files';\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [dataset, setDataset] = useState();\n  const [workspaces, setWorkspaces] = useState();\n  const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n  const [displayType, setDisplayType] = useState(\"data\");\n  const [dataTable, setDataTable] = useState();\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [dataFile, setDataFile] = useState();\n  const [row, setRow] = useState();\n  const [maxRows, setMaxRows] = useState();\n  const [page, setPage] = useState(1);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [replaceData, setReplaceData] = useState(false);\n  const [editData, setEditData] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [copyData, setCopyData] = useState(true);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [visibility, setVisibility] = useState();\n  const [comments, setComments] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [section, setSection] = useState(\"data\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const [refreshTable, setRefreshTable] = useState();\n  const {\n    addOpenItems\n  } = useContext(OpenItemsContext);\n  const copyInterval = useRef(0);\n  const datasetID = useParams().id;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const dataset = await datasetsAPI.get(`/${datasetID}`);\n        const comments = await globalAPI.get(`/comment/${datasetID}?type=dataset`);\n        const workspaces = await datasetsAPI.get(`/workspaces?id=${datasetID}&date=${new Date().toISOString()}`);\n\n        if (workspaces.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        if (dataset.data.data.creator === currentUser.id) {\n          addOpenItems(dataset.data.data._id, dataset.data.data.title, dataset.data.data.type);\n        }\n\n        setDataset(dataset.data.data);\n        setBookmarked(dataset.data.data.bookmarked);\n        setUpvoted(dataset.data.data.upvoted);\n        setUpvotes(dataset.data.data.upvotes);\n        setVisibility(dataset.data.data.visibility);\n        setTitle(dataset.data.data.title);\n        setDescription(dataset.data.data.description);\n        setWorkspaces(workspaces.data.data);\n        setComments(comments.data.data);\n        fetch(`http://127.0.0.1:5000/files/${dataset.data.data.data}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n          setLoaded(true);\n        });\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded) {\n      const updatedDate = new Date(dataset.updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded]);\n\n  const fetchDataWorkspaces = async date => {\n    if (!finishedWorkspaces) {\n      try {\n        const fetchedWorkspaces = await datasetsAPI.get(`/workspaces?date=${date}`);\n        ;\n\n        if (fetchedWorkspaces.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        setWorkspaces(items => [...items, ...fetchedWorkspaces.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (workspaces.length !== 0) {\n      {\n        fetchDataWorkspaces(workspaces[workspaces.length - 1].createdAt);\n      }\n    }\n  };\n\n  const copiedInterval = () => {\n    clearInterval(copyInterval.current);\n    navigator.clipboard.writeText(dataset.data);\n    setCopyData(false);\n    copyInterval.current = setInterval(() => {\n      setCopyData(true);\n    }, 800);\n    return () => {\n      clearInterval(copyInterval.current);\n    };\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await globalAPI.put(`/upvote/${dataset._id}?type=${dataset.type}&state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await globalAPI.put(`/bookmark/${dataset._id}?type=${dataset.type}&state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await globalAPI.put(`/visibility/${dataset._id}?type=${dataset.type}&state=${visibility}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const addComment = async e => {\n    e.preventDefault();\n\n    try {\n      await globalAPI.put(`/comment/${datasetID}?type=dataset`, {\n        comment: comment\n      });\n      setComments([{\n        user: {\n          name: currentUser.name\n        },\n        comment: comment\n      }, ...comments]);\n      setComment(\"\");\n    } catch (err) {}\n  };\n\n  const fetchRow = () => {\n    if (!isNaN(row) && row !== \"\") {\n      setStart(row - 1);\n      setEnd(row);\n    } else {\n      setRow(\"\");\n      setStart((page - 1) * 30);\n      setEnd(page * 30);\n    }\n\n    setRefreshTable(new Date().getTime());\n  };\n\n  const cancelRow = () => {\n    if (start === (page - 1) * 30 && end === page * 30) {\n      setRow(\"\");\n    } else {\n      setStart((page - 1) * 30);\n      setEnd(page * 30);\n      setRefreshTable(new Date().getTime());\n    }\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setPage(state => state - 1);\n    }\n\n    setStart((page - 1) * 30);\n    setEnd(page * 30);\n    setRefreshTable(new Date().getTime());\n  };\n\n  const nextPage = () => {\n    if (page * 30 < maxRows && maxRows > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshTable(new Date().getTime());\n    }\n  };\n\n  const uploadData = async () => {\n    if (dataFile !== undefined) {\n      const file = dataFile;\n      const reader = new FileReader();\n      const formData = new FormData();\n      const id = new Date().toISOString();\n\n      reader.onload = function (e) {\n        setDataTable(e.target.result);\n        setMaxRows(e.target.result.slice(e.target.result.indexOf('\\n') + 1).split('\\n').length);\n        setRefreshTable(new Date().getTime());\n      };\n\n      reader.readAsText(file);\n      formData.append('data', dataFile);\n      formData.append('id', id);\n\n      try {\n        await fileAPI.post(\"/upload\", formData);\n      } catch (err) {}\n    }\n  };\n\n  const commentDate = date => {\n    const updatedDate = new Date(date);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`;\n    } else {\n      return \"Posted just now\";\n    }\n  };\n\n  const updateWorkspaceSettings = () => {};\n\n  const deleteWorkspace = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: dataset.self ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"self-dataset-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: dataset.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: section === \"data\" ? \"blue-button\" : \"grey-button\",\n            onClick: () => {\n              setSection(\"data\");\n            },\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: section === \"experiments\" ? \"blue-button\" : \"grey-button\",\n            onClick: () => {\n              setSection(\"experiments\");\n            },\n            children: \"Experiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: section === \"settings\" ? \"blue-button\" : \"grey-button\",\n            onClick: () => {\n              setSection(\"settings\");\n            },\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: section === \"comments\" ? \"blue-button\" : \"grey-button\",\n            onClick: () => {\n              setSection(\"comments\");\n            },\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-body\",\n          children: section === \"data\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-dataset-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"self-dataset-data-options\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"self-dataset-data-table-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"self-dataset-data-table-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / Page \", Math.ceil(maxRows / 30)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"self-dataset-data-table-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 45\n              }, this), replaceData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"data\",\n                  onChange: e => {\n                    setDataFile(e.target.files[0]);\n                  }\n                }, Date.now(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    uploadData();\n                  },\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `self-dataset-data-replace ${replaceData ? \"blue-button\" : \"grey-button\"}`,\n                onClick: () => {\n                  setReplaceData(state => !state);\n                },\n                children: \"Replace Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `self-dataset-data-edit ${editData ? \"blue-button\" : \"grey-button\"}`,\n                onClick: () => {\n                  setEditData(state => !state);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://127.0.0.1:5000/files/${dataset.data}.csv`,\n                download: true,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 41\n            }, this), dataTable !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"self-dataset-data-table\",\n                children: /*#__PURE__*/_jsxDEV(ViewData, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshTable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 49\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 37\n          }, this) : section === \"experiments\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-dataset-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 37\n          }, this) : section === \"settings\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-dataset-settings\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"self-dataset-settings-form\",\n              method: \"PUT\",\n              onSubmit: updateWorkspaceSettings,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Title\",\n                value: title,\n                onChange: e => {\n                  setTitle(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Description\",\n                value: description,\n                onChange: e => {\n                  setDescription(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"self-dataset-settings-picture\",\n                name: \"image\",\n                onChange: e => {\n                  setImage(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"self-dataset-settings-visibility\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"self-dataset-settings-visibility-label\",\n                  children: \"Public?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"self-dataset-settings-visibility-input\",\n                  onClick: () => {\n                    updateVisibility();\n                  },\n                  checked: visibility\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"self-dataset-settings-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\",\n                  disabled: title === \"\" || description === \"\",\n                  children: \"Save Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button\",\n                  type: \"button\",\n                  onClick: () => {\n                    deleteWorkspace();\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-dataset-comments\",\n            children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"self-dataset-comments-none\",\n              children: \"No Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: comments.map((comment, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-user\",\n                      children: comment.user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-date\",\n                      children: commentDate(comment.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"comment-card-comment\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 61\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 57\n                }, this);\n              })\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"width-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"other-dataset-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"other-dataset-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"other-dataset-picture\",\n              src: `http://localhost:4000/images/${dataset.picture}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-dataset-heading\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/dataset.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: dataset.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"other-dataset-meta\",\n                children: dataset.creatorName.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"other-dataset-meta\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n                className: `other-dataset-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n                onClick: () => {\n                  updateBookmark();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n                className: `other-dataset-icon ${upvoted ? \"blue\" : \"grey\"}`,\n                onClick: () => {\n                  updateUpvote();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `other-dataset-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n                children: upvotes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"other-dataset-description\",\n              children: dataset.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"other-dataset-select\",\n              onChange: e => {\n                setDisplayType(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"data\",\n                children: \"Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"workspace\",\n                children: \"Workspaces\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"comment\",\n                children: \"Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"other-dataset-bottom\",\n            children: displayType === \"data\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"other-dataset-copy\",\n                  children: [copyData ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Data ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 65\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Copied\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 82\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: !copyData,\n                    onClick: () => {\n                      copiedInterval();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                      className: \"other-dataset-copy-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `http://127.0.0.1:5000/files/${dataset.data}.csv`,\n                  download: true,\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-data-table-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Row number\",\n                  value: row,\n                  onChange: e => {\n                    setRow(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    fetchRow();\n                  },\n                  className: \"blue-button other-dataset-data-fetch\",\n                  children: \"Fetch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    cancelRow();\n                  },\n                  className: \"grey-button other-dataset-data-cancel-fetch\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"other-dataset-data-table-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / Page \", Math.ceil(maxRows / 30)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"other-dataset-data-table-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-data-table\",\n                children: /*#__PURE__*/_jsxDEV(ViewData, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshTable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : displayType === \"workspace\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-workspaces\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: `${workspaces.length} Workspaces use this dataset`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"http://localhost:3000/List.png\",\n                  className: \"other-dataset-workspaces-row-icon\",\n                  onClick: () => {\n                    setRowFormat(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"http://localhost:3000/Grid.png\",\n                  className: \"other-dataset-workspaces-grid-icon\",\n                  onClick: () => {\n                    setRowFormat(false);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-workspaces-list\",\n                children: workspaces.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: workspaces.map((workspace, i) => {\n                    return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                      item: workspace,\n                      creator: workspace.creatorName.name,\n                      currentUserID: currentUser.id,\n                      created: workspace.creator === currentUser.id\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 80\n                    }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                      item: workspace,\n                      creator: workspace.creatorName.name,\n                      currentUserID: currentUser.id,\n                      created: workspace.creator === currentUser.id\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 238\n                    }, this);\n                  })\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-workspaces-end\",\n                children: workspaces.length >= 0 && finishedWorkspaces ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"end-items\",\n                  children: \"No more workspaces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"load-items\",\n                  onClick: () => {\n                    loadMore();\n                  },\n                  children: \"Load more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"other-dataset-comment-form\",\n                method: \"PUT\",\n                onSubmit: addComment,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"other-dataset-comment\",\n                  children: \"Leave a Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"other-dataset-comment-input\",\n                  placeholder: \"Write here\",\n                  value: comment,\n                  onChange: e => {\n                    setComment(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\",\n                  children: \"Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"other-dataset-comments\",\n                children: comments.map((comment, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"comment-card-user\",\n                        children: comment.user.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"comment-card-date\",\n                        children: commentDate(comment.createdAt)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-comment\",\n                      children: comment.comment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 61\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(Workspace, \"KihJqcDGZWJxzIKpapXCaAXv3XQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Dataset.jsx"],"names":["React","useState","useEffect","useRef","useContext","useHistory","Link","useParams","datasetsAPI","globalAPI","fileAPI","ViewData","OpenItemsContext","ItemRowCard","ItemSquareCard","BookmarkIcon","ThumbUpIcon","ContentCopyIcon","ArrowForwardIosIcon","ArrowBackIosNewIcon","Workspace","currentUser","loaded","setLoaded","dataset","setDataset","workspaces","setWorkspaces","finishedWorkspaces","setFinishedWorkspaces","displayType","setDisplayType","dataTable","setDataTable","start","setStart","end","setEnd","dataFile","setDataFile","row","setRow","maxRows","setMaxRows","page","setPage","rowFormat","setRowFormat","replaceData","setReplaceData","editData","setEditData","date","setDate","copyData","setCopyData","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","visibility","setVisibility","comments","setComments","comment","setComment","section","setSection","title","setTitle","description","setDescription","image","setImage","refreshTable","setRefreshTable","addOpenItems","copyInterval","datasetID","id","fetchData","get","Date","toISOString","data","length","creator","_id","type","fetch","then","response","text","slice","indexOf","split","err","updatedDate","updated","currentDate","getTime","Math","floor","toString","fetchDataWorkspaces","fetchedWorkspaces","items","loadMore","createdAt","copiedInterval","clearInterval","current","navigator","clipboard","writeText","setInterval","updateUpvote","put","state","updateBookmark","updateVisibility","addComment","e","preventDefault","user","name","fetchRow","isNaN","cancelRow","previousPage","nextPage","uploadData","undefined","file","reader","FileReader","formData","FormData","onload","target","result","readAsText","append","post","commentDate","updateWorkspaceSettings","deleteWorkspace","self","ceil","files","now","value","map","i","picture","creatorName","workspace"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useContext} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport datasetsAPI from '../API/datasets'\nimport globalAPI from '../API/global'\nimport fileAPI from '../API/files'\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\nconst Workspace = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [dataset, setDataset] = useState()\n    const [workspaces, setWorkspaces] = useState()\n    const [finishedWorkspaces, setFinishedWorkspaces] = useState(false)\n    const [displayType, setDisplayType] = useState(\"data\")\n    const [dataTable, setDataTable] = useState()\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [dataFile, setDataFile] = useState()\n    const [row, setRow] = useState()\n    const [maxRows, setMaxRows] = useState()\n    const [page, setPage] = useState(1)\n    const [rowFormat, setRowFormat] = useState(false)\n    const [replaceData, setReplaceData] = useState(false)\n    const [editData, setEditData] = useState(false)\n    const [date, setDate] = useState(\"\");\n    const [copyData, setCopyData] = useState(true)\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [visibility, setVisibility] = useState()\n    const [comments, setComments] = useState()\n    const [comment, setComment] = useState(\"\")\n    const [section, setSection] = useState(\"data\")\n    const [title, setTitle] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [image, setImage] = useState();\n    const [refreshTable, setRefreshTable] = useState()\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const copyInterval = useRef(0)\n    const datasetID = useParams().id;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const dataset = await datasetsAPI.get(`/${datasetID}`);\n                const comments = await globalAPI.get(`/comment/${datasetID}?type=dataset`);\n                const workspaces = await datasetsAPI.get(`/workspaces?id=${datasetID}&date=${new Date().toISOString()}`);\n\n                if (workspaces.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                if (dataset.data.data.creator === currentUser.id) {\n                    addOpenItems(dataset.data.data._id, dataset.data.data.title, dataset.data.data.type)\n                }\n\n                setDataset(dataset.data.data);\n                setBookmarked(dataset.data.data.bookmarked)\n                setUpvoted(dataset.data.data.upvoted)\n                setUpvotes(dataset.data.data.upvotes)\n                setVisibility(dataset.data.data.visibility)\n                setTitle(dataset.data.data.title)\n                setDescription(dataset.data.data.description)\n                setWorkspaces(workspaces.data.data)\n                setComments(comments.data.data)\n\n                fetch(`http://127.0.0.1:5000/files/${dataset.data.data.data}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                        setLoaded(true)\n                    })\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (loaded) {\n            const updatedDate = new Date(dataset.updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded])\n\n    const fetchDataWorkspaces = async (date) => {\n        if (!finishedWorkspaces) {\n            try {\n                const fetchedWorkspaces = await datasetsAPI.get(`/workspaces?date=${date}`);;\n    \n                if (fetchedWorkspaces.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                setWorkspaces(items => [...items, ...fetchedWorkspaces.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (workspaces.length !== 0) {\n            {fetchDataWorkspaces(workspaces[workspaces.length-1].createdAt)}\n        }\n    };\n\n    const copiedInterval = () => {\n        clearInterval(copyInterval.current)\n        navigator.clipboard.writeText(dataset.data);\n        setCopyData(false);\n        copyInterval.current = setInterval(() => {\n            setCopyData(true);\n        }, 800)\n        return ()=> {clearInterval(copyInterval.current)};\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${dataset._id}?type=${dataset.type}&state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${dataset._id}?type=${dataset.type}&state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${dataset._id}?type=${dataset.type}&state=${visibility}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        try {\n            await globalAPI.put(`/comment/${datasetID}?type=dataset`, {\n                comment: comment\n            });\n\n            setComments([{\n                user: {name: currentUser.name},\n                comment: comment\n            }, ...comments])\n            setComment(\"\")\n        } catch (err) {}\n    }\n\n    const fetchRow = () => {\n        if (!isNaN(row) && row !== \"\") {\n            setStart(row-1)\n            setEnd(row)\n        } else {\n            setRow(\"\")\n            setStart((page-1)*30)\n            setEnd(page*30)\n        }\n        setRefreshTable(new Date().getTime())\n    }\n\n    const cancelRow = () => {\n        if (start === (page-1)*30 && end === page*30) {\n            setRow(\"\")\n        } else {\n            setStart((page-1)*30)\n            setEnd(page*30)\n            setRefreshTable(new Date().getTime())\n        }\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setPage(state => state-1)\n        }\n        setStart((page-1)*30)\n        setEnd(page*30)\n        setRefreshTable(new Date().getTime())\n    }\n\n    const nextPage = () => {\n        if (page*30 < maxRows && maxRows > 30) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshTable(new Date().getTime())\n        }\n    }\n\n    const uploadData = async () => {\n        if (dataFile !== undefined) {\n            const file = dataFile;\n            const reader = new FileReader();\n            const formData = new FormData();\n            const id = new Date().toISOString();\n\n            reader.onload = function(e) {\n                setDataTable(e.target.result);\n                setMaxRows(e.target.result.slice(e.target.result.indexOf('\\n')+1).split('\\n').length)\n                setRefreshTable(new Date().getTime())\n            }\n\n            reader.readAsText(file)\n            \n            formData.append('data', dataFile);\n            formData.append('id', id)\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n        }\n    }\n\n    const commentDate = (date) => {\n        const updatedDate = new Date(date);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`\n        } else {\n            return \"Posted just now\"\n        }\n    }\n\n    const updateWorkspaceSettings = () => {\n\n    }\n\n    const deleteWorkspace = () => {\n\n    }\n\n    return (\n        <>\n            {loaded &&\n                <>\n                    {dataset.self ?\n                        <div className=\"sidebar-body\"> \n                            <div className=\"self-dataset-sidebar\">\n                                <h1>{dataset.title}</h1>\n                                <button className={section === \"data\" ? \"blue-button\" : \"grey-button\"} onClick={() => {setSection(\"data\")}}>Data</button>\n                                <button className={section === \"experiments\" ? \"blue-button\" : \"grey-button\"} onClick={() => {setSection(\"experiments\")}}>Experiments</button>\n                                <button className={section === \"settings\" ? \"blue-button\" : \"grey-button\"} onClick={() => {setSection(\"settings\")}}>Settings</button>\n                                <button className={section === \"comments\" ? \"blue-button\" : \"grey-button\"} onClick={() => {setSection(\"comments\")}}>Comments</button>\n                            </div>\n                            <div className=\"inner-body\">\n                                {section === \"data\" ?\n                                    <div className=\"self-dataset-data\">\n                                        <div className=\"self-dataset-data-options\">\n                                            <div className=\"self-dataset-data-table-pagination\">\n                                                <ArrowBackIosNewIcon className=\"self-dataset-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / Page {Math.ceil(maxRows/30)}</p>\n                                                <ArrowForwardIosIcon className=\"self-dataset-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                            {replaceData && \n                                                <>\n                                                    <input type=\"file\" \n                                                            name=\"data\"\n                                                            key={Date.now()}\n                                                            onChange={e => {setDataFile(e.target.files[0])}} />\n                                                    <button onClick={() => {uploadData()}}>Upload</button>\n                                                </>\n                                            }\n                                            <button className={`self-dataset-data-replace ${replaceData ? \"blue-button\" : \"grey-button\"}`} onClick={() => {setReplaceData(state => !state)}}>Replace Data</button>\n                                            <button className={`self-dataset-data-edit ${editData ? \"blue-button\" : \"grey-button\"}`} onClick={() => {setEditData(state => !state)}}>Edit</button>\n                                            <a href={`http://127.0.0.1:5000/files/${dataset.data}.csv`} download>Download</a>\n                                        </div>\n                                        {dataTable !== undefined &&\n                                            <>\n                                                <div className=\"self-dataset-data-table\">\n                                                    <ViewData dataTable={dataTable} start={start} end={end} key={refreshTable} />\n                                                </div>\n                                            </>\n                                        }\n                                    </div>\n                                : section === \"experiments\" ?\n                                    <div className=\"self-dataset-body\">\n                                    </div>\n                                : section === \"settings\" ?\n                                    <div className=\"self-dataset-settings\">\n                                        <form className=\"self-dataset-settings-form\" method=\"PUT\" onSubmit={updateWorkspaceSettings}>\n                                            <label>Title</label>\n                                            <input placeholder=\"Title\" value={title} onChange={e => {setTitle(e.target.value)}} />\n                                            <label>Description</label>\n                                            <textarea placeholder=\"Description\" value={description} onChange={e => {setDescription(e.target.value)}} />\n                                            <label>Picture</label>\n                                            <input type=\"file\" \n                                                    className=\"self-dataset-settings-picture\"\n                                                    name=\"image\" \n                                                    onChange={e => {setImage(e.target.files[0])}} />\n                                            <div className=\"self-dataset-settings-visibility\">\n                                                <label className=\"self-dataset-settings-visibility-label\">Public?</label>\n                                                <input type=\"checkbox\" \n                                                        className=\"self-dataset-settings-visibility-input\"\n                                                        onClick={() => {updateVisibility()}}\n                                                        checked={visibility} />\n                                            </div>\n                                            <div className=\"self-dataset-settings-buttons\">\n                                                <button className=\"blue-button\" disabled={title === \"\" || description === \"\"}>Save Changes</button>\n                                                <button className=\"white-button\" type=\"button\" onClick={() => {deleteWorkspace()}}>Delete</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                : \n                                    <div className=\"self-dataset-comments\">\n                                        {comments.length === 0 ?\n                                            <p className=\"self-dataset-comments-none\">No Comments</p>\n                                        :\n                                            <>\n                                                {comments.map((comment, i) => {\n                                                    return (\n                                                        <div className=\"comment-card\" key={i}>\n                                                            <div>\n                                                                <p className=\"comment-card-user\">{comment.user.name}</p>\n                                                                <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                            </div>\n                                                            <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </>\n                                        }\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    :\n                        <div className=\"width-body\">  \n                            <div className=\"other-dataset-body\">\n                                <div className=\"other-dataset-top\">\n                                    <img className=\"other-dataset-picture\" src={`http://localhost:4000/images/${dataset.picture}`} />\n                                    <div className=\"other-dataset-heading\">\n                                        <img src=\"http://localhost:3000/dataset.png\" />\n                                        <h1>{dataset.title}</h1>\n                                    </div>\n                                    <div>\n                                        <p className=\"other-dataset-meta\">{dataset.creatorName.name}</p>\n                                        <p className=\"other-dataset-meta\">{date}</p>\n                                        <BookmarkIcon className={`other-dataset-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />\n                                        <ThumbUpIcon className={`other-dataset-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                                        <p className={`other-dataset-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                                    </div>\n                                    <p className=\"other-dataset-description\">{dataset.description}</p>\n                                    <select className=\"other-dataset-select\" onChange={e => {setDisplayType(e.target.value)}}>\n                                        <option value=\"data\">Data</option>\n                                        <option value=\"workspace\">Workspaces</option>\n                                        <option value=\"comment\">Comments</option>\n                                    </select>\n                                </div>\n                                <div className=\"other-dataset-bottom\">\n                                    {displayType === \"data\" ? \n                                        <> \n                                            <div className=\"other-dataset-options\">\n                                                <div className=\"other-dataset-copy\">\n                                                    {copyData ? <p>Data ID</p> : <p>Copied</p>}\n                                                    <button disabled={!copyData} onClick={() => {copiedInterval()}}>\n                                                        <ContentCopyIcon className=\"other-dataset-copy-icon\" />\n                                                    </button>\n                                                </div>\n                                                <a href={`http://127.0.0.1:5000/files/${dataset.data}.csv`} download>Download</a>\n                                            </div>\n                                            <div className=\"other-dataset-data-table-pagination\">\n                                                <input placeholder=\"Row number\" value={row} onChange={e => {setRow(e.target.value)}} />\n                                                <button onClick={() => {fetchRow()}} className=\"blue-button other-dataset-data-fetch\">Fetch</button>\n                                                <button onClick={() => {cancelRow()}} className=\"grey-button other-dataset-data-cancel-fetch\">Cancel</button>\n                                                <span />\n                                                <ArrowBackIosNewIcon className=\"other-dataset-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / Page {Math.ceil(maxRows/30)}</p>\n                                                <ArrowForwardIosIcon className=\"other-dataset-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                            <div className=\"other-dataset-data-table\">\n                                                <ViewData dataTable={dataTable} start={start} end={end} key={refreshTable} />\n                                            </div>\n                                        </>\n                                    : displayType === \"workspace\" ?\n                                        <>\n                                            <div className=\"other-dataset-workspaces\">\n                                                <p>{`${workspaces.length} Workspaces use this dataset`}</p>\n                                                <img src=\"http://localhost:3000/List.png\" className=\"other-dataset-workspaces-row-icon\" onClick={() => {setRowFormat(true)}} />\n                                                <img src=\"http://localhost:3000/Grid.png\" className=\"other-dataset-workspaces-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                                            </div>\n                                            <div className=\"other-dataset-workspaces-list\">\n                                                {workspaces.length > 0 &&\n                                                    <>\n                                                        {workspaces.map((workspace, i) => {\n                                                            return rowFormat ? <ItemRowCard item={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={workspace.creator === currentUser.id} key={i} /> : <ItemSquareCard item={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={workspace.creator === currentUser.id} key={i} />\n                                                        })}\n                                                    </>\n                                                }\n                                            </div>\n                                            <div className=\"other-dataset-workspaces-end\">\n                                                {workspaces.length >= 0 && finishedWorkspaces ?\n                                                    <p className=\"end-items\">No more workspaces</p>\n                                                    :\n                                                    <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                                                }\n                                            </div>\n                                        </>\n                                    :\n                                        <>\n                                            <form className=\"other-dataset-comment-form\" method=\"PUT\" onSubmit={addComment}>\n                                                <p className=\"other-dataset-comment\">Leave a Comment</p>\n                                                <textarea className=\"other-dataset-comment-input\" placeholder=\"Write here\" value={comment} onChange={e => {setComment(e.target.value)}} />\n                                                <button className=\"blue-button\">Comment</button>\n                                            </form>\n                                            <div className=\"other-dataset-comments\">\n                                                {comments.map((comment, i) => {\n                                                    return (\n                                                        <div className=\"comment-card\" key={i}>\n                                                            <div>\n                                                                <p className=\"comment-card-user\">{comment.user.name}</p>\n                                                                <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                            </div>\n                                                            <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </div>\n                                        </>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </>\n            }\n        </>\n    )\n}\n\nexport default Workspace\n"]},"metadata":{},"sourceType":"module"}