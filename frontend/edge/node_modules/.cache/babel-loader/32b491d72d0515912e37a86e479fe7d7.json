{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport usersAPI from '../API/users';\nimport itemsAPI from '../API/items';\nimport imageAPI from '../API/images';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [uploadedDataset, setUploadedDataset] = useState();\n  const [workspaces, setWorkspaces] = useState([]);\n  const [images, setImages] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState([]);\n  const [refreshData, setRefreshData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspaces = await usersAPI.get(\"/created?type=workspace\");\n        workspaces.data.data.map(workspace => {\n          setWorkspaces(previous => [...previous, workspace.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 30);\n      setEnd((page - 1) * 30);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (page * 30 < dataFile.length && dataFile.length > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const existingDataset = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${dataID}/labels.json`).then(response => response.json()).then(images => {\n          images.map(image => {\n            setImages(state => [...state, image.filename]);\n            setAssignedLabels(state => [...state, image.label]);\n          });\n          setUploadedDataset(checkPublic.data.data);\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const workspaceResponse = await itemsAPI.post(\"/\", {\n        title: title,\n        dataset: uploadedDataset._id,\n        creator: currentUser.id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: [],\n        comments: [],\n        bookmarks: [],\n        updated: new Date().toISOString(),\n        visibility: visibility,\n        type: \"workspace\"\n      });\n      history.push(`/workspace/${workspaceResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: type === \"create\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-top\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Created Workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"d05RNJBj78TpEBWAIIogvgXYg8s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useRef","useHistory","usersAPI","itemsAPI","imageAPI","ArrowForwardIosIcon","ArrowBackIosNewIcon","Workspace","type","title","setTitle","description","setDescription","visibility","setVisibility","start","setStart","end","setEnd","page","setPage","image","setImage","dataID","setDataID","uploadedDataset","setUploadedDataset","workspaces","setWorkspaces","images","setImages","assignedLabels","setAssignedLabels","refreshData","setRefreshData","loaded","setLoaded","disableCreate","setDisabledCreate","displayPublic","setDisplayPublic","displayExist","setDisplayExist","publicInterval","existInterval","history","fetchData","get","data","map","workspace","previous","err","displayPublicInterval","clearInterval","current","setInterval","displayExistInterval","previousPage","state","Date","getTime","nextPage","dataFile","length","existingDataset","checkPublic","success","fetch","then","response","json","filename","label","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","workspaceResponse","dataset","_id","creator","currentUser","id","experiments","picture","upvotes","comments","bookmarks","updated","toISOString","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport imageAPI from '../API/images'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\nconst Workspace = ({type}) => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [dataID, setDataID] = useState(\"\")\n    const [uploadedDataset, setUploadedDataset] = useState()\n    const [workspaces, setWorkspaces] = useState([]);\n    const [images, setImages] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState([])\n    const [refreshData, setRefreshData] = useState()\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspaces = await usersAPI.get(\"/created?type=workspace\");\n\n                workspaces.data.data.map((workspace) => {\n                    setWorkspaces(previous => [...previous, workspace.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*30)\n            setEnd((page-1)*30)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if (page*30 < dataFile.length && dataFile.length > 30) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const existingDataset = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${dataID}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(checkPublic.data.data)\n                        })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const workspaceResponse = await itemsAPI.post(\"/\", {\n                title: title,\n                dataset: uploadedDataset._id,\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: [],\n                comments: [],\n                bookmarks: [],\n                updated: new Date().toISOString(),\n                visibility: visibility,\n                type: \"workspace\"\n            });\n\n            history.push(`/workspace/${workspaceResponse.data.data}`)\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        \n                    </div>\n                    <div className=\"inner\">\n                        {type === \"create\" &&\n                            <div className=\"view-items-top\">\n                                <h1>Created Workspace</h1>\n                            </div>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Workspace"]},"metadata":{},"sourceType":"module"}