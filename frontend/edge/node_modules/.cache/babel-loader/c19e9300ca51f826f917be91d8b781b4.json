{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport globalAPI from '../API/global';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = _ref => {\n  _s();\n\n  let {\n    searchPhrase,\n    setSearchPhrase,\n    currentUser\n  } = _ref;\n  const [filter, setFilter] = useState(\"workspaces\");\n  const [items, setItems] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n  const [finishedDatasets, setFinishedDatasets] = useState(false);\n  const urlPhrase = useParams().id;\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchPhrase === null) {\n        if (urlPhrase) {\n          const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n          if (items.data.data.length < 21) {\n            setFinishedWorkspaces(true);\n          }\n\n          setItems(items.data.data);\n          setLoaded(true);\n        } else {\n          history.push(\"/home\");\n        }\n      } else {\n        const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n        if (items.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        setWorkspaces(items.data.data);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDataItems = async id => {\n    if (!finishedItems) {\n      try {\n        const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n\n        if (fetchedItems.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items => [...items, ...fetchedItems.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (items.length !== 0) {\n      {\n        fetchDataItems(items[items.length - 1]._id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-items-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"view-items-search-input\",\n            placeholder: \"Search\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: searchFunctionKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"view-items-search-icon\",\n            onClick: e => searchFunctionButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${items.length} Results`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/List.png\",\n            className: \"view-items-row-icon\",\n            onClick: () => {\n              setRowFormat(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/Grid.png\",\n            className: \"view-items-grid-icon\",\n            onClick: () => {\n              setRowFormat(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-list\",\n          children: items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: items.map((item, i) => {\n              return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                item: item,\n                creator: item.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                item: item,\n                creator: item.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), items.length >= 0 && finishedItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"end-items\",\n          children: \"No more results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"load-items\",\n          onClick: () => {\n            loadMore();\n          },\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"d4/4BgWCICGED8euFRGYqhPZYO8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx"],"names":["React","useState","useEffect","useHistory","useParams","ItemRowCard","ItemSquareCard","globalAPI","SearchIcon","AccountWorkspaces","searchPhrase","setSearchPhrase","currentUser","filter","setFilter","items","setItems","loaded","setLoaded","rowFormat","setRowFormat","input","setInput","finishedWorkspaces","setFinishedWorkspaces","finishedDatasets","setFinishedDatasets","urlPhrase","id","history","fetchData","get","data","length","push","setWorkspaces","searchFunctionKey","e","key","searchFunctionButton","fetchDataItems","finishedItems","fetchedItems","setFinishedItems","err","loadMore","_id","target","value","map","item","i","creatorName","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport globalAPI from '../API/global'\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst AccountWorkspaces = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [filter, setFilter] = useState(\"workspaces\")\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n    const [finishedDatasets, setFinishedDatasets] = useState(false);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (searchPhrase === null) {\n                if (urlPhrase) {\n                    const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n                    if (items.data.data.length < 21) {\n                        setFinishedWorkspaces(true)\n                    }\n\n                    setItems(items.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/home\");\n                }\n            } else {\n                const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n                if (items.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                setWorkspaces(items.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataItems = async (id) => {\n        if (!finishedItems) {\n            try {\n                const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            {fetchDataItems(items[items.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-items-body\">\n                        <div className=\"view-items-search\">\n                            <input className=\"view-items-search-input\"\n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"view-items-search-icon\" onClick={e => searchFunctionButton()} />\n                        </div>\n                        <h1>Search Results</h1>\n                        <div className=\"view-items-middle\">\n                            <p>{`${items.length} Results`}</p>\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-items-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-items-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-items-list\">\n                            {items.length > 0 &&\n                                <>\n                                    {items.map((item, i) => {\n                                        return rowFormat ? \n                                            <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={false} key={i} /> \n                                            : \n                                            <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={false} key={i} />\n                                    })}\n                                </>\n                            }\n                        </div>\n                        {items.length >= 0 && finishedItems ?\n                            <p className=\"end-items\">No more results</p>\n                            :\n                            <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}