{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport globalAPI from '../API/global';\nimport imageAPI from '../API/images';\nimport itemsAPI from '../API/items';\nimport DataTable from '../Components/Data-Table';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExperimentCard from '../Components/Experiment-Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [noData, setNoData] = useState();\n  const [dataset, setDataset] = useState();\n  const [workspace, setWorkspace] = useState();\n  const [dataTable, setDataTable] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [updated, setUpdated] = useState();\n  const [changedData, setChangedData] = useState(false);\n  const [changedSettings, setChangedSettings] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [row, setRow] = useState();\n  const [maxRows, setMaxRows] = useState();\n  const [page, setPage] = useState(1);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [images, setImages] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState([]);\n  const [picture, setPicture] = useState();\n  const [visibility, setVisibility] = useState();\n  const [comments, setComments] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [experiments, setExperiments] = useState();\n  const [finishedExperiments, setFinishedExperiments] = useState(false);\n  const [section, setSection] = useState(\"experiments\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const [refreshData, setRefreshData] = useState();\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const {\n    addOpenItems,\n    removeOpenItems\n  } = useContext(OpenItemsContext);\n  const workspaceID = useParams().id;\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n        const comments = await globalAPI.get(`/comment/${workspaceID}`);\n        const experiments = await itemsAPI.get(`/created-experiments/${workspaceID}?date=${new Date().toISOString()}`);\n\n        if (workspace.data.data.creator === currentUser.id) {\n          addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n        }\n\n        if (experiments.data.data.length < 21) {\n          setFinishedExperiments(true);\n        }\n\n        setWorkspace(workspace.data.data);\n        setUpdated(workspace.data.data.updated);\n        setBookmarked(workspace.data.data.bookmarked);\n        setUpvoted(workspace.data.data.upvoted);\n        setPicture(workspace.data.data.picture);\n        setUpvotes(workspace.data.data.upvotes);\n        setDataset(workspace.data.data.dataset._id);\n        setVisibility(workspace.data.data.visibility);\n        setTitle(workspace.data.data.title);\n        setDescription(workspace.data.data.description);\n        setComments(comments.data.data);\n        setExperiments(experiments.data.data);\n\n        if (workspace.data.data.dataset.dataType === \"value\") {\n          fetch(`http://127.0.0.1:5000/files/${dataset.data.data.dataset.datafile}.csv`).then(response => response.text()).then(text => {\n            setDataTable(text);\n            setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n            setExist(true);\n            setNoData(false);\n            setLoaded(true);\n          }).catch(() => {\n            setExist(true);\n            setNoData(true);\n            setLoaded(true);\n          });\n        } else {\n          console.log(\"2\");\n          fetch(`http://127.0.0.1:5000/files/${dataset.data.data.dataset.datafile}/labels.json`).then(response => response.json()).then(images => {\n            images.map(image => {\n              setImages(state => [...state, image.filename]);\n              setAssignedLabels(state => [...state, image.label]);\n            });\n            setExist(true);\n            setNoData(false);\n            setLoaded(true);\n          }).catch(() => {\n            setExist(true);\n            setNoData(true);\n            setLoaded(true);\n          });\n        }\n      } catch (err) {\n        setExist(false);\n        setNoData(true);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded, updated]);\n\n  const fetchDataExperiments = async date => {\n    if (!finishedExperiments) {\n      try {\n        const fetchedExperiments = await itemsAPI.get(`/created-experiments/${workspaceID}?date=${date}`);\n\n        if (fetchedExperiments.data.data.length < 21) {\n          setFinishedExperiments(true);\n        }\n\n        setExperiments(items => [...items, ...fetchedExperiments.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (experiments.length !== 0) {\n      {\n        fetchDataExperiments(experiments[experiments.length - 1].updated);\n      }\n    }\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const existingWorkspace = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n          setDataset(checkPublic._id);\n          setRefreshData(new Date().getTime());\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await globalAPI.put(`/visibility/${workspace._id}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const addComment = async e => {\n    e.preventDefault();\n\n    try {\n      await globalAPI.put(`/comment/${workspaceID}?type=workspace`, {\n        comment: comment\n      });\n      setComments([{\n        user: {\n          name: currentUser.name\n        },\n        comment: comment\n      }, ...comments]);\n      setComment(\"\");\n    } catch (err) {}\n  };\n\n  const fetchRow = () => {\n    if (!isNaN(row) && row !== \"\") {\n      setStart(row - 1);\n      setEnd(row);\n      setRefreshData(new Date().getTime());\n    } else {\n      if (start === (page - 1) * 30 && end === page * 30) {\n        setRow(\"\");\n      } else {\n        setStart((page - 1) * 30);\n        setEnd(page * 30);\n        setRefreshData(new Date().getTime());\n      }\n    }\n  };\n\n  const cancelRow = () => {\n    if (!(start === (page - 1) * 30 && end === page * 30)) {\n      setStart((page - 1) * 30);\n      setEnd(page * 30);\n      setRefreshData(new Date().getTime());\n    }\n\n    setRow(\"\");\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 30);\n      setEnd((page - 1) * 30);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (workspace.dataset.dataType === \"value\" && page * 30 < maxRows && maxRows > 30 || workspace.dataset.dataType === \"image\" && page * 30 < maxRows && maxRows > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const commentDate = date => {\n    const updatedDate = new Date(date);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`;\n    } else {\n      return \"Posted just now\";\n    }\n  };\n\n  const updateWorkspace = async () => {\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const tempPicture = picture;\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: imageResponse.data.data,\n          dataset: dataset,\n          updated: new Date().toISOString()\n        });\n        setImage(undefined);\n        setPicture(imageResponse.data.data);\n\n        if (tempPicture !== \"default.png\") {\n          await imageAPI.put('/remove', {\n            picture: tempPicture\n          });\n        }\n      } catch (err) {}\n    } else {\n      try {\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: picture,\n          dataset: dataset,\n          updated: new Date().toISOString()\n        });\n      } catch (err) {}\n    }\n\n    setUpdated(new Date().toISOString());\n    setChangedSettings(false);\n  };\n\n  const deleteWorkspace = async () => {\n    try {\n      await itemsAPI.delete(`/${workspaceID}`);\n      removeOpenItems(workspaceID);\n      history.replace(\"/home\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"item-picture\",\n            src: `http://localhost:4000/images/${picture}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this), workspace.self && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"item-image-input\",\n            type: \"file\",\n            name: \"image\",\n            onChange: e => {\n              setImage(e.target.files[0]);\n              {\n                !changedSettings && setChangedSettings(true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-heading\",\n            children: workspace.self ? /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-title-input\",\n              placeholder: \"Title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/workspace.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: workspace.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [!workspace.self && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: workspace.creatorName.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/dataset/${dataset}`,\n              className: \"workspace-dataset-link\",\n              children: \"View Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 33\n            }, this), !workspace.self && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n              className: `item-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateBookmark();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 53\n            }, this), workspace.self && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 45\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              className: `item-icon ${upvoted ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateUpvote();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `item-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n              children: upvotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this), workspace.self ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"item-description-input\",\n              placeholder: \"Description\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dark-grey-button item-delete\",\n                onClick: () => {\n                  deleteWorkspace();\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `item-save ${!changedSettings ? \"grey-button\" : \"blue-button\"}`,\n                disabled: !changedSettings,\n                onClick: () => {\n                  updateWorkspace();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-description\",\n            children: workspace.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"item-select\",\n            onChange: e => {\n              setSection(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"experiments\",\n              children: \"Experiments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"data\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comments\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-bottom\",\n          children: section === \"experiments\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-experiments\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-experiments-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${experiments.length} Experiments`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 41\n              }, this), workspace.self && /*#__PURE__*/_jsxDEV(Link, {\n                className: \"blue-button item-experiments-create\",\n                to: `${workspaceID}/create-experiment`,\n                children: \"Create Experiment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-experiments-list\",\n              children: experiments.map((experiment, i) => {\n                if (currentUser.id === workspace.creator) return /*#__PURE__*/_jsxDEV(ExperimentCard, {\n                  experiment: experiment.experiments,\n                  created: true,\n                  workspaceID: workspaceID\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 98\n                }, this);\n                return /*#__PURE__*/_jsxDEV(ExperimentCard, {\n                  experiment: experiment.experiments,\n                  created: false,\n                  workspaceID: workspaceID\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 56\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 37\n            }, this), experiments.length >= 0 && finishedExperiments ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"No more experiments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"load-items\",\n              onClick: () => {\n                loadMore();\n              },\n              children: \"Load more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 33\n          }, this) : section === \"data\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: noData ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"Cannot find dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [workspace.self && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Change Dataset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"workspace-replace-input\",\n                  placeholder: \"Data ID\",\n                  onChange: e => {\n                    setDataID(e.target.value);\n                  },\n                  value: dataID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button item-replace-button\",\n                  onClick: () => {\n                    setDataID(undefined);\n                    setChangedData(false);\n                  },\n                  disabled: !changedData,\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button item-replace-button\",\n                  disabled: dataID === \"\",\n                  onClick: () => {\n                    existingWorkspace();\n                  },\n                  children: \"Import\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 53\n                }, this), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"create-item-data-public\",\n                  children: \"Dataset not public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 71\n                }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"create-item-data-public\",\n                  children: \"Dataset does not exist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 70\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-data-table-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Row number\",\n                  value: row,\n                  onChange: e => {\n                    setRow(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    cancelRow();\n                  },\n                  className: \"white-button item-data-cancel-find\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    fetchRow();\n                  },\n                  className: \"blue-button item-data-find\",\n                  children: \"Find\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"item-data-table-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"item-data-table-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 45\n              }, this), workspace.dataset.dataType === \"value\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-data-table\",\n                children: /*#__PURE__*/_jsxDEV(DataTable, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshData, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-data-images\",\n                children: images.map((image, i) => {\n                  if (i >= start && i < end) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item-data-images-list\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `http://127.0.0.1:5000/files/${workspace.dataset.datafile}/${image}.jpg`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 506,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: assignedLabels[i]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 507,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 69\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 65\n                    }, this);\n                  }\n                })\n              }, refreshData, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"item-comment-form\",\n              method: \"PUT\",\n              onSubmit: addComment,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-comment\",\n                children: \"Leave a Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"item-comment-input\",\n                placeholder: \"Write here\",\n                value: comment,\n                onChange: e => {\n                  setComment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-comments\",\n              children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"end-items\",\n                children: \"No comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: comments.map((comment, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"comment-card-user\",\n                        children: comment.user\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 534,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"comment-card-date\",\n                        children: commentDate(comment.createdAt)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-comment\",\n                      children: comment.comment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 61\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"FjjzSa1G/+yKrEpHU+POiqSnsRY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useContext","useRef","Link","useParams","useHistory","globalAPI","imageAPI","itemsAPI","DataTable","OpenItemsContext","BookmarkIcon","ThumbUpIcon","ArrowForwardIosIcon","ArrowBackIosNewIcon","VisibilityOffIcon","VisibilityIcon","ExperimentCard","Workspace","currentUser","loaded","setLoaded","exist","setExist","noData","setNoData","dataset","setDataset","workspace","setWorkspace","dataTable","setDataTable","dataID","setDataID","updated","setUpdated","changedData","setChangedData","changedSettings","setChangedSettings","date","setDate","start","setStart","end","setEnd","row","setRow","maxRows","setMaxRows","page","setPage","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","images","setImages","assignedLabels","setAssignedLabels","picture","setPicture","visibility","setVisibility","comments","setComments","comment","setComment","experiments","setExperiments","finishedExperiments","setFinishedExperiments","section","setSection","title","setTitle","description","setDescription","image","setImage","refreshData","setRefreshData","displayPublic","setDisplayPublic","displayExist","setDisplayExist","addOpenItems","removeOpenItems","workspaceID","id","publicInterval","existInterval","history","fetchData","get","Date","toISOString","data","creator","_id","type","length","dataType","fetch","datafile","then","response","text","slice","indexOf","split","catch","console","log","json","map","state","filename","label","err","updatedDate","currentDate","getTime","Math","floor","toString","fetchDataExperiments","fetchedExperiments","items","loadMore","displayPublicInterval","clearInterval","current","setInterval","displayExistInterval","existingWorkspace","checkPublic","success","updateUpvote","put","updateBookmark","updateVisibility","addComment","e","preventDefault","user","name","fetchRow","isNaN","cancelRow","previousPage","nextPage","commentDate","updateWorkspace","formImage","FormData","append","tempPicture","imageResponse","post","undefined","deleteWorkspace","delete","replace","self","target","files","value","creatorName","experiment","i","ceil","createdAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useRef} from 'react'\nimport {Link, useParams, useHistory} from \"react-router-dom\"\nimport globalAPI from '../API/global'\nimport imageAPI from '../API/images'\nimport itemsAPI from '../API/items'\nimport DataTable from '../Components/Data-Table';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExperimentCard from '../Components/Experiment-Card'\n\nconst Workspace = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [exist, setExist] = useState()\n    const [noData, setNoData] = useState()\n    const [dataset, setDataset] = useState()\n    const [workspace, setWorkspace] = useState()\n    const [dataTable, setDataTable] = useState()\n    const [dataID, setDataID] = useState(\"\")\n    const [updated, setUpdated] = useState()\n    const [changedData, setChangedData] = useState(false)\n    const [changedSettings, setChangedSettings] = useState(false)\n    const [date, setDate] = useState(\"\");\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [row, setRow] = useState()\n    const [maxRows, setMaxRows] = useState()\n    const [page, setPage] = useState(1)\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [images, setImages] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState([])\n    const [picture, setPicture] = useState()\n    const [visibility, setVisibility] = useState()\n    const [comments, setComments] = useState()\n    const [comment, setComment] = useState(\"\")\n    const [experiments, setExperiments] = useState()\n    const [finishedExperiments, setFinishedExperiments] = useState(false)\n    const [section, setSection] = useState(\"experiments\")\n    const [title, setTitle] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [image, setImage] = useState();\n    const [refreshData, setRefreshData] = useState()\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const {addOpenItems, removeOpenItems} = useContext(OpenItemsContext);\n    const workspaceID = useParams().id;\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory()\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n                const comments = await globalAPI.get(`/comment/${workspaceID}`);\n                const experiments = await itemsAPI.get(`/created-experiments/${workspaceID}?date=${new Date().toISOString()}`);\n\n                if (workspace.data.data.creator === currentUser.id) {\n                    addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                }\n\n                if (experiments.data.data.length < 21) {\n                    setFinishedExperiments(true)\n                }\n\n                setWorkspace(workspace.data.data);\n                setUpdated(workspace.data.data.updated);\n                setBookmarked(workspace.data.data.bookmarked)\n                setUpvoted(workspace.data.data.upvoted)\n                setPicture(workspace.data.data.picture)\n                setUpvotes(workspace.data.data.upvotes)\n                setDataset(workspace.data.data.dataset._id)\n                setVisibility(workspace.data.data.visibility)\n                setTitle(workspace.data.data.title)\n                setDescription(workspace.data.data.description)\n                setComments(comments.data.data)\n                setExperiments(experiments.data.data)\n\n                if (workspace.data.data.dataset.dataType === \"value\") {\n                    fetch(`http://127.0.0.1:5000/files/${dataset.data.data.dataset.datafile}.csv`)\n                        .then(response => response.text())\n                        .then(text => {\n                            setDataTable(text)\n                            setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                            setExist(true)\n                            setNoData(false)\n                            setLoaded(true)\n                        }).catch(() => {\n                            setExist(true)\n                            setNoData(true)\n                            setLoaded(true)\n                        });\n                } else {\n                    console.log(\"2\")\n                    fetch(`http://127.0.0.1:5000/files/${dataset.data.data.dataset.datafile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setExist(true)\n                            setNoData(false)\n                            setLoaded(true)\n                        }).catch(() => {\n                            setExist(true)\n                            setNoData(true)\n                            setLoaded(true)\n                        });\n                }\n            } catch (err) {\n                setExist(false)\n                setNoData(true)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded, updated])\n\n    const fetchDataExperiments = async (date) => {\n        if (!finishedExperiments) {\n            try {\n                const fetchedExperiments = await itemsAPI.get(`/created-experiments/${workspaceID}?date=${date}`);\n    \n                if (fetchedExperiments.data.data.length < 21) {\n                    setFinishedExperiments(true)\n                }\n\n                setExperiments(items => [...items, ...fetchedExperiments.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (experiments.length !== 0) {\n            {fetchDataExperiments(experiments[experiments.length-1].updated)}\n        }\n    };\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const existingWorkspace = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                        setDataset(checkPublic._id)\n                        setRefreshData(new Date().getTime())\n                    })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${workspace._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        try {\n            await globalAPI.put(`/comment/${workspaceID}?type=workspace`, {\n                comment: comment\n            });\n\n            setComments([{\n                user: {name: currentUser.name},\n                comment: comment\n            }, ...comments])\n            setComment(\"\")\n        } catch (err) {}\n    }\n\n    const fetchRow = () => {\n        if (!isNaN(row) && row !== \"\") {\n            setStart(row-1)\n            setEnd(row)\n            setRefreshData(new Date().getTime())\n        } else {\n            if (start === (page-1)*30 && end === page*30) {\n                setRow(\"\")\n            } else {\n                setStart((page-1)*30)\n                setEnd(page*30)\n                setRefreshData(new Date().getTime())\n            }\n        }\n    }\n\n    const cancelRow = () => {\n        if (!(start === (page-1)*30 && end === page*30)) {\n            setStart((page-1)*30)\n            setEnd(page*30)\n            setRefreshData(new Date().getTime())\n        }\n        setRow(\"\")\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*30)\n            setEnd((page-1)*30)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if ((workspace.dataset.dataType === \"value\" && page*30 < maxRows && maxRows > 30) ||\n            (workspace.dataset.dataType === \"image\" && page*30 < maxRows && maxRows > 30)) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const commentDate = (date) => {\n        const updatedDate = new Date(date);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`\n        } else {\n            return \"Posted just now\"\n        }\n    }\n\n    const updateWorkspace = async () => {\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n            \n            try {\n                const tempPicture = picture\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: imageResponse.data.data,\n                    dataset: dataset,\n                    updated: new Date().toISOString()\n                })\n\n                setImage(undefined)\n                setPicture(imageResponse.data.data)\n\n                if (tempPicture !== \"default.png\") {\n                    await imageAPI.put('/remove', {picture: tempPicture});\n                }\n            } catch (err) {}\n        } else {\n            try {\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: picture,\n                    dataset: dataset,\n                    updated: new Date().toISOString()\n                })\n            } catch (err) {}\n        }\n\n        setUpdated(new Date().toISOString())\n        setChangedSettings(false)\n    }\n\n    const deleteWorkspace = async () => {\n        try {\n            await itemsAPI.delete(`/${workspaceID}`)\n\n            removeOpenItems(workspaceID)\n            history.replace(\"/home\")\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"width-body\">  \n                    <div className=\"item-body\">\n                        <div className=\"item-top\">\n                            <img className=\"item-picture\" src={`http://localhost:4000/images/${picture}`} />\n                            {workspace.self && \n                                <input className=\"item-image-input\"\n                                        type=\"file\" \n                                        name=\"image\" \n                                        onChange={e => {\n                                            setImage(e.target.files[0])\n                                            {!changedSettings && setChangedSettings(true)}\n                                        }} />\n                            }\n                            <div className=\"item-heading\">\n                                {workspace.self ? \n                                    <input className=\"item-title-input\"\n                                            placeholder=\"Title\" \n                                            value={title}\n                                            onChange={e => {\n                                                setTitle(e.target.value)\n                                                {!changedSettings && setChangedSettings(true)}\n                                            }} /> \n                                : \n                                    <>\n                                        <img src=\"http://localhost:3000/workspace.png\" />\n                                        <h1>{workspace.title}</h1>\n                                    </>\n                                }\n                            </div>\n                            <div>\n                                {!workspace.self && <p className=\"item-meta\">{workspace.creatorName.name}</p>}\n                                <p className=\"item-meta\">{date}</p>\n                                <span />\n                                <Link to={`/dataset/${dataset}`} className=\"workspace-dataset-link\">View Dataset</Link>\n                                {!workspace.self && <BookmarkIcon className={`item-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                                {workspace.self && \n                                    <>\n                                        {visibility ? \n                                            <VisibilityIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        :\n                                            <VisibilityOffIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        }\n                                    </>\n                                }\n                                <ThumbUpIcon className={`item-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                                <p className={`item-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                            </div>\n                            {workspace.self ? \n                                <>\n                                    <textarea className=\"item-description-input\"\n                                                placeholder=\"Description\" \n                                                value={description}\n                                                onChange={e => {\n                                                    setDescription(e.target.value)\n                                                    {!changedSettings && setChangedSettings(true)}\n                                                }} /> \n                                    <div className=\"item-middle\">\n                                        <button className=\"dark-grey-button item-delete\"\n                                                onClick={() => {deleteWorkspace()}}>Delete</button>\n                                        <button className={`item-save ${!changedSettings ? \"grey-button\" : \"blue-button\"}`}\n                                                disabled={!changedSettings}\n                                                onClick={() => {updateWorkspace()}}>Save Changes</button>\n                                    </div>\n                                </>\n                            : \n                                <p className=\"item-description\">{workspace.description}</p>\n                            }\n                            <select className=\"item-select\" onChange={e => {setSection(e.target.value)}}>\n                                <option value=\"experiments\">Experiments</option>\n                                <option value=\"data\">Data</option>\n                                <option value=\"comments\">Comments</option>\n                            </select>\n                        </div>\n                        <div className=\"item-bottom\">\n                            {section === \"experiments\" ? \n                                <div className=\"item-experiments\">\n                                    <div className=\"item-experiments-middle\">\n                                        <p>{`${experiments.length} Experiments`}</p>\n                                        {workspace.self && <Link className=\"blue-button item-experiments-create\" to={`${workspaceID}/create-experiment`}>Create Experiment</Link>}\n                                    </div> \n                                    <div className=\"item-experiments-list\">\n                                            {experiments.map((experiment, i) => {\n                                                if (currentUser.id === workspace.creator) return <ExperimentCard experiment={experiment.experiments} created={true} workspaceID={workspaceID} key={i} />\n\n                                                return <ExperimentCard experiment={experiment.experiments} created={false} workspaceID={workspaceID} key={i} />\n                                            })}\n                                        </div>\n                                    {experiments.length >= 0 && finishedExperiments ?\n                                        <p className=\"end-items\">No more experiments</p>\n                                        :\n                                        <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                                    }\n                                </div>\n                            : section === \"data\" ?\n                                <>\n                                    {noData ?\n                                        <p className=\"end-items\">Cannot find dataset</p>\n                                    :   \n                                        <>\n                                            {workspace.self && \n                                                <div className=\"item-options\">\n                                                    <p>Change Dataset</p>\n                                                    <input className=\"workspace-replace-input\"\n                                                            placeholder=\"Data ID\"\n                                                            onChange={e => {setDataID(e.target.value)}}\n                                                            value={dataID} />\n                                                    <button className=\"white-button item-replace-button\"\n                                                            onClick={() => {\n                                                                setDataID(undefined)\n                                                                setChangedData(false)\n                                                            }}\n                                                            disabled={!changedData}>Clear</button>\n                                                    <button className=\"blue-button item-replace-button\"\n                                                            disabled={dataID === \"\"}\n                                                            onClick={() => {existingWorkspace()}}>Import</button>\n                                                    {displayPublic && <p className=\"create-item-data-public\">Dataset not public</p>}\n                                                    {displayExist && <p className=\"create-item-data-public\">Dataset does not exist</p>}\n                                                </div>\n                                            }\n                                            <div className=\"item-data-table-pagination\">\n                                                <input placeholder=\"Row number\" value={row} onChange={e => {setRow(e.target.value)}} />\n                                                <button onClick={() => {cancelRow()}} className=\"white-button item-data-cancel-find\">Cancel</button>\n                                                <button onClick={() => {fetchRow()}} className=\"blue-button item-data-find\">Find</button>\n                                                <span />\n                                                <ArrowBackIosNewIcon className=\"item-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                <ArrowForwardIosIcon className=\"item-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                            {workspace.dataset.dataType ===\"value\" ?\n                                                <div className=\"item-data-table\">\n                                                    <DataTable dataTable={dataTable} start={start} end={end} key={refreshData} />\n                                                </div>\n                                            :\n                                                <div className=\"create-item-data-images\" key={refreshData}>\n                                                    {images.map((image, i) => {\n                                                        if (i >= start && i < end) {\n                                                            return (\n                                                                <div className=\"item-data-images-list\" key={i}>\n                                                                    <div>\n                                                                        <img src={`http://127.0.0.1:5000/files/${workspace.dataset.datafile}/${image}.jpg`} />\n                                                                        <p>{assignedLabels[i]}</p>\n                                                                    </div>\n                                                                </div>\n                                                            )\n                                                        }\n                                                    })}\n                                                </div>\n                                            }\n                                        </>\n                                    }\n                                </>\n                            : \n                                <>\n                                    <form className=\"item-comment-form\" method=\"PUT\" onSubmit={addComment}>\n                                        <p className=\"item-comment\">Leave a Comment</p>\n                                        <textarea className=\"item-comment-input\" placeholder=\"Write here\" value={comment} onChange={e => {setComment(e.target.value)}} />\n                                        <button className=\"blue-button\">Comment</button>\n                                    </form>\n                                    <div className=\"item-comments\">\n                                        {comments.length === 0 ?\n                                            <p className=\"end-items\">No comments</p>\n                                            :\n                                            <>\n                                                {comments.map((comment, i) => {\n                                                    return (\n                                                        <div className=\"comment-card\" key={i}>\n                                                            <div>\n                                                                <p className=\"comment-card-user\">{comment.user}</p>\n                                                                <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                            </div>\n                                                            <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </>\n                                        }\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"width-body\">  \n                    <p className=\"item-exist\">Cannot find workspace</p>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default Workspace"]},"metadata":{},"sourceType":"module"}