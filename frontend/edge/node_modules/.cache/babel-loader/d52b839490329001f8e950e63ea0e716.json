{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Dataset.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport datasetsAPI from '../API/datasets';\nimport usersAPI from '../API/users';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewDataset = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [dataFile, setDataFile] = useState();\n  const [displayData, setDisplayData] = useState();\n  const [image, setImage] = useState();\n  const [datasets, setDatasets] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const datasets = await usersAPI.get(\"/created-datasets\");\n        datasets.data.data.map(dataset => {\n          setDatasets(state => [...state, dataset.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (dataFile !== undefined) {\n      const file = dataFile;\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setDisplayData(e.target.result);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [dataFile]);\n\n  const next = () => {\n    if ((title !== \"\" || description !== \"\") && !datasets.includes(title)) {\n      setSetupStage(false);\n    }\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const remove = () => {\n    setDataFile();\n    setDisplayData();\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (dataFile !== undefined) {\n      if (image) {\n        const formImage = new FormData();\n        formImage.append('image', image);\n\n        try {\n          const imageResponse = await imageAPI.post(\"/upload\", formImage);\n          uploadDataset(imageResponse.data.data);\n        } catch (err) {}\n      } else {\n        uploadDataset(\"default.png\");\n      }\n    } else {\n      setDisabledCreate(false);\n    }\n  };\n\n  const uploadDataset = async imageName => {\n    try {\n      const datasetResponse = await datasetsAPI.post(\"/\", {\n        title: title,\n        data: \"none\",\n        creator: currentUser.id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: 0,\n        visibility: visibility\n      });\n      uploadFile(datasetResponse.data.data);\n    } catch (err) {}\n  };\n\n  const uploadFile = async workspaceID => {\n    const formData = new FormData();\n    formData.append('data', dataFile);\n    formData.append('id', workspaceID);\n\n    try {\n      await fileAPI.post(\"/upload\", formData);\n    } catch (err) {}\n\n    try {\n      await datasetsAPI.put(`/${workspaceID}`, {\n        data: `${workspaceID}-data`\n      });\n      history.push(`/workspace/${workspaceID}`);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-dataset\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-dataset-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-dataset-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"new-sidebar-stage\"} ${setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            setSetupStage(true);\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"new-sidebar-stage\"} ${!setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-dataset-setup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-dataset-setup-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-dataset-title\",\n            placeholder: \"Title\",\n            onChange: e => {\n              setTitle(e.target.value);\n            },\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"new-dataset-description\",\n            placeholder: \"Description\",\n            onChange: e => {\n              setDescription(e.target.value);\n            },\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-dataset-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-dataset-setup-visibility-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setVisibility(previous => !previous);\n              },\n              checked: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-dataset-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-dataset-setup-visibility-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImage(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-dataset-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-dataset-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-dataset-next\",\n            onClick: () => {\n              next();\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this), !setupStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-dataset-import\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Import Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"data\",\n            onChange: e => {\n              setDataFile(e.target.files[0]);\n            }\n          }, Date.now(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this), dataFile !== undefined && displayData !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-dataset-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-dataset-data-information\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"new-dataset-filename\",\n                children: [\"File: \", dataFile.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"new-dataset-cancel\",\n                onClick: () => {\n                  remove();\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-dataset-data-table\",\n              children: /*#__PURE__*/_jsxDEV(ViewData, {\n                displayData: displayData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-dataset-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-dataset-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-dataset-next\",\n            disabled: disableCreate,\n            onClick: () => {\n              uploadImage();\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewDataset, \"4oMVuRGywrbGlalcDC1PPyI+NvM=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewDataset;\nexport default NewDataset;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewDataset\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Dataset.jsx"],"names":["React","useState","useEffect","useHistory","datasetsAPI","usersAPI","fileAPI","imageAPI","ViewData","NewDataset","currentUser","setupStage","setSetupStage","title","setTitle","description","setDescription","visibility","setVisibility","dataFile","setDataFile","displayData","setDisplayData","image","setImage","datasets","setDatasets","loaded","setLoaded","disableCreate","setDisabledCreate","history","fetchData","get","data","map","dataset","state","err","undefined","file","reader","FileReader","onload","e","target","result","readAsText","next","includes","cancel","goBack","remove","uploadImage","formImage","FormData","append","imageResponse","post","uploadDataset","imageName","datasetResponse","creator","id","experiments","picture","upvotes","uploadFile","workspaceID","formData","put","push","value","previous","files","Date","now","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport datasetsAPI from '../API/datasets'\nimport usersAPI from '../API/users'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\n\nconst NewDataset = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [dataFile, setDataFile] = useState();\n    const [displayData, setDisplayData] = useState();\n    const [image, setImage] = useState();\n    const [datasets, setDatasets] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const datasets = await usersAPI.get(\"/created-datasets\");\n\n                datasets.data.data.map((dataset) => {\n                    setDatasets(state => [...state, dataset.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (dataFile !== undefined) {\n            const file = dataFile;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDisplayData(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [dataFile])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\") && !datasets.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataFile()\n        setDisplayData()\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (dataFile !== undefined) {\n            if (image) {\n                const formImage = new FormData();\n                formImage.append('image', image);\n    \n                try {\n                    const imageResponse = await imageAPI.post(\"/upload\", formImage);\n    \n                    uploadDataset(imageResponse.data.data)\n                } catch (err) {}\n            } else {\n                uploadDataset(\"default.png\")\n            }\n        } else {\n            setDisabledCreate(false)\n        }\n    }\n\n    const uploadDataset = async (imageName) => {\n        try {\n            const datasetResponse = await datasetsAPI.post(\"/\", {\n                title: title,\n                data: \"none\",\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                visibility: visibility\n            });\n\n            uploadFile(datasetResponse.data.data)\n        } catch (err) {}\n    }\n\n    const uploadFile = async (workspaceID) => {\n        const formData = new FormData();\n\n        formData.append('data', dataFile);\n        formData.append('id', workspaceID)\n\n        try {\n            await fileAPI.post(\"/upload\", formData);\n        } catch (err) {}\n        \n        try {\n            await datasetsAPI.put(`/${workspaceID}`, {\n                data: `${workspaceID}-data`\n            });\n\n            history.push(`/workspace/${workspaceID}`)\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-dataset\">\n                    <div className=\"new-sidebar\">\n                        <h1>New Dataset</h1> \n                        <div className=\"new-dataset-header\">\n                            <p className=\"new-dataset-title\">{title}</p> \n                        </div>\n                        <button className={`${\"new-sidebar-stage\"} ${setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"new-sidebar-stage\"} ${!setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`}\n                                disabled>Data</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-dataset-setup\">\n                            <div className=\"new-dataset-setup-information\">\n                                <input className=\"new-dataset-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-dataset-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-dataset-setup-visibility\">\n                                    <label className=\"new-dataset-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onChange={() => {setVisibility(previous => !previous)}}\n                                            checked={visibility} />\n                                </div>\n                                <div className=\"new-dataset-setup-visibility\">\n                                    <label className=\"new-dataset-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImage(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-dataset-nav\">   \n                                <button className=\"new-dataset-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-dataset-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { !setupStage &&\n                        <>\n                            <div className=\"new-dataset-import\">\n                                <p>Import Data</p>\n                                <input type=\"file\" \n                                        name=\"data\"\n                                        key={Date.now()}\n                                        onChange={e => {setDataFile(e.target.files[0])}} />\n                                {dataFile !== undefined && displayData !== undefined &&\n                                    <div className=\"new-dataset-data\">\n                                        <div className=\"new-dataset-data-information\">\n                                            <p className=\"new-dataset-filename\">File: {dataFile.name}</p>\n                                            <button className=\"new-dataset-cancel\"\n                                                    onClick={() => {remove()}}>Remove</button>\n                                        </div>\n                                        <div className=\"new-dataset-data-table\">\n                                            <ViewData displayData={displayData} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"new-dataset-nav\">  \n                                <button className=\"new-dataset-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-dataset-next\"\n                                        disabled={disableCreate}\n                                        onClick={() => {uploadImage()}}>Create</button>\n                            </div>\n                        </>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewDataset\n"]},"metadata":{},"sourceType":"module"}