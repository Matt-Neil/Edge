{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport globalAPI from '../API/global';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Shortcut from '../Components/Shortcut';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = _ref => {\n  _s();\n\n  let {\n    searchPhrase,\n    setSearchPhrase,\n    currentUser\n  } = _ref;\n  const [items, setItems] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [finishedItems, setFinishedItems] = useState(false);\n  const urlPhrase = useParams().id;\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchPhrase === null) {\n        if (urlPhrase) {\n          const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n          if (items.data.data.length < 21) {\n            setFinishedItems(true);\n          }\n\n          setItems(items.data.data);\n          setLoaded(true);\n        } else {\n          history.push(\"/home\");\n        }\n      } else {\n        const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n        if (items.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items.data.data);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDataItems = async id => {\n    if (!finishedItems) {\n      try {\n        const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n\n        if (fetchedItems.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items => [...items, ...fetchedItems.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (items.length !== 0) {\n      {\n        fetchDataItems(items[items.length - 1]._id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Search Results: \", urlPhrase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-card-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${items.length} Results`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/List.png\",\n          className: \"toggle-card-type-row-icon\",\n          onClick: () => {\n            setRowFormat(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/Grid.png\",\n          className: \"toggle-card-type-grid-icon\",\n          onClick: () => {\n            setRowFormat(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-items-list\",\n        children: items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: items.map((item, i) => {\n            return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n              item: item,\n              creator: item.creatorName.name,\n              currentUserID: currentUser.id,\n              created: false\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n              item: item,\n              creator: item.creatorName.name,\n              currentUserID: currentUser.id,\n              created: false\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), items.length >= 0 && finishedItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"end-items\",\n        children: \"End reached\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"load-items\",\n        onClick: () => {\n          loadMore();\n        },\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"uk27PQibHuuFlRP4EsED3vnPtdk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx"],"names":["React","useState","useEffect","Link","useHistory","useParams","ItemRowCard","ItemSquareCard","globalAPI","SearchIcon","Shortcut","ArrowForwardIosIcon","AccountWorkspaces","searchPhrase","setSearchPhrase","currentUser","items","setItems","loaded","setLoaded","rowFormat","setRowFormat","input","setInput","finishedItems","setFinishedItems","urlPhrase","id","history","fetchData","get","data","length","push","searchFunctionKey","e","key","searchFunctionButton","fetchDataItems","fetchedItems","err","loadMore","_id","map","item","i","creatorName","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport globalAPI from '../API/global'\nimport SearchIcon from '@mui/icons-material/Search';\nimport Shortcut from '../Components/Shortcut'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\n\nconst AccountWorkspaces = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (searchPhrase === null) {\n                if (urlPhrase) {\n                    const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n                    if (items.data.data.length < 21) {\n                        setFinishedItems(true)\n                    }\n\n                    setItems(items.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/home\");\n                }\n            } else {\n                const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataItems = async (id) => {\n        if (!finishedItems) {\n            try {\n                const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            {fetchDataItems(items[items.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <>\n                    <h1>Search Results: {urlPhrase}</h1>\n                    <div className=\"toggle-card-type\">\n                        <p>{`${items.length} Results`}</p>\n                        <span />\n                        <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {setRowFormat(true)}} />\n                        <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                    </div>\n                    <div className=\"view-items-list\">\n                        {items.length > 0 &&\n                            <>\n                                {items.map((item, i) => {\n                                    return rowFormat ? \n                                        <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={false} key={i} /> \n                                        : \n                                        <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={false} key={i} />\n                                })}\n                            </>\n                        }\n                    </div>\n                    {items.length >= 0 && finishedItems ?\n                        <p className=\"end-items\">End reached</p>\n                        :\n                        <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                    }\n                </>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}