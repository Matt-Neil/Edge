{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport itemsAPI from '../API/items';\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [recent, setRecent] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const recent = await itemsAPI.get(\"/recent\");\n        setRecent(recent.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recently Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-card-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/List.png\",\n          className: \"toggle-card-type-row-icon\",\n          onClick: () => {\n            setRowFormat(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/Grid.png\",\n          className: \"toggle-card-type-grid-icon\",\n          onClick: () => {\n            setRowFormat(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-items-list\",\n        children: recent.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: recent.map((item, i) => {\n            return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n              item: item,\n              created: true\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 56\n            }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n              item: item,\n              created: true\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 109\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Home, \"bb/py82zHEwNlUaylx3aWKoHhwQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Home.jsx"],"names":["React","useState","useEffect","itemsAPI","ItemRowCard","ItemSquareCard","Home","recent","setRecent","loaded","setLoaded","rowFormat","setRowFormat","fetchData","get","data","err","length","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMN,MAAM,GAAG,MAAMJ,QAAQ,CAACW,GAAT,CAAa,SAAb,CAArB;AAEAN,QAAAA,SAAS,CAACD,MAAM,CAACQ,IAAP,CAAYA,IAAb,CAAT;AACAL,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH,OALD,CAKE,OAAOM,GAAP,EAAY,CAAE;AACnB,KAPD;;AAQAH,IAAAA,SAAS;AACZ,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,cACKJ,MAAM,iBACH;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAC,gCAAT;AAA0C,UAAA,SAAS,EAAC,2BAApD;AAAgF,UAAA,OAAO,EAAE,MAAM;AAACG,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAAmB;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,GAAG,EAAC,gCAAT;AAA0C,UAAA,SAAS,EAAC,4BAApD;AAAiF,UAAA,OAAO,EAAE,MAAM;AAACA,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB;AAArH;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKL,MAAM,CAACU,MAAP,GAAgB,CAAhB,iBACG;AAAA,oBACKV,MAAM,CAACW,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,mBAAOT,SAAS,gBAAG,QAAC,WAAD;AAAa,cAAA,IAAI,EAAEQ,IAAnB;AAAyB,cAAA,OAAO,EAAE;AAAlC,eAA6CC,CAA7C;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAwD,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAED,IAAtB;AAA4B,cAAA,OAAO,EAAE;AAArC,eAAgDC,CAAhD;AAAA;AAAA;AAAA;AAAA,oBAAxE;AACH,WAFA;AADL;AAFR;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAFR,mBADJ;AAuBH,CAxCD;;GAAMd,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport itemsAPI from '../API/items'\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\n\nconst Home = () => {\n    const [recent, setRecent] = useState()\n    const [loaded, setLoaded] = useState(false)\n    const [rowFormat, setRowFormat] = useState(false)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const recent = await itemsAPI.get(\"/recent\");\n\n                setRecent(recent.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            {loaded &&\n                <>\n                    <h1>Recently Updated</h1>\n                    <div className=\"toggle-card-type\">\n                        <span />\n                        <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {setRowFormat(true)}} />\n                        <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                    </div>\n                    <div className=\"view-items-list\">\n                        {recent.length > 0 &&\n                            <>\n                                {recent.map((item, i) => {\n                                    return rowFormat ? <ItemRowCard item={item} created={true} key={i} /> : <ItemSquareCard item={item} created={true} key={i} />\n                                })}\n                            </>\n                        }\n                    </div>\n                </>\n            }\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}