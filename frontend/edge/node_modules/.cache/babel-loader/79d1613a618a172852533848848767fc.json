{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Row-Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { OpenWorkspacesContext } from '../Contexts/openWorkspacesContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WorkspaceRowCard = _ref => {\n  _s();\n\n  let {\n    workspace,\n    self,\n    creator\n  } = _ref;\n  const {\n    addOpenWorkspaces\n  } = useContext(OpenWorkspacesContext);\n  const [date, setDate] = useState(\"\");\n  useEffect(() => {\n    const updatedDate = new Date(workspace.updatedAt);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} year(s) ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} month(s) ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} day(s) ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hour(s) ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minute(s) ago`);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/workspace/${workspace._id}`,\n    className: \"workspace-row-card\",\n    onClick: () => {\n      addOpenWorkspaces(workspace._id, workspace.title);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:4000/images/${workspace.picture}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workspace-row-card-information\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"workspace-row-card-heading\",\n        children: workspace.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [self && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: workspace.visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n            className: \"workspace-row-card-visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n            className: \"workspace-row-card-visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)\n        }, void 0, false), !self && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `workspace-row-card-upvotes ${workspace.upvoted ? \"blue\" : \"grey\"}`,\n          children: creator.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"workspace-row-card-meta\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!self && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n        className: `workspace-row-card-icon ${workspace.bookmarked ? \"blue\" : \"grey\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n        className: `workspace-row-card-icon ${workspace.upvoted ? \"blue\" : \"grey\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `workspace-row-card-upvotes ${workspace.upvoted ? \"blue\" : \"grey\"}`,\n        children: workspace.upvotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WorkspaceRowCard, \"EfZoyRI4P5SHN5tGxUdwOlxmdDc=\");\n\n_c = WorkspaceRowCard;\nexport default WorkspaceRowCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkspaceRowCard\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Workspace-Row-Card.jsx"],"names":["React","useState","useEffect","useContext","Link","OpenWorkspacesContext","BookmarkIcon","ThumbUpIcon","VisibilityOffIcon","VisibilityIcon","WorkspaceRowCard","workspace","self","creator","addOpenWorkspaces","date","setDate","updatedDate","Date","updatedAt","currentDate","getTime","Math","floor","toString","_id","title","picture","visibility","upvoted","name","bookmarked","upvotes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,qBAAT,QAAsC,mCAAtC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;;AAEA,MAAMC,gBAAgB,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,SAAD;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAA+B;AACrD,QAAM;AAACC,IAAAA;AAAD,MAAsBX,UAAU,CAACE,qBAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,WAAW,GAAG,IAAIC,IAAJ,CAASP,SAAS,CAACQ,SAAnB,CAApB;AACA,UAAMC,WAAW,GAAG,IAAIF,IAAJ,EAApB;;AAEA,QAAI,CAACE,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,GAA5E,EAAiF;AAC7EL,MAAAA,OAAO,CAAE,WAAUM,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,IAAuE,GAAnF,EAAyFG,QAAzF,EAAoG,cAAhH,CAAP;AACH,KAFD,MAEO,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,EAA5E,EAAgF;AACnFL,MAAAA,OAAO,CAAE,WAAUM,IAAI,CAACC,KAAL,CAAW,CAAC,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,IAAuE,EAAxE,EAA4EG,QAA5E,EAAX,CAAmG,eAA/G,CAAP;AACH,KAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,CAA5E,EAA+E;AAClFL,MAAAA,OAAO,CAAE,WAAUM,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,CAAZ,EAAmFG,QAAnF,EAA8F,aAA1G,CAAP;AACH,KAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAA1D,KAAmE,CAAvE,EAA0E;AAC7EL,MAAAA,OAAO,CAAE,WAAUM,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAA1D,CAAZ,EAA8EG,QAA9E,EAAyF,cAArG,CAAP;AACH,KAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,EAA1D,KAAiE,CAArE,EAAwE;AAC3EL,MAAAA,OAAO,CAAE,WAAUM,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,EAA1D,CAAZ,EAA4EG,QAA5E,EAAuF,gBAAnG,CAAP;AACH;AACJ,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAG,cAAab,SAAS,CAACc,GAAI,EAAtC;AAAyC,IAAA,SAAS,EAAC,oBAAnD;AAAwE,IAAA,OAAO,EAAE,MAAM;AAACX,MAAAA,iBAAiB,CAACH,SAAS,CAACc,GAAX,EAAgBd,SAAS,CAACe,KAA1B,CAAjB;AAAkD,KAA1I;AAAA,4BACI;AAAK,MAAA,GAAG,EAAG,gCAA+Bf,SAAS,CAACgB,OAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,4BAAb;AAAA,kBAA2ChB,SAAS,CAACe;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBACKd,IAAI,iBACD;AAAA,oBACKD,SAAS,CAACiB,UAAV,gBACG,QAAC,cAAD;AAAgB,YAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADH,gBAGG,QAAC,iBAAD;AAAmB,YAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAJR,yBAFR,EAUK,CAAChB,IAAD,iBAAS;AAAG,UAAA,SAAS,EAAG,8BAA6BD,SAAS,CAACkB,OAAV,GAAoB,MAApB,GAA6B,MAAO,EAAhF;AAAA,oBAAoFhB,OAAO,CAACiB;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAVd,eAWI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCf;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAkBI;AAAA,iBACK,CAACH,IAAD,iBAAS,QAAC,YAAD;AAAc,QAAA,SAAS,EAAG,2BAA0BD,SAAS,CAACoB,UAAV,GAAuB,MAAvB,GAAgC,MAAO;AAA3F;AAAA;AAAA;AAAA;AAAA,cADd,eAEI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAG,2BAA0BpB,SAAS,CAACkB,OAAV,GAAoB,MAApB,GAA6B,MAAO;AAAvF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAG,8BAA6BlB,SAAS,CAACkB,OAAV,GAAoB,MAApB,GAA6B,MAAO,EAAhF;AAAA,kBAAoFlB,SAAS,CAACqB;AAA9F;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA/CD;;GAAMtB,gB;;KAAAA,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenWorkspacesContext } from '../Contexts/openWorkspacesContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst WorkspaceRowCard = ({workspace, self, creator}) => {\n    const {addOpenWorkspaces} = useContext(OpenWorkspacesContext);\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(workspace.updatedAt);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} year(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} month(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} day(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hour(s) ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minute(s) ago`)\n        }\n    }, [])\n\n    return (\n        <Link to={`/workspace/${workspace._id}`} className=\"workspace-row-card\" onClick={() => {addOpenWorkspaces(workspace._id, workspace.title)}}>\n            <img src={`http://localhost:4000/images/${workspace.picture}`} />\n            <div className=\"workspace-row-card-information\">\n                <p className=\"workspace-row-card-heading\">{workspace.title}</p>\n                <div>\n                    {self && \n                        <>\n                            {workspace.visibility ? \n                                <VisibilityIcon className=\"workspace-row-card-visibility\" />\n                            :\n                                <VisibilityOffIcon className=\"workspace-row-card-visibility\" />\n                            }\n                        </>\n                    }\n                    {!self && <p className={`workspace-row-card-upvotes ${workspace.upvoted ? \"blue\" : \"grey\"}`}>{creator.name}</p>}\n                    <p className=\"workspace-row-card-meta\">{date}</p>\n                </div>\n            </div>\n            <div>\n                {!self && <BookmarkIcon className={`workspace-row-card-icon ${workspace.bookmarked ? \"blue\" : \"grey\"}`} />}\n                <ThumbUpIcon className={`workspace-row-card-icon ${workspace.upvoted ? \"blue\" : \"grey\"}`} />\n                <p className={`workspace-row-card-upvotes ${workspace.upvoted ? \"blue\" : \"grey\"}`}>{workspace.upvotes}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default WorkspaceRowCard"]},"metadata":{},"sourceType":"module"}