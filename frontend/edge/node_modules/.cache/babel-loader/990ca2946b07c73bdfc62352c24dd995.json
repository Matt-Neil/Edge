{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport authAPI from \"../API/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext();\n\nconst CurrentUserContextProvider = props => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    loaded: false\n  });\n  useEffect(() => {\n    const localData = localStorage.getItem('currentUser');\n\n    const fetchData = async () => {\n      try {\n        const response = await authAPI.get(`/`);\n\n        if (localData && response.data.data || !localData && response.data.data) {\n          setCurrentUser({\n            id: response.data.data._id,\n            name: response.data.data.name,\n            email: response.data.data.email,\n            password: response.data.data.password,\n            loaded: true,\n            empty: false\n          });\n        } else {\n          setCurrentUser({\n            loaded: true,\n            empty: true\n          });\n        }\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const changeCurrentUser = user => {\n    setCurrentUser(user);\n  };\n\n  const removeCurrentUser = () => {\n    setCurrentUser({\n      loaded: false\n    });\n    localStorage.removeItem('currentUser');\n  };\n\n  useEffect(() => {\n    localStorage.setItem('currentUser', JSON.stringify(currentUser));\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      currentUser,\n      changeCurrentUser,\n      removeCurrentUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CurrentUserContextProvider, \"sU5qf/03MwL21UTq/hYNhukw3mc=\");\n\n_c = CurrentUserContextProvider;\nexport default CurrentUserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentUserContextProvider\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/currentUserContext.js"],"names":["React","createContext","useEffect","useState","authAPI","CurrentUserContext","CurrentUserContextProvider","props","currentUser","setCurrentUser","loaded","localData","localStorage","getItem","fetchData","response","get","data","id","_id","name","email","password","empty","err","changeCurrentUser","user","removeCurrentUser","removeItem","setItem","JSON","stringify","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,EAAxC;;AAEP,MAAMK,0BAA0B,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAACO,IAAAA,MAAM,EAAE;AAAT,GAAD,CAA9C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAlB;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,GAAR,CAAa,GAAb,CAAvB;;AAEA,YAAKL,SAAS,IAAII,QAAQ,CAACE,IAAT,CAAcA,IAA5B,IAAsC,CAACN,SAAD,IAAcI,QAAQ,CAACE,IAAT,CAAcA,IAAtE,EAA6E;AACzER,UAAAA,cAAc,CAAC;AACXS,YAAAA,EAAE,EAAEH,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBE,GADZ;AAEXC,YAAAA,IAAI,EAAEL,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBG,IAFd;AAGXC,YAAAA,KAAK,EAAEN,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBI,KAHf;AAIXC,YAAAA,QAAQ,EAAEP,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBK,QAJlB;AAKXZ,YAAAA,MAAM,EAAE,IALG;AAMXa,YAAAA,KAAK,EAAE;AANI,WAAD,CAAd;AAQH,SATD,MASO;AACHd,UAAAA,cAAc,CAAC;AACXC,YAAAA,MAAM,EAAE,IADG;AAEXa,YAAAA,KAAK,EAAE;AAFI,WAAD,CAAd;AAIH;AACJ,OAlBD,CAkBE,OAAOC,GAAP,EAAY,CAAE;AACnB,KApBD;;AAqBAV,IAAAA,SAAS;AACZ,GAzBQ,EAyBN,EAzBM,CAAT;;AA2BA,QAAMW,iBAAiB,GAAIC,IAAD,IAAU;AAChCjB,IAAAA,cAAc,CAACiB,IAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BlB,IAAAA,cAAc,CAAC;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAD,CAAd;AAEAE,IAAAA,YAAY,CAACgB,UAAb,CAAwB,aAAxB;AACH,GAJD;;AAMA1B,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACiB,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAevB,WAAf,CAApC;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACA,MAAAA,WAAD;AAAciB,MAAAA,iBAAd;AAAiCE,MAAAA;AAAjC,KAApC;AAAA,cACKpB,KAAK,CAACyB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjDD;;GAAM1B,0B;;KAAAA,0B;AAmDN,eAAeA,0BAAf","sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\nimport authAPI from \"../API/auth\"\n\nexport const CurrentUserContext = createContext()\n\nconst CurrentUserContextProvider = (props) => {\n    const [currentUser, setCurrentUser] = useState({loaded: false});\n\n    useEffect(() => {\n        const localData = localStorage.getItem('currentUser');\n        \n        const fetchData = async () => {\n            try {\n                const response = await authAPI.get(`/`);\n\n                if ((localData && response.data.data) || (!localData && response.data.data)) {\n                    setCurrentUser({\n                        id: response.data.data._id,\n                        name: response.data.data.name,\n                        email: response.data.data.email,\n                        password: response.data.data.password,\n                        loaded: true,\n                        empty: false\n                    })\n                } else {\n                    setCurrentUser({\n                        loaded: true,\n                        empty: true\n                    })\n                }\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const changeCurrentUser = (user) => {\n        setCurrentUser(user);\n    }\n\n    const removeCurrentUser = () => {\n        setCurrentUser({loaded: false})\n        \n        localStorage.removeItem('currentUser')\n    }\n\n    useEffect(() => {\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n    }, [currentUser])\n\n    return (\n        <CurrentUserContext.Provider value={{currentUser, changeCurrentUser, removeCurrentUser}}>\n            {props.children}\n        </CurrentUserContext.Provider>\n    )\n}\n\nexport default CurrentUserContextProvider"]},"metadata":{},"sourceType":"module"}