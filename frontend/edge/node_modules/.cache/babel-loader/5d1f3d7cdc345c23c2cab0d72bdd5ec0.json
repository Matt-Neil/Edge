{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport projectAPI from '../API/projects';\nimport userAPI from '../API/users';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewProject = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [data, setData] = useState();\n  const [displayData, setDisplayData] = useState();\n  const [importMethod, setImportMethod] = useState(\"\");\n  const [image, setImage] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [projects, setProjects] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projects = await projectAPI.get(\"/\");\n        projects.data.data.map(project => {\n          setProjects(previous => [...previous, project.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data !== undefined) {\n      const file = data;\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setDisplayData(e.target.result);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [data]);\n\n  const next = () => {\n    if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n      setSetupStage(false);\n    }\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const remove = () => {\n    setDataID(\"\");\n    setData();\n    setDisplayData();\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const projectResponse = await projectAPI.post(\"/\", {\n        title: title,\n        data: \"none\",\n        creator: currentUser.id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: 0,\n        visibility: visibility\n      });\n      uploadFile(projectResponse.data.data);\n    } catch (err) {}\n  };\n\n  const uploadFile = async projectID => {\n    if (importMethod === \"file\" && data !== undefined) {\n      const formData = new FormData();\n      formData.append('data', data);\n      formData.append('id', projectID);\n\n      try {\n        await fileAPI.post(\"/upload\", formData);\n      } catch (err) {}\n\n      try {\n        await projectAPI.put(`/${projectID}`, {\n          data: `${projectID}-data`\n        });\n        history.push(`/project/${projectID}`);\n      } catch (err) {}\n    } else if (importMethod === \"existing\" && dataID !== \"\") {\n      try {\n        await projectAPI.put(`/${projectID}`, {\n          data: dataID\n        });\n        history.push(`/project/${projectID}`);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-project-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            setSetupStage(true);\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${!setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-project-setup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-setup-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-project-title\",\n            placeholder: \"Title\",\n            onChange: e => {\n              setTitle(e.target.value);\n            },\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"new-project-description\",\n            placeholder: \"Description\",\n            onChange: e => {\n              setDescription(e.target.value);\n            },\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: () => {\n                setVisibility(previous => !previous);\n              },\n              value: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImage(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              next();\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this), !setupStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-import\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Import Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"existing\");\n              },\n              children: \"Existing Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"file\");\n              },\n              children: \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-method\",\n            children: importMethod !== \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: importMethod === \"file\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                onChange: e => {\n                  setData(e.target.files[0]);\n                },\n                onClick: e => e.target.value = null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-project-import-projectid\",\n                placeholder: \"Project ID\",\n                onChange: e => {\n                  setDataID(e.target.value);\n                },\n                value: dataID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), data !== undefined && displayData !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-project-data-information\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"new-project-filename\",\n                children: [\"File: \", data.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"new-project-cancel\",\n                onClick: () => {\n                  remove();\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-project-data-table\",\n              children: /*#__PURE__*/_jsxDEV(ViewData, {\n                displayData: displayData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            disabled: disableCreate,\n            onClick: () => {\n              uploadImage();\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewProject, \"XOMfGTSePtpa30QQMckCba77s3g=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\nexport default NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx"],"names":["React","useState","useEffect","useHistory","projectAPI","userAPI","fileAPI","imageAPI","ViewData","NewProject","currentUser","setupStage","setSetupStage","title","setTitle","description","setDescription","visibility","setVisibility","data","setData","displayData","setDisplayData","importMethod","setImportMethod","image","setImage","dataID","setDataID","projects","setProjects","loaded","setLoaded","disableCreate","setDisabledCreate","history","fetchData","get","map","project","previous","err","undefined","file","reader","FileReader","onload","e","target","result","readAsText","next","includes","cancel","goBack","remove","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","projectResponse","creator","id","experiments","picture","upvotes","uploadFile","projectID","formData","put","push","value","files","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport projectAPI from '../API/projects'\nimport userAPI from '../API/users'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\n\nconst NewProject = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [data, setData] = useState();\n    const [displayData, setDisplayData] = useState();\n    const [importMethod, setImportMethod] = useState(\"\")\n    const [image, setImage] = useState();\n    const [dataID, setDataID] = useState(\"\")\n    const [projects, setProjects] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectAPI.get(\"/\");\n\n                projects.data.data.map((project) => {\n                    setProjects(previous => [...previous, project.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (data !== undefined) {\n            const file = data;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDisplayData(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [data])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataID(\"\")\n        setData()\n        setDisplayData()\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const projectResponse = await projectAPI.post(\"/\", {\n                title: title,\n                data: \"none\",\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                visibility: visibility\n            });\n\n            uploadFile(projectResponse.data.data)\n        } catch (err) {}\n    }\n\n    const uploadFile = async (projectID) => {\n        if (importMethod === \"file\" && data !== undefined) {\n            const formData = new FormData();\n\n            formData.append('data', data);\n            formData.append('id', projectID)\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n            \n            try {\n                await projectAPI.put(`/${projectID}`, {\n                    data: `${projectID}-data`\n                });\n\n                history.push(`/project/${projectID}`)\n            } catch (err) {}\n        } else if (importMethod === \"existing\" && dataID !== \"\") {\n            try {\n                await projectAPI.put(`/${projectID}`, {\n                    data: dataID\n                });\n\n                history.push(`/project/${projectID}`)\n            } catch (err) {}\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-project\">\n                    <div className=\"sidebar\">\n                        <h1>New Project</h1> \n                        <div className=\"new-project-header\">\n                            <p className=\"new-project-title\">{title}</p> \n                        </div>\n                        <button className={`${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"sidebar-stage\"} ${!setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled>Data</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-project-setup\">\n                            <div className=\"new-project-setup-information\">\n                                <input className=\"new-project-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-project-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onClick={() => {setVisibility(previous => !previous)}}\n                                            value={visibility} />\n                                </div>\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImage(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-project-nav\">   \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { !setupStage &&\n                        <>\n                            <div className=\"new-project-import\">\n                                <div className=\"new-project-import-options\">\n                                    <p>Import Data</p>\n                                    <button onClick={() => {setImportMethod(\"existing\")}}>Existing Project</button>\n                                    <button onClick={() => {setImportMethod(\"file\")}}>Upload File</button>\n                                </div>\n                                <div className=\"new-project-import-method\">\n                                {importMethod !== \"\" &&\n                                    <>\n                                        {importMethod === \"file\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    onChange={e => {setData(e.target.files[0])}}\n                                                    onClick={e => (e.target.value = null)} />\n                                        :\n                                            <input className=\"new-project-import-projectid\"\n                                                    placeholder=\"Project ID\"\n                                                    onChange={e => {setDataID(e.target.value)}}\n                                                    value={dataID} />\n                                        }\n                                    </>\n                                }\n                                </div>\n                                {data !== undefined && displayData !== undefined &&\n                                    <div className=\"new-project-data\">\n                                        <div className=\"new-project-data-information\">\n                                            <p className=\"new-project-filename\">File: {data.name}</p>\n                                            <button className=\"new-project-cancel\"\n                                                    onClick={() => {remove()}}>Remove</button>\n                                        </div>\n                                        <div className=\"new-project-data-table\">\n                                            <ViewData displayData={displayData} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        disabled={disableCreate}\n                                        onClick={() => {uploadImage()}}>Create</button>\n                            </div>\n                        </>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewProject\n"]},"metadata":{},"sourceType":"module"}