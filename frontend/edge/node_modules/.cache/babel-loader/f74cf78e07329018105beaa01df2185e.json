{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport usersAPI from '../API/users';\nimport itemsAPI from '../API/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewItems = _ref => {\n  _s();\n\n  let {\n    type,\n    currentUser,\n    setSidebar\n  } = _ref;\n  const [items, setItems] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [finishedItems, setFinishedItems] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let items;\n\n        switch (type) {\n          case \"created-datasets\":\n            items = await usersAPI.get(`/created?type=dataset&date=${new Date().toISOString()}`);\n            break;\n\n          case \"created-workspaces\":\n            items = await usersAPI.get(`/created?type=workspace&date=${new Date().toISOString()}`);\n            break;\n\n          case \"bookmarks\":\n            items = await usersAPI.get(`/bookmarked?date=${new Date().toISOString()}`);\n            break;\n\n          case \"public-workspaces\":\n            items = await itemsAPI.get(`/public?type=workspace&date=${new Date().toISOString()}`);\n            break;\n\n          case \"public-datasets\":\n            items = await itemsAPI.get(`/public?type=dataset&date=${new Date().toISOString()}`);\n            break;\n        }\n\n        if (items.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n    setSidebar({\n      type: \"home\"\n    });\n  }, []);\n\n  const fetchDataItems = async date => {\n    if (!finishedItems) {\n      try {\n        let fetchedItems;\n\n        switch (type) {\n          case \"created-datasets\":\n            items = await usersAPI.get(`/created?type=dataset&date=${date}`);\n            break;\n\n          case \"created-workspaces\":\n            items = await usersAPI.get(`/created?type=workspace&date=${date}`);\n            break;\n\n          case \"bookmarks\":\n            items = await usersAPI.get(`/bookmarked?date=${date}`);\n            break;\n\n          case \"public-workspaces\":\n            items = await itemsAPI.get(`/public?type=workspace&date=${date}`);\n            break;\n\n          case \"public-datasets\":\n            items = await itemsAPI.get(`/public?type=dataset&date=${date}`);\n            break;\n        }\n\n        if (fetchedItems.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items => [...items, ...fetchedItems.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (items.length !== 0) {\n      if (type === \"public-workspaces\" || type === \"public-datasets\") {\n        {\n          fetchDataItems(items[items.length - 1].createdAt);\n        }\n      } else {\n        {\n          fetchDataItems(items[items.length - 1].updatedAt);\n        }\n      }\n    }\n  };\n\n  const displayHeading = () => {\n    let heading;\n\n    switch (type) {\n      case \"created-workspaces\":\n        heading = \"Your Workspaces\";\n        break;\n\n      case \"created-datasets\":\n        heading = \"Your Datasets\";\n        break;\n\n      case \"bookmarks\":\n        heading = \"Your Bookmarked\";\n        break;\n\n      case \"public-workspaces\":\n        heading = \"Public Workspaces\";\n        break;\n\n      case \"public-datasets\":\n        heading = \"Public Datasets\";\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-items-top\",\n        children: [displayHeading(), type === \"created-workspaces\" && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-workspace\",\n          className: \"blue-button\",\n          children: \"Create Workspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 59\n        }, this), type === \"created-datasets\" && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-dataset\",\n          className: \"blue-button\",\n          children: \"Create Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-card-type\",\n        children: [type === \"created-workspaces\" || type === \"public-workspaces\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${items.length} Workspaces`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this) : type === \"created-datasets\" || type === \"public-dataset\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${items.length} Datasets`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${items.length} Bookmarks`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/List.png\",\n          className: \"toggle-card-type-row-icon\",\n          onClick: () => {\n            setRowFormat(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/Grid.png\",\n          className: \"toggle-card-type-grid-icon\",\n          onClick: () => {\n            setRowFormat(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-items-list\",\n        children: items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: items.map((item, i) => {\n            if (type === \"created-workspaces\" || type === \"created-datasets\") return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n              item: item,\n              created: true\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 122\n            }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n              item: item,\n              created: true\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 175\n            }, this);\n            return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n              item: item,\n              creator: item.creatorName.name,\n              currentUserID: currentUser.id,\n              created: type === \"created\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 56\n            }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n              item: item,\n              creator: item.creatorName.name,\n              currentUserID: currentUser.id,\n              created: type === \"created\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 186\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), items.length >= 0 && finishedItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"end-items\",\n        children: \"End reached\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"load-items\",\n        onClick: () => {\n          loadMore();\n        },\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(ViewItems, \"o/FUn/Gu/ZI1+2OkAT5t956HrYI=\");\n\n_c = ViewItems;\nexport default ViewItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewItems\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx"],"names":["React","useState","useEffect","Link","ItemRowCard","ItemSquareCard","usersAPI","itemsAPI","ViewItems","type","currentUser","setSidebar","items","setItems","loaded","setLoaded","rowFormat","setRowFormat","finishedItems","setFinishedItems","fetchData","get","Date","toISOString","data","length","err","fetchDataItems","date","fetchedItems","loadMore","createdAt","updatedAt","displayHeading","heading","map","item","i","creatorName","name","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\n\nconst ViewItems = ({type, currentUser, setSidebar}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [finishedItems, setFinishedItems] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let items;\n\n                switch (type) {\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created?type=dataset&date=${new Date().toISOString()}`);\n                        break;\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created?type=workspace&date=${new Date().toISOString()}`);\n                        break;\n                    case \"bookmarks\":\n                        items = await usersAPI.get(`/bookmarked?date=${new Date().toISOString()}`);\n                        break;\n                    case \"public-workspaces\":\n                        items = await itemsAPI.get(`/public?type=workspace&date=${new Date().toISOString()}`);\n                        break;\n                    case \"public-datasets\":\n                        items = await itemsAPI.get(`/public?type=dataset&date=${new Date().toISOString()}`);\n                        break;\n                }\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n        setSidebar({type: \"home\"})\n    }, [])\n    \n    const fetchDataItems = async (date) => {\n        if (!finishedItems) {\n            try {\n                let fetchedItems;\n\n                switch (type) {\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created?type=dataset&date=${date}`);\n                        break;\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created?type=workspace&date=${date}`);\n                        break;\n                    case \"bookmarks\":\n                        items = await usersAPI.get(`/bookmarked?date=${date}`);\n                        break;\n                    case \"public-workspaces\":\n                        items = await itemsAPI.get(`/public?type=workspace&date=${date}`);\n                        break;\n                    case \"public-datasets\":\n                        items = await itemsAPI.get(`/public?type=dataset&date=${date}`);\n                        break;   \n                }\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            if (type === \"public-workspaces\" || type === \"public-datasets\") {\n                {fetchDataItems(items[items.length-1].createdAt)}\n            } else {\n                {fetchDataItems(items[items.length-1].updatedAt)}\n            }\n        }\n    };\n\n    const displayHeading = () => {\n        let heading;\n\n        switch (type) {\n            case \"created-workspaces\":\n                heading = \"Your Workspaces\"\n                break;\n            case \"created-datasets\":\n                heading = \"Your Datasets\"\n                break;\n            case \"bookmarks\":\n                heading = \"Your Bookmarked\"\n                break;\n            case \"public-workspaces\":\n                heading = \"Public Workspaces\"\n                break;\n            case \"public-datasets\":\n                heading = \"Public Datasets\"\n                break;\n        }\n\n        return <h1>{heading}</h1>\n    }\n    \n    return (\n        <>\n            {loaded &&\n                <>\n                    <div className=\"view-items-top\">\n                        {displayHeading()}\n                        {type === \"created-workspaces\" && <Link to=\"/create-workspace\" className=\"blue-button\">Create Workspace</Link>}\n                        {type === \"created-datasets\" && <Link to=\"/create-dataset\" className=\"blue-button\">Create Dataset</Link>}\n                    </div>\n                    <div className=\"toggle-card-type\">\n                        {(type === \"created-workspaces\" || type === \"public-workspaces\") ?\n                            <p>{`${items.length} Workspaces`}</p>\n                        : (type === \"created-datasets\" || type === \"public-dataset\") ?\n                            <p>{`${items.length} Datasets`}</p>\n                        :\n                            <p>{`${items.length} Bookmarks`}</p>\n                        }\n                        <span />\n                        <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {setRowFormat(true)}} />\n                        <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                    </div>\n                    <div className=\"view-items-list\">\n                        {items.length > 0 &&\n                            <>\n                                {items.map((item, i) => {\n                                    if (type === \"created-workspaces\" || type === \"created-datasets\") return rowFormat ? <ItemRowCard item={item} created={true} key={i} /> : <ItemSquareCard item={item} created={true} key={i} />\n\n                                    return rowFormat ? <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} /> : <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} />\n                                })}\n                            </>\n                        }\n                    </div>\n                    {items.length >= 0 && finishedItems ?\n                        <p className=\"end-items\">End reached</p>\n                        :\n                        <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                    }\n                </>\n            }\n        </>\n    )\n}\n\nexport default ViewItems"]},"metadata":{},"sourceType":"module"}