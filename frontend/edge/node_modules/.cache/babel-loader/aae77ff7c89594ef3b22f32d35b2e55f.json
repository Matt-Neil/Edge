{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport projectsAPI from '../API/projects';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewProject = () => {\n  _s();\n\n  const [setupStage, setSetupStage] = useState(true);\n  const [dataStage, setDataStage] = useState(false);\n  const [codeStage, setCodeStage] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [data, setData] = useState();\n  const [importMethod, setImportMethod] = useState(\"\");\n  const [image, setimage] = useState();\n  const [projectID, setProjectID] = useState(\"\");\n  const [code, setCode] = useState();\n  const [experiment, setExperiment] = useState();\n  const [trainingSplit, setTrainingSplit] = useState(80);\n  const [validationSplit, setValidationSplit] = useState(20);\n  const [projects, setProjects] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projects = await projectsAPI.get(\"/\");\n        projects.data.data.map(project => {\n          setProjects(previous => [...previous, project.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data !== undefined) {\n      console.log(data);\n      const file = data;\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        const text = e.target.result;\n      };\n\n      reader.readAsText(file);\n    }\n  }, [data]);\n\n  const next = () => {\n    if (setupStage) {\n      if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n        setSetupStage(false);\n        setDataStage(true);\n      }\n    } else if (dataStage) {\n      setDataStage(false);\n      setCodeStage(true);\n    }\n  };\n\n  const changeStageSetup = () => {\n    setSetupStage(true);\n    setDataStage(false);\n    setCodeStage(false);\n  };\n\n  const changeStageData = () => {\n    setSetupStage(false);\n    setDataStage(true);\n    setCodeStage(false);\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const create = async () => {\n    if (!(data === undefined && code === undefined)) {\n      const formData = new FormData();\n\n      if (data !== undefined) {\n        formData.append('data', data);\n      }\n\n      if (data !== undefined) {\n        formData.append('data', data);\n      }\n\n      try {\n        await fileAPI.post(\"/upload\", formData);\n      } catch (err) {}\n    }\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-project-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            changeStageSetup();\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${dataStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: dataStage || setupStage,\n          onClick: () => {\n            changeStageData();\n          },\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${codeStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: codeStage || setupStage || dataStage,\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-project-setup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-setup-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-project-title\",\n            placeholder: \"Title\",\n            onChange: e => {\n              setTitle(e.target.value);\n            },\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"new-project-description\",\n            placeholder: \"Description\",\n            onChange: e => {\n              setDescription(e.target.value);\n            },\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: () => {\n                setVisibility(previous => !previous);\n              },\n              value: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setimage(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              next();\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this), dataStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-import\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Import Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"existing\");\n              },\n              children: \"Existing Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"file\");\n              },\n              children: \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this), importMethod !== \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: importMethod === \"file\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"data\",\n              onChange: e => {\n                setData(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-project-import-projectid\",\n              placeholder: \"Project ID\",\n              onChange: e => {\n                setProjectID(e.target.value);\n              },\n              value: projectID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 45\n            }, this)\n          }, void 0, false), data !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"File : \", data.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              next();\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), codeStage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-project-import\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-import-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"code\",\n            onChange: e => {\n              setCode(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              create();\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewProject, \"yRE40293a5YZq14fGbmnK7c5YXw=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\nexport default NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx"],"names":["React","useState","useEffect","Link","useHistory","projectsAPI","fileAPI","imageAPI","NewProject","setupStage","setSetupStage","dataStage","setDataStage","codeStage","setCodeStage","title","setTitle","description","setDescription","visibility","setVisibility","data","setData","importMethod","setImportMethod","image","setimage","projectID","setProjectID","code","setCode","experiment","setExperiment","trainingSplit","setTrainingSplit","validationSplit","setValidationSplit","projects","setProjects","loaded","setLoaded","history","fetchData","get","map","project","previous","err","undefined","console","log","file","reader","FileReader","onload","e","text","target","result","readAsText","next","includes","changeStageSetup","changeStageData","cancel","goBack","create","formData","FormData","append","post","formImage","imageResponse","value","files","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link, useHistory} from \"react-router-dom\"\nimport projectsAPI from '../API/projects'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\n\nconst NewProject = () => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [dataStage, setDataStage] = useState(false);\n    const [codeStage, setCodeStage] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [data, setData] = useState();\n    const [importMethod, setImportMethod] = useState(\"\")\n    const [image, setimage] = useState();\n    const [projectID, setProjectID] = useState(\"\")\n    const [code, setCode] = useState();\n    const [experiment, setExperiment] = useState();\n    const [trainingSplit, setTrainingSplit] = useState(80);\n    const [validationSplit, setValidationSplit] = useState(20);\n    const [projects, setProjects] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectsAPI.get(\"/\");\n\n                projects.data.data.map((project) => {\n                    setProjects(previous => [...previous, project.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (data !== undefined) {\n            console.log(data)\n            const file = data;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                const text = e.target.result;\n            }\n\n            reader.readAsText(file)\n        }\n    }, [data])\n\n    const next = () => {\n        if (setupStage) {\n            if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n                setSetupStage(false)\n                setDataStage(true)\n            }\n        } else if (dataStage) {\n            setDataStage(false)\n            setCodeStage(true)\n        }\n    }\n\n    const changeStageSetup = () => {\n        setSetupStage(true)\n        setDataStage(false)\n        setCodeStage(false)\n    }\n\n    const changeStageData = () => {\n        setSetupStage(false)\n        setDataStage(true)\n        setCodeStage(false)\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const create = async () => {\n        if (!(data === undefined && code === undefined)) {\n            const formData = new FormData();\n\n            if (data !== undefined) {\n                formData.append('data', data);\n            }\n    \n            if (data !== undefined) {\n                formData.append('data', data);\n            }\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n        }\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n            } catch (err) {}\n        }\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-project\">\n                    <div className=\"sidebar\">\n                        <h1>New Project</h1> \n                        <div className=\"new-project-header\">\n                            <p className=\"new-project-title\">{title}</p> \n                        </div>\n                        <button className={`${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {changeStageSetup()}}>Setup</button>\n                        <button className={`${\"sidebar-stage\"} ${dataStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={dataStage || setupStage}\n                                onClick={() => {changeStageData()}}>Data</button>\n                        <button className={`${\"sidebar-stage\"} ${codeStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={codeStage || setupStage || dataStage}>Code</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-project-setup\">\n                            <div className=\"new-project-setup-information\">\n                                <input className=\"new-project-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-project-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onClick={() => {setVisibility(previous => !previous)}}\n                                            value={visibility} />\n                                </div>\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setimage(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-project-nav\">   \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { dataStage &&\n                        <>\n                            <div className=\"new-project-import\">\n                                <div className=\"new-project-import-options\">\n                                    <p>Import Data</p>\n                                    <button onClick={() => {setImportMethod(\"existing\")}}>Existing Project</button>\n                                    <button onClick={() => {setImportMethod(\"file\")}}>Upload File</button>\n                                </div>\n                                {importMethod !== \"\" &&\n                                    <>\n                                        {importMethod === \"file\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\" \n                                                    onChange={e => {setData(e.target.files[0])}} />\n                                        :\n                                            <input className=\"new-project-import-projectid\"\n                                                    placeholder=\"Project ID\"\n                                                    onChange={e => {setProjectID(e.target.value)}}\n                                                    value={projectID} />\n                                        }\n                                    </>\n                                }\n                                {data !== undefined &&\n                                    <>\n                                        <p>File : {data.name}</p>\n                                    </>\n                                }\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </>\n                    }\n                    { codeStage &&\n                        <div className=\"new-project-import\">\n                            <div className=\"new-project-import-options\">\n                                <p>Upload Code</p>\n                                <input type=\"file\" \n                                        name=\"code\" \n                                        onChange={e => {setCode(e.target.files[0])}} />\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {create()}}>Create</button>\n                            </div>\n                        </div>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewProject\n"]},"metadata":{},"sourceType":"module"}