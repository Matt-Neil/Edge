{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account-Workspaces.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport WorkspaceRowCard from '../Components/Workspace-Row-Card';\nimport WorkspaceSquareCard from '../Components/Workspace-Square-Card';\nimport workspacesAPI from '../API/workspaces';\nimport GridOnIcon from '@mui/icons-material/GridOn';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = () => {\n  _s();\n\n  const [workspaces, setWorkspaces] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspaces = await workspacesAPI.get(\"/\");\n        setWorkspaces(workspaces.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-workspaces-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-workspaces-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Workspaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/new-workspace\",\n            className: \"blue-button\",\n            children: \"New Workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-workspaces-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${workspaces.length} Workspaces`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListAltIcon, {\n            className: \"account-workspaces-row-icon\",\n            onClick: () => {\n              setRowFormat(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(GridOnIcon, {\n            className: \"account-workspaces-grid-icon\",\n            onClick: () => {\n              setRowFormat(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-workspaces-list\",\n          children: workspaces.map((workspace, i) => {\n            return rowFormat ? /*#__PURE__*/_jsxDEV(WorkspaceRowCard, {\n              workspace: workspace,\n              self: {\n                self: true\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 52\n            }, this) : /*#__PURE__*/_jsxDEV(WorkspaceSquareCard, {\n              workspace: workspace\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 125\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"KNJbg/Gf/YiD5BbdqlQvagaH2bE=\");\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account-Workspaces.jsx"],"names":["React","useState","useEffect","useHistory","Link","useParams","WorkspaceRowCard","WorkspaceSquareCard","workspacesAPI","GridOnIcon","ListAltIcon","AccountWorkspaces","workspaces","setWorkspaces","loaded","setLoaded","rowFormat","setRowFormat","fetchData","get","data","err","length","map","workspace","i","self"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,SAA1B,QAA0C,kBAA1C;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,EAA5C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMN,UAAU,GAAG,MAAMJ,aAAa,CAACW,GAAd,CAAkB,GAAlB,CAAzB;AAEAN,QAAAA,aAAa,CAACD,UAAU,CAACQ,IAAX,CAAgBA,IAAjB,CAAb;AACAL,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH,OALD,CAKE,OAAOM,GAAP,EAAY,CAAE;AACnB,KAPD;;AAQAH,IAAAA,SAAS;AACZ,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,cACKJ,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,gBAAT;AAA0B,YAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACI;AAAA,sBAAK,GAAEF,UAAU,CAACU,MAAO;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAC,6BAAvB;AAAqD,YAAA,OAAO,EAAE,MAAM;AAACL,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAAmB;AAAxF;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,8BAAtB;AAAqD,YAAA,OAAO,EAAE,MAAM;AAACA,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB;AAAzF;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAUI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,oBACKL,UAAU,CAACW,GAAX,CAAe,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAC9B,mBAAOT,SAAS,gBAAG,QAAC,gBAAD;AAAkB,cAAA,SAAS,EAAEQ,SAA7B;AAAwC,cAAA,IAAI,EAAE;AAACE,gBAAAA,IAAI,EAAE;AAAP;AAA9C,eAAiED,CAAjE;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAA4E,QAAC,mBAAD;AAAqB,cAAA,SAAS,EAAED;AAAhC,eAAgDC,CAAhD;AAAA;AAAA;AAAA;AAAA,oBAA5F;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAwBH,CAzCD;;GAAMd,iB;;KAAAA,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport WorkspaceRowCard from '../Components/Workspace-Row-Card'\nimport WorkspaceSquareCard from '../Components/Workspace-Square-Card'\nimport workspacesAPI from '../API/workspaces'\nimport GridOnIcon from '@mui/icons-material/GridOn';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\n\nconst AccountWorkspaces = () => {\n    const [workspaces, setWorkspaces] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspaces = await workspacesAPI.get(\"/\");\n\n                setWorkspaces(workspaces.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"account-workspaces-body\">\n                        <div className=\"account-workspaces-top\">\n                            <h1>My Workspaces</h1>\n                            <Link to=\"/new-workspace\" className=\"blue-button\">New Workspace</Link>\n                        </div>\n                        <div className=\"account-workspaces-middle\">\n                            <p>{`${workspaces.length} Workspaces`}</p>\n                            <ListAltIcon className=\"account-workspaces-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <GridOnIcon className=\"account-workspaces-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"account-workspaces-list\">\n                            {workspaces.map((workspace, i) => {\n                                return rowFormat ? <WorkspaceRowCard workspace={workspace} self={{self: true}} key={i} /> : <WorkspaceSquareCard workspace={workspace} key={i} />\n                            })}\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}