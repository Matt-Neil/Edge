{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport projectsAPI from '../API/projects';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewProject = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [dataStage, setDataStage] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [data, setData] = useState();\n  const [displayData, setDisplayData] = useState();\n  const [importMethod, setImportMethod] = useState(\"\");\n  const [imageFile, setImageFile] = useState();\n  const [imageName, setImageName] = useState(\"\");\n  const [projectID, setProjectID] = useState(\"\");\n  const [projects, setProjects] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projects = await projectsAPI.get(\"/\");\n        projects.data.data.map(project => {\n          setProjects(previous => [...previous, project.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data !== undefined) {\n      data.name = \"asdasd\";\n      const file = data;\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setDisplayData(e.target.result);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [data]);\n\n  const next = () => {\n    if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n      setSetupStage(false);\n      setDataStage(true);\n    }\n  };\n\n  const changeStage = () => {\n    setSetupStage(true);\n    setDataStage(false);\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const create = async () => {\n    try {\n      let dataUploaded = false;\n\n      if (data === undefined) {\n        dataUploaded = false;\n      } else {\n        dataUploaded = true;\n      }\n\n      if (imageFile) {\n        const formImage = new FormData();\n        formImage.append('image', imageFile);\n\n        try {\n          const imageResponse = await imageAPI.post(\"/upload\", formImage);\n          setImageName(imageResponse.data.data);\n        } catch (err) {}\n      }\n\n      const project = await projectsAPI.post(\"/\", {\n        title: title,\n        data: dataUploaded,\n        creator: currentUser._id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: 0,\n        visibility: visibility\n      });\n      setProjectID(project.data.data);\n    } catch (err) {}\n\n    if (!data === undefined) {\n      const formData = new FormData();\n      formData.append('data', data);\n\n      try {\n        await fileAPI.post(\"/upload\", formData);\n      } catch (err) {}\n    }\n\n    history.push(`/project/${projectID}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-project-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            changeStage();\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${dataStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: dataStage || setupStage,\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-project-setup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-setup-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-project-title\",\n            placeholder: \"Title\",\n            onChange: e => {\n              setTitle(e.target.value);\n            },\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"new-project-description\",\n            placeholder: \"Description\",\n            onChange: e => {\n              setDescription(e.target.value);\n            },\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: () => {\n                setVisibility(previous => !previous);\n              },\n              value: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImageFile(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              next();\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this), dataStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-import\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Import Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"existing\");\n              },\n              children: \"Existing Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"file\");\n              },\n              children: \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-method\",\n            children: importMethod !== \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: importMethod === \"file\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                onChange: e => {\n                  setData(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-project-import-projectid\",\n                placeholder: \"Project ID\",\n                onChange: e => {\n                  setProjectID(e.target.value);\n                },\n                value: projectID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this), data !== undefined && displayData !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"new-project-filename\",\n              children: [\"File: \", data.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-project-data-table\",\n              children: /*#__PURE__*/_jsxDEV(ViewData, {\n                displayData: displayData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              create();\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewProject, \"7+cqnjZTlf9g8gGJDEIViLzkPDw=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\nexport default NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx"],"names":["React","useState","useEffect","Link","useHistory","projectsAPI","fileAPI","imageAPI","ViewData","NewProject","currentUser","setupStage","setSetupStage","dataStage","setDataStage","title","setTitle","description","setDescription","visibility","setVisibility","data","setData","displayData","setDisplayData","importMethod","setImportMethod","imageFile","setImageFile","imageName","setImageName","projectID","setProjectID","projects","setProjects","loaded","setLoaded","history","fetchData","get","map","project","previous","err","undefined","name","file","reader","FileReader","onload","e","target","result","readAsText","next","includes","changeStage","cancel","goBack","create","dataUploaded","formImage","FormData","append","imageResponse","post","creator","_id","experiments","picture","upvotes","formData","push","value","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link, useHistory} from \"react-router-dom\"\nimport projectsAPI from '../API/projects'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\n\nconst NewProject = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [dataStage, setDataStage] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [data, setData] = useState();\n    const [displayData, setDisplayData] = useState();\n    const [importMethod, setImportMethod] = useState(\"\")\n    const [imageFile, setImageFile] = useState();\n    const [imageName, setImageName] = useState(\"\");\n    const [projectID, setProjectID] = useState(\"\")\n    const [projects, setProjects] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectsAPI.get(\"/\");\n\n                projects.data.data.map((project) => {\n                    setProjects(previous => [...previous, project.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (data !== undefined) {\n            data.name = \"asdasd\"\n            const file = data;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDisplayData(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [data])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n            setSetupStage(false)\n            setDataStage(true)\n        }\n    }\n\n    const changeStage = () => {\n        setSetupStage(true)\n        setDataStage(false)\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const create = async () => {\n        try {\n            let dataUploaded = false\n            \n            if (data === undefined) {\n                dataUploaded = false\n            } else {\n                dataUploaded = true\n            }\n\n            if (imageFile) {\n                const formImage = new FormData();\n                formImage.append('image', imageFile);\n    \n                try {\n                    const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                    setImageName(imageResponse.data.data)\n                } catch (err) {}\n            }\n\n            const project = await projectsAPI.post(\"/\", {\n                title: title,\n                data: dataUploaded,\n                creator: currentUser._id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                visibility: visibility\n            });\n            \n            setProjectID(project.data.data)\n        } catch (err) {}\n\n        if (!data === undefined) {\n            const formData = new FormData();\n\n            formData.append('data', data);\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n\n        }\n        \n        history.push(`/project/${projectID}`)\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-project\">\n                    <div className=\"sidebar\">\n                        <h1>New Project</h1> \n                        <div className=\"new-project-header\">\n                            <p className=\"new-project-title\">{title}</p> \n                        </div>\n                        <button className={`${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {changeStage()}}>Setup</button>\n                        <button className={`${\"sidebar-stage\"} ${dataStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={dataStage || setupStage}>Data</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-project-setup\">\n                            <div className=\"new-project-setup-information\">\n                                <input className=\"new-project-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-project-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onClick={() => {setVisibility(previous => !previous)}}\n                                            value={visibility} />\n                                </div>\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImageFile(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-project-nav\">   \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { dataStage &&\n                        <>\n                            <div className=\"new-project-import\">\n                                <div className=\"new-project-import-options\">\n                                    <p>Import Data</p>\n                                    <button onClick={() => {setImportMethod(\"existing\")}}>Existing Project</button>\n                                    <button onClick={() => {setImportMethod(\"file\")}}>Upload File</button>\n                                </div>\n                                <div className=\"new-project-import-method\">\n                                {importMethod !== \"\" &&\n                                    <>\n                                        {importMethod === \"file\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\" \n                                                    onChange={e => {setData(e.target.files[0])}} />\n                                        :\n                                            <input className=\"new-project-import-projectid\"\n                                                    placeholder=\"Project ID\"\n                                                    onChange={e => {setProjectID(e.target.value)}}\n                                                    value={projectID} />\n                                        }\n                                    </>\n                                }\n                                </div>\n                                {data !== undefined && displayData !== undefined &&\n                                    <div className=\"new-project-data\">\n                                        <p className=\"new-project-filename\">File: {data.name}</p>\n                                        <div className=\"new-project-data-table\">\n                                            <ViewData displayData={displayData} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {create()}}>Create</button>\n                            </div>\n                        </>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewProject\n"]},"metadata":{},"sourceType":"module"}