{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport projectsAPI from '../API/projects';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewProject = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [dataStage, setDataStage] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [data, setData] = useState();\n  const [displayData, setDisplayData] = useState();\n  const [importMethod, setImportMethod] = useState(\"\");\n  const [imageFile, setImageFile] = useState();\n  const [imageName, setImageName] = useState(\"default.png\");\n  const [projectID, setProjectID] = useState(\"\");\n  const [projects, setProjects] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projects = await projectsAPI.get(\"/\");\n        projects.data.data.map(project => {\n          setProjects(previous => [...previous, project.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data !== undefined) {\n      const file = data;\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setDisplayData(e.target.result);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [data]);\n\n  const next = () => {\n    if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n      setSetupStage(false);\n      setDataStage(true);\n    }\n  };\n\n  const changeStage = () => {\n    setSetupStage(false);\n    setDataStage(true);\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const create = async () => {\n    if (imageFile) {\n      const formImage = new FormData();\n      formImage.append('image', imageFile);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        setImageName(imageResponse.data.data);\n      } catch (err) {}\n    }\n\n    try {\n      let dataUploaded = false;\n\n      if (data === undefined) {\n        dataUploaded = false;\n      } else {\n        dataUploaded = true;\n      }\n\n      const newProject = await projectsAPI.post(\"/\", {\n        title: title,\n        data: dataUploaded,\n        creator: currentUser.id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: 0,\n        visibility: visibility\n      });\n\n      if (data !== undefined) {\n        const formData = new FormData();\n        formData.append('data', data);\n        formData.append('id', newProject.data.data);\n\n        try {\n          await fileAPI.post(\"/upload\", formData);\n        } catch (err) {}\n      }\n\n      history.push(`/project/${newProject.data.data}`);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-project-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            changeStage();\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"sidebar-stage\"} ${dataStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`,\n          disabled: dataStage || setupStage,\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-project-setup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-setup-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-project-title\",\n            placeholder: \"Title\",\n            onChange: e => {\n              setTitle(e.target.value);\n            },\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"new-project-description\",\n            placeholder: \"Description\",\n            onChange: e => {\n              setDescription(e.target.value);\n            },\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: () => {\n                setVisibility(previous => !previous);\n              },\n              value: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-setup-visibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"new-project-setup-visibility-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImageFile(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              next();\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), dataStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-import\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Import Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"existing\");\n              },\n              children: \"Existing Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setImportMethod(\"file\");\n              },\n              children: \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-import-method\",\n            children: importMethod !== \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: importMethod === \"file\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                onChange: e => {\n                  setData(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-project-import-projectid\",\n                placeholder: \"Project ID\",\n                onChange: e => {\n                  setProjectID(e.target.value);\n                },\n                value: projectID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), data !== undefined && displayData !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-project-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"new-project-filename\",\n              children: [\"File: \", data.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-project-data-table\",\n              children: /*#__PURE__*/_jsxDEV(ViewData, {\n                displayData: displayData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-project-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-cancel\",\n            onClick: () => {\n              cancel();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-project-next\",\n            onClick: () => {\n              create();\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewProject, \"LgugtYD/pDomoesljcjEHyBOqgw=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\nexport default NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Project.jsx"],"names":["React","useState","useEffect","useHistory","projectsAPI","fileAPI","imageAPI","ViewData","NewProject","currentUser","setupStage","setSetupStage","dataStage","setDataStage","title","setTitle","description","setDescription","visibility","setVisibility","data","setData","displayData","setDisplayData","importMethod","setImportMethod","imageFile","setImageFile","imageName","setImageName","projectID","setProjectID","projects","setProjects","loaded","setLoaded","history","fetchData","get","map","project","previous","err","undefined","file","reader","FileReader","onload","e","target","result","readAsText","next","includes","changeStage","cancel","goBack","create","formImage","FormData","append","imageResponse","post","dataUploaded","newProject","creator","id","experiments","picture","upvotes","formData","push","value","files","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport projectsAPI from '../API/projects'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\n\nconst NewProject = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [dataStage, setDataStage] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [data, setData] = useState();\n    const [displayData, setDisplayData] = useState();\n    const [importMethod, setImportMethod] = useState(\"\")\n    const [imageFile, setImageFile] = useState();\n    const [imageName, setImageName] = useState(\"default.png\");\n    const [projectID, setProjectID] = useState(\"\")\n    const [projects, setProjects] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const projects = await projectsAPI.get(\"/\");\n\n                projects.data.data.map((project) => {\n                    setProjects(previous => [...previous, project.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (data !== undefined) {\n            const file = data;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDisplayData(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [data])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\") && !projects.includes(title)) {\n            setSetupStage(false)\n            setDataStage(true)\n        }\n    }\n\n    const changeStage = () => {\n        setSetupStage(false)\n        setDataStage(true)\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const create = async () => {\n        if (imageFile) {\n            const formImage = new FormData();\n            formImage.append('image', imageFile);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                setImageName(imageResponse.data.data)\n            } catch (err) {}\n        }\n\n        try {\n            let dataUploaded = false\n            \n            if (data === undefined) {\n                dataUploaded = false\n            } else {\n                dataUploaded = true\n            }\n\n            const newProject = await projectsAPI.post(\"/\", {\n                title: title,\n                data: dataUploaded,\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                visibility: visibility\n            });\n            \n            if (data !== undefined) {\n                const formData = new FormData();\n    \n                formData.append('data', data);\n                formData.append('id', newProject.data.data)\n    \n                try {\n                    await fileAPI.post(\"/upload\", formData);\n                } catch (err) {}\n            }\n\n            history.push(`/project/${newProject.data.data}`)\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"new-project\">\n                    <div className=\"sidebar\">\n                        <h1>New Project</h1> \n                        <div className=\"new-project-header\">\n                            <p className=\"new-project-title\">{title}</p> \n                        </div>\n                        <button className={`${\"sidebar-stage\"} ${setupStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {changeStage()}}>Setup</button>\n                        <button className={`${\"sidebar-stage\"} ${dataStage ? \"sidebar-stage-selected\" : \"sidebar-stage-unselected\"}`}\n                                disabled={dataStage || setupStage}>Data</button>\n                    </div>\n                    { setupStage &&\n                        <div className=\"new-project-setup\">\n                            <div className=\"new-project-setup-information\">\n                                <input className=\"new-project-title\"\n                                        placeholder=\"Title\"\n                                        onChange={e => {setTitle(e.target.value)}}\n                                        value={title} />\n                                <textarea className=\"new-project-description\"\n                                            placeholder=\"Description\"\n                                            onChange={e => {setDescription(e.target.value)}}\n                                            value={description} />\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onClick={() => {setVisibility(previous => !previous)}}\n                                            value={visibility} />\n                                </div>\n                                <div className=\"new-project-setup-visibility\">\n                                    <label className=\"new-project-setup-visibility-label\">Picture</label>\n                                    <input type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImageFile(e.target.files[0])}} />\n                                </div>\n                            </div>\n                            <div className=\"new-project-nav\">   \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {next()}}>Next</button>\n                            </div>\n                        </div>\n                    }\n                    { dataStage &&\n                        <>\n                            <div className=\"new-project-import\">\n                                <div className=\"new-project-import-options\">\n                                    <p>Import Data</p>\n                                    <button onClick={() => {setImportMethod(\"existing\")}}>Existing Project</button>\n                                    <button onClick={() => {setImportMethod(\"file\")}}>Upload File</button>\n                                </div>\n                                <div className=\"new-project-import-method\">\n                                {importMethod !== \"\" &&\n                                    <>\n                                        {importMethod === \"file\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\" \n                                                    onChange={e => {setData(e.target.files[0])}} />\n                                        :\n                                            <input className=\"new-project-import-projectid\"\n                                                    placeholder=\"Project ID\"\n                                                    onChange={e => {setProjectID(e.target.value)}}\n                                                    value={projectID} />\n                                        }\n                                    </>\n                                }\n                                </div>\n                                {data !== undefined && displayData !== undefined &&\n                                    <div className=\"new-project-data\">\n                                        <p className=\"new-project-filename\">File: {data.name}</p>\n                                        <div className=\"new-project-data-table\">\n                                            <ViewData displayData={displayData} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"new-project-nav\">  \n                                <button className=\"new-project-cancel\"\n                                        onClick={() => {cancel()}}>Cancel</button>\n                                <button className=\"new-project-next\"\n                                        onClick={() => {create()}}>Create</button>\n                            </div>\n                        </>\n                    }\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewProject\n"]},"metadata":{},"sourceType":"module"}