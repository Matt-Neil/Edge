{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openItemsContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OpenItemsContext = /*#__PURE__*/createContext();\n\nconst OpenItemsContextProvider = props => {\n  _s();\n\n  const [openWorkspaces, setOpenItems] = useState([]);\n  useEffect(() => {\n    const localData = JSON.parse(localStorage.getItem('openWorkspaces'));\n\n    if (localData !== null) {\n      setOpenItems(localData);\n    }\n  }, []);\n\n  const addOpenItems = (id, title, type) => {\n    if (openWorkspaces.filter(workspace => workspace.id.match(id)).length === 0) {\n      setOpenItems([{\n        id: id,\n        title: title,\n        type: type\n      }, ...openWorkspaces]);\n    }\n  };\n\n  const removeOpenItems = id => {\n    setOpenItems(openWorkspaces.filter(workspace => workspace.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('openWorkspaces', JSON.stringify(openWorkspaces));\n  }, [openWorkspaces]);\n  return /*#__PURE__*/_jsxDEV(OpenItemsContext.Provider, {\n    value: {\n      openWorkspaces,\n      addOpenItems,\n      removeOpenItems\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OpenItemsContextProvider, \"M/wjCz5IKtEj9eiYdiiprkAYrfw=\");\n\n_c = OpenItemsContextProvider;\nexport default OpenItemsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenItemsContextProvider\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openItemsContext.js"],"names":["React","createContext","useEffect","useState","OpenItemsContext","OpenItemsContextProvider","props","openWorkspaces","setOpenItems","localData","JSON","parse","localStorage","getItem","addOpenItems","id","title","type","filter","workspace","match","length","removeOpenItems","setItem","stringify","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC;;AAEP,MAAMI,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,cAAD,EAAiBC,YAAjB,IAAiCL,QAAQ,CAAC,EAAD,CAA/C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAlB;;AAEA,QAAIJ,SAAS,KAAK,IAAlB,EAAwB;AACpBD,MAAAA,YAAY,CAACC,SAAD,CAAZ;AACH;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,YAAY,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,IAAZ,KAAqB;AACtC,QAAIV,cAAc,CAACW,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACJ,EAAV,CAAaK,KAAb,CAAmBL,EAAnB,CAAnC,EAA2DM,MAA3D,KAAsE,CAA1E,EAA6E;AACzEb,MAAAA,YAAY,CAAC,CAAC;AACVO,QAAAA,EAAE,EAAEA,EADM;AAEVC,QAAAA,KAAK,EAAEA,KAFG;AAGVC,QAAAA,IAAI,EAAEA;AAHI,OAAD,EAIV,GAAGV,cAJO,CAAD,CAAZ;AAKH;AACJ,GARD;;AAUA,QAAMe,eAAe,GAAIP,EAAD,IAAQ;AAC5BP,IAAAA,YAAY,CAACD,cAAc,CAACW,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACJ,EAAV,KAAiBA,EAApD,CAAD,CAAZ;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACW,OAAb,CAAqB,gBAArB,EAAuCb,IAAI,CAACc,SAAL,CAAejB,cAAf,CAAvC;AACH,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACA,MAAAA,cAAD;AAAiBO,MAAAA,YAAjB;AAA+BQ,MAAAA;AAA/B,KAAlC;AAAA,cACKhB,KAAK,CAACmB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMpB,wB;;KAAAA,wB;AAoCN,eAAeA,wBAAf","sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\n\nexport const OpenItemsContext = createContext()\n\nconst OpenItemsContextProvider = (props) => {\n    const [openWorkspaces, setOpenItems] = useState([]);\n\n    useEffect(() => {\n        const localData = JSON.parse(localStorage.getItem('openWorkspaces'));\n        \n        if (localData !== null) {\n            setOpenItems(localData)\n        }\n    }, [])\n\n    const addOpenItems = (id, title, type) => {\n        if (openWorkspaces.filter(workspace => workspace.id.match(id)).length === 0) {\n            setOpenItems([{\n                id: id,\n                title: title,\n                type: type\n            }, ...openWorkspaces]);\n        }\n    }\n\n    const removeOpenItems = (id) => {\n        setOpenItems(openWorkspaces.filter(workspace => workspace.id !== id))\n    }\n\n    useEffect(() => {\n        localStorage.setItem('openWorkspaces', JSON.stringify(openWorkspaces));\n    }, [openWorkspaces])\n\n    return (\n        <OpenItemsContext.Provider value={{openWorkspaces, addOpenItems, removeOpenItems}}>\n            {props.children}\n        </OpenItemsContext.Provider>\n    )\n}\n\nexport default OpenItemsContextProvider"]},"metadata":{},"sourceType":"module"}