{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Data.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewData = _ref => {\n  _s();\n\n  let {\n    dataTable,\n    start,\n    end\n  } = _ref;\n  const [header, setHeader] = useState([]);\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    setHeader([]);\n    setData([]);\n    const tempHeader = dataTable.slice(0, dataTable.indexOf('\\n')).split(',');\n    tempHeader.unshift(\"Row\");\n    const tempData = dataTable.slice(dataTable.indexOf('\\n') + 1).split('\\n');\n    setHeader(tempHeader);\n\n    for (let i = start; i < end; i++) {\n      let row = `${i},${tempData[i]}`;\n      setData(previous => [...previous, row.split(',')]);\n    } // tempData.map((row, i) => {\n    //     row = `${i},${row}`\n    //     setData(previous => [...previous, row.split(',')])\n    // })\n\n\n    setLoaded(true);\n  }, [dataTable]);\n\n  const displayHeader = () => {\n    return header.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this);\n    });\n  };\n\n  const displayBody = () => {\n    return data.map((row, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((item, j) => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 36\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"item-data-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: displayHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), displayBody()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(ViewData, \"oXqc5m6Js0CxxvMruciljpVFnm8=\");\n\n_c = ViewData;\nexport default ViewData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewData\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/View-Data.jsx"],"names":["React","useState","useEffect","ViewData","dataTable","start","end","header","setHeader","data","setData","loaded","setLoaded","tempHeader","slice","indexOf","split","unshift","tempData","i","row","previous","displayHeader","map","item","displayBody","j"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,MAAMC,QAAQ,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAA4B;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AAEA,UAAMG,UAAU,GAAGT,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmBV,SAAS,CAACW,OAAV,CAAkB,IAAlB,CAAnB,EAA4CC,KAA5C,CAAkD,GAAlD,CAAnB;AACAH,IAAAA,UAAU,CAACI,OAAX,CAAmB,KAAnB;AACA,UAAMC,QAAQ,GAAGd,SAAS,CAACU,KAAV,CAAgBV,SAAS,CAACW,OAAV,CAAkB,IAAlB,IAAwB,CAAxC,EAA2CC,KAA3C,CAAiD,IAAjD,CAAjB;AACAR,IAAAA,SAAS,CAACK,UAAD,CAAT;;AAEA,SAAK,IAAIM,CAAC,GAACd,KAAX,EAAkBc,CAAC,GAACb,GAApB,EAAyBa,CAAC,EAA1B,EAA8B;AAC1B,UAAIC,GAAG,GAAI,GAAED,CAAE,IAAGD,QAAQ,CAACC,CAAD,CAAI,EAA9B;AACAT,MAAAA,OAAO,CAACW,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcD,GAAG,CAACJ,KAAJ,CAAU,GAAV,CAAd,CAAb,CAAP;AACH,KAZW,CAaZ;AACA;AACA;AACA;;;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAlBQ,EAkBN,CAACR,SAAD,CAlBM,CAAT;;AAoBA,QAAMkB,aAAa,GAAG,MAAM;AACxB,WACIf,MAAM,CAACgB,GAAP,CAAW,CAACC,IAAD,EAAOL,CAAP,KAAa;AACpB,0BAAO;AAAA,kBAAaK;AAAb,SAASL,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,CADJ;AAKH,GAND;;AAQA,QAAMM,WAAW,GAAG,MAAM;AACtB,WACIhB,IAAI,CAACc,GAAL,CAAS,CAACH,GAAD,EAAMD,CAAN,KAAY;AACjB,0BACI;AAAA,kBACKC,GAAG,CAACG,GAAJ,CAAQ,CAACC,IAAD,EAAOE,CAAP,KAAa;AAClB,8BAAO;AAAA,sBAAaF;AAAb,aAASE,CAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL,SAASP,CAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD,CADJ;AAWH,GAZD;;AAcA,sBACI;AAAA,cACKR,MAAM,gBACH;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,6BACI;AAAA,gCACI;AAAA,oBACKW,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKG,WAAW,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,gBAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR,mBADJ;AAgBH,CA/DD;;GAAMtB,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst ViewData = ({dataTable, start, end}) => {\n    const [header, setHeader] = useState([])\n    const [data, setData] = useState([])\n    const [loaded, setLoaded] = useState(false)\n\n    useEffect(() => {\n        setHeader([])\n        setData([])\n        \n        const tempHeader = dataTable.slice(0, dataTable.indexOf('\\n')).split(',')\n        tempHeader.unshift(\"Row\")\n        const tempData = dataTable.slice(dataTable.indexOf('\\n')+1).split('\\n');\n        setHeader(tempHeader)\n\n        for (let i=start; i<end; i++) {\n            let row = `${i},${tempData[i]}`\n            setData(previous => [...previous, row.split(',')])\n        }\n        // tempData.map((row, i) => {\n        //     row = `${i},${row}`\n        //     setData(previous => [...previous, row.split(',')])\n        // })\n        setLoaded(true)\n    }, [dataTable])\n\n    const displayHeader = () => {\n        return (\n            header.map((item, i) => {\n                return <th key={i}>{item}</th>\n            })\n        )\n    }\n    \n    const displayBody = () => {\n        return (\n            data.map((row, i) => {\n                return (\n                    <tr key={i}>\n                        {row.map((item, j) => {\n                            return <td key={j}>{item}</td>\n                        })}\n                    </tr>\n                )\n            })\n        )\n    }\n\n    return (\n        <>\n            {loaded ?\n                <table className=\"item-data-table\">\n                    <tbody>\n                        <tr>\n                            {displayHeader()}\n                        </tr>\n                        {displayBody()}\n                    </tbody>\n                </table>\n            :\n                <p>Loading...</p>\n            }\n        </>\n    )\n}\n\nexport default ViewData\n"]},"metadata":{},"sourceType":"module"}