{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport workspacesAPI from '../API/workspaces';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Filter } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = _ref => {\n  _s();\n\n  let {\n    searchPhrase,\n    setSearchPhrase,\n    currentUser\n  } = _ref;\n  const [filter, setFilter] = useState(\"workspaces\");\n  const [workspaces, setWorkspaces] = useState();\n  const [datasets, setDatasets] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n  const urlPhrase = useParams().id;\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchPhrase === null) {\n        if (urlPhrase) {\n          const workspaces = await workspacesAPI.get(`/search?phrase=${urlPhrase}`);\n\n          if (workspaces.data.data.length < 21) {\n            setFinishedWorkspaces(true);\n          }\n\n          setWorkspaces(workspaces.data.data);\n          setLoaded(true);\n        } else {\n          history.push(\"/\");\n        }\n      } else {\n        const workspaces = await workspacesAPI.get(`/search?phrase=${searchPhrase}`);\n\n        if (workspaces.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        setWorkspaces(workspaces.data.data);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDataWorkspaces = async id => {\n    if (!finishedWorkspaces) {\n      try {\n        const fetchedWorkspaces = await workspacesAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n\n        if (fetchedWorkspaces.data.data.length < 21) {\n          setFinishedWorkspaces(true);\n        }\n\n        setWorkspaces(workspaces => [...workspaces, ...fetchedWorkspaces.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (workspaces.length !== 0) {\n      {\n        fetchDataWorkspaces(workspaces[workspaces.length - 1]._id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-workspaces-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"view-workspaces-search-input\",\n            placeholder: \"Search\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: searchFunctionKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"view-workspaces-search-icon\",\n            onClick: e => searchFunctionButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-top\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${workspaces.length} Workspaces`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/List.png\",\n            className: \"view-workspaces-row-icon\",\n            onClick: () => {\n              setRowFormat(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/Grid.png\",\n            className: \"view-workspaces-grid-icon\",\n            onClick: () => {\n              setRowFormat(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-list\",\n          children: workspaces.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: workspaces.map((workspace, i) => {\n              return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                workspace: workspace,\n                creator: workspace.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 60\n              }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                workspace: workspace,\n                creator: workspace.creatorName.name,\n                currentUserID: currentUser.id,\n                created: false\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 192\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), workspaces.length >= 0 && finishedWorkspaces ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: filter === \"workspaces\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"end-workspaces\",\n            children: \"No more workspaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"end-workspaces\",\n            children: \"No more datasets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loadWorkspaces\",\n          onClick: () => {\n            loadMore();\n          },\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"qfRgKwKlZkH+GwAGkbpZyMSvDFM=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx"],"names":["React","useState","useEffect","useHistory","Link","useParams","ItemRowCard","ItemSquareCard","workspacesAPI","SearchIcon","Filter","AccountWorkspaces","searchPhrase","setSearchPhrase","currentUser","filter","setFilter","workspaces","setWorkspaces","datasets","setDatasets","loaded","setLoaded","rowFormat","setRowFormat","input","setInput","finishedWorkspaces","setFinishedWorkspaces","urlPhrase","id","history","fetchData","get","data","length","push","searchFunctionKey","e","key","searchFunctionButton","fetchDataWorkspaces","fetchedWorkspaces","err","loadMore","_id","target","value","map","workspace","i","creatorName","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport workspacesAPI from '../API/workspaces'\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Filter } from '@material-ui/icons'\n\nconst AccountWorkspaces = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [filter, setFilter] = useState(\"workspaces\")\n    const [workspaces, setWorkspaces] = useState();\n    const [datasets, setDatasets] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedWorkspaces, setFinishedWorkspaces] = useState(false);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (searchPhrase === null) {\n                if (urlPhrase) {\n                    const workspaces = await workspacesAPI.get(`/search?phrase=${urlPhrase}`);\n\n                    if (workspaces.data.data.length < 21) {\n                        setFinishedWorkspaces(true)\n                    }\n\n                    setWorkspaces(workspaces.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/\");\n                }\n            } else {\n                const workspaces = await workspacesAPI.get(`/search?phrase=${searchPhrase}`);\n\n                if (workspaces.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                setWorkspaces(workspaces.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataWorkspaces = async (id) => {\n        if (!finishedWorkspaces) {\n            try {\n                const fetchedWorkspaces = await workspacesAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n    \n                if (fetchedWorkspaces.data.data.length < 21) {\n                    setFinishedWorkspaces(true)\n                }\n\n                setWorkspaces(workspaces => [...workspaces, ...fetchedWorkspaces.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (workspaces.length !== 0) {\n            {fetchDataWorkspaces(workspaces[workspaces.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-workspaces-body\">\n                        <div className=\"view-workspaces-search\">\n                            <input className=\"view-workspaces-search-input\"\n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"view-workspaces-search-icon\" onClick={e => searchFunctionButton()} />\n                        </div>\n                        <div className=\"view-workspaces-top\">\n                            <h1>Search Results</h1>\n                        </div>\n                        <div className=\"view-workspaces-middle\">\n                            <p>{`${workspaces.length} Workspaces`}</p>\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-workspaces-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-workspaces-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-workspaces-list\">\n                            {workspaces.length > 0 &&\n                                <>\n                                    {workspaces.map((workspace, i) => {\n                                        return rowFormat ? <ItemRowCard workspace={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={false} key={i} /> : <ItemSquareCard workspace={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={false} key={i} />\n                                    })}\n                                </>\n                            }\n                        </div>\n                        {workspaces.length >= 0 && finishedWorkspaces ?\n                            <>\n                                {filter === \"workspaces\" ?\n                                    <p className=\"end-workspaces\">No more workspaces</p>\n                                :\n                                    <p className=\"end-workspaces\">No more datasets</p>\n                                }\n                            </>\n                            :\n                            <p className=\"loadWorkspaces\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}