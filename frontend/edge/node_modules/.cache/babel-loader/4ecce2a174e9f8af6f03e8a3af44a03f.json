{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Experiment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"width-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Experiment;\nexport default Experiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experiment\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx"],"names":["React","Experiment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAtBD;;KAAMA,U;AAwBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\n\nconst Experiment = () => {\n    return (\n        <div className=\"width-body\">  \n            <div className=\"item-body\">\n                <div className=\"item-top\">\n                    <div className=\"item-heading\">\n                        {/* {experiment.self ? \n                            <input className=\"item-title-input\"\n                                    placeholder=\"Title\" \n                                    value={title}\n                                    onChange={e => {\n                                        setTitle(e.target.value)\n                                        {!changedSettings && setChangedSettings(true)}\n                                    }} /> \n                        : \n                            <h1>{experiment.title}</h1>\n                        } */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Experiment\n"]},"metadata":{},"sourceType":"module"}