{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Workspaces.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport WorkspaceRowCard from '../Components/Workspace-Row-Card';\nimport WorkspaceSquareCard from '../Components/Workspace-Square-Card';\nimport usersAPI from '../API/users';\nimport workspacesAPI from '../API/workspaces';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = _ref => {\n  _s();\n\n  let {\n    type,\n    currentUser,\n    setSearchPhrase\n  } = _ref;\n  const [workspaces, setWorkspaces] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let workspaces;\n\n        if (type === \"created\") {\n          workspaces = await usersAPI.get(`/created?date=${new Date().toISOString()}`);\n        } else if (type === \"bookmark\") {\n          workspaces = await usersAPI.get(`/bookmarked?date=${new Date().toISOString()}`);\n        } else if (type === \"all\") {\n          workspaces = await workspacesAPI.get(`/all?date=${new Date().toISOString()}`);\n        } else {\n          workspaces = await workspacesAPI.get(\"/discover\");\n        }\n\n        setWorkspaces(workspaces.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDiscover = async () => {\n    const refreshedWorkspaces = await workspacesAPI.get(\"/discover\");\n    setWorkspaces(refreshedWorkspaces.data.data);\n  };\n\n  const displayHeading = () => {\n    if (type === \"created\") {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Workspaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    } else if (type === \"bookmark\") {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bookmarked Workspaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this);\n    } else if (type === \"all\") {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Workspaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Discover Workspaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-workspaces-body\",\n        children: [(type === \"discover\" || type === \"all\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"view-workspaces-search-input\",\n            placeholder: \"Search\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: searchFunctionKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"view-workspaces-search-icon\",\n            onClick: e => searchFunctionButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-top\",\n          children: [displayHeading(), type === \"created\" && /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/new-workspace\",\n            className: \"blue-button\",\n            children: \"New Workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 52\n          }, this), type === \"discover\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blue-button\",\n            onClick: () => {\n              fetchDiscover();\n            },\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${workspaces.length} Workspaces`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/List.png\",\n            className: \"view-workspaces-row-icon\",\n            onClick: () => {\n              setRowFormat(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/Grid.png\",\n            className: \"view-workspaces-grid-icon\",\n            onClick: () => {\n              setRowFormat(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-workspaces-list\",\n          children: workspaces.map((workspace, i) => {\n            if (type === \"created\") return rowFormat ? /*#__PURE__*/_jsxDEV(WorkspaceRowCard, {\n              workspace: workspace,\n              created: true\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 76\n            }, this) : /*#__PURE__*/_jsxDEV(WorkspaceSquareCard, {\n              workspace: workspace,\n              created: true\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 144\n            }, this);\n            return rowFormat ? /*#__PURE__*/_jsxDEV(WorkspaceRowCard, {\n              workspace: workspace,\n              creator: workspace.creatorName.name,\n              currentUserID: currentUser.id,\n              created: type === \"created\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 52\n            }, this) : /*#__PURE__*/_jsxDEV(WorkspaceSquareCard, {\n              workspace: workspace,\n              creator: workspace.creatorName.name,\n              currentUserID: currentUser.id,\n              created: type === \"created\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 202\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"BhVZblPsSkt4hkynHHB4MsxlP0Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Workspaces.jsx"],"names":["React","useState","useEffect","useHistory","Link","WorkspaceRowCard","WorkspaceSquareCard","usersAPI","workspacesAPI","SearchIcon","AccountWorkspaces","type","currentUser","setSearchPhrase","workspaces","setWorkspaces","loaded","setLoaded","rowFormat","setRowFormat","input","setInput","history","fetchData","get","Date","toISOString","data","err","searchFunctionKey","e","key","push","searchFunctionButton","fetchDiscover","refreshedWorkspaces","displayHeading","target","value","length","map","workspace","i","creatorName","name","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link} from \"react-router-dom\"\nimport WorkspaceRowCard from '../Components/Workspace-Row-Card'\nimport WorkspaceSquareCard from '../Components/Workspace-Square-Card'\nimport usersAPI from '../API/users'\nimport workspacesAPI from '../API/workspaces'\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst AccountWorkspaces = ({type, currentUser, setSearchPhrase}) => {\n    const [workspaces, setWorkspaces] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let workspaces;\n\n                if (type === \"created\") {\n                    workspaces = await usersAPI.get(`/created?date=${new Date().toISOString()}`);\n                } else if (type === \"bookmark\") {\n                    workspaces = await usersAPI.get(`/bookmarked?date=${new Date().toISOString()}`);\n                } else if (type === \"all\") {\n                    workspaces = await workspacesAPI.get(`/all?date=${new Date().toISOString()}`);\n                } else {\n                    workspaces = await workspacesAPI.get(\"/discover\");\n                }\n\n                setWorkspaces(workspaces.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDiscover = async () => {\n        const refreshedWorkspaces = await workspacesAPI.get(\"/discover\");\n\n        setWorkspaces(refreshedWorkspaces.data.data);\n    }\n\n    const displayHeading = () => {\n        if (type === \"created\") {\n            return <h1>My Workspaces</h1>\n        } else if (type === \"bookmark\") {\n            return <h1>Bookmarked Workspaces</h1>\n        } else if (type === \"all\") {\n            return <h1>All Workspaces</h1>\n        } else {\n            return <h1>Discover Workspaces</h1>\n        }\n    }\n    \n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-workspaces-body\">\n                        {(type === \"discover\" || type === \"all\") &&\n                            <div className=\"view-workspaces-search\">\n                                <input className=\"view-workspaces-search-input\"\n                                        placeholder=\"Search\"\n                                        value={input}\n                                        onChange={e => setInput(e.target.value)}\n                                        onKeyPress={searchFunctionKey} />\n                                <SearchIcon className=\"view-workspaces-search-icon\" onClick={e => searchFunctionButton()} />\n                            </div>\n                        }\n                        <div className=\"view-workspaces-top\">\n                            {displayHeading()}\n                            {type === \"created\" && <Link to=\"/new-workspace\" className=\"blue-button\">New Workspace</Link>}\n                            {type === \"discover\" && <button className=\"blue-button\" onClick={() => {fetchDiscover()}}>Refresh</button>}\n                        </div>\n                        <div className=\"view-workspaces-middle\">\n                            <p>{`${workspaces.length} Workspaces`}</p>\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-workspaces-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-workspaces-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-workspaces-list\">\n                            {workspaces.map((workspace, i) => {\n                                if (type === \"created\") return rowFormat ? <WorkspaceRowCard workspace={workspace} created={true} key={i} /> : <WorkspaceSquareCard workspace={workspace} created={true} key={i} />\n\n                                return rowFormat ? <WorkspaceRowCard workspace={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} /> : <WorkspaceSquareCard workspace={workspace} creator={workspace.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} />\n                            })}\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}