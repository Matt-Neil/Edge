{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport \"./Styles/app.css\";\nimport { CurrentUserContext } from './Contexts/currentUserContext';\nimport { OpenItemsContext } from './Contexts/openItemsContext';\nimport ViewItems from \"./Pages/View-Items\";\nimport Home from \"./Pages/Home\";\nimport Account from \"./Pages/Account\";\nimport Workspace from \"./Pages/Workspace\";\nimport Dataset from \"./Pages/Dataset\";\nimport Search from \"./Pages/Search\";\nimport SignIn from \"./Pages/Sign-In\";\nimport Header from \"./Components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Local state containing the entered search phrase\n  const [searchPhrase, setSearchPhrase] = useState(null); // Gaining access to current user information from the context provider\n\n  const {\n    currentUser\n  } = useContext(CurrentUserContext); // Gaining access to the open items state from the context provider\n\n  const {\n    openItems\n  } = useContext(OpenItemsContext); // Redirects page to sign-in page route if no user is signed-in or to the home page if there is\n\n  const redirectPage = () => {\n    if (currentUser.loaded) {\n      if (currentUser.empty) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: `/home`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }; // Renders sign-in page if no user is signed-in or to the home page if there is\n\n\n  const redirectSignin = () => {\n    if (currentUser.loaded) {\n      if (currentUser.empty) {\n        return /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: `/home`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: redirectPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/sign-in\",\n        children: redirectSignin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), currentUser.loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: currentUser.empty ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this) :\n        /*#__PURE__*/\n        // Else the following routes available to signed in users are defined below\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whole-body\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              openItems: openItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/home\",\n              children: /*#__PURE__*/_jsxDEV(Home, {\n                setSearchPhrase: setSearchPhrase,\n                currentUser: currentUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/created-workspaces\",\n              children: /*#__PURE__*/_jsxDEV(ViewItems, {\n                type: \"created-workspaces\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/created-datasets\",\n              children: /*#__PURE__*/_jsxDEV(ViewItems, {\n                type: \"created-datasets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/bookmarked\",\n              children: /*#__PURE__*/_jsxDEV(ViewItems, {\n                type: \"bookmarks\",\n                currentUser: currentUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/public-workspaces\",\n              children: /*#__PURE__*/_jsxDEV(ViewItems, {\n                type: \"public-workspaces\",\n                currentUser: currentUser,\n                setSearchPhrase: setSearchPhrase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/public-datasets\",\n              children: /*#__PURE__*/_jsxDEV(ViewItems, {\n                type: \"public-datasets\",\n                currentUser: currentUser,\n                setSearchPhrase: setSearchPhrase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/search-results/:id\",\n              render: props => /*#__PURE__*/_jsxDEV(Search, {\n                currentUser: currentUser,\n                searchPhrase: searchPhrase,\n                setSearchPhrase: setSearchPhrase\n              }, props.location.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 90\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/workspace/:id\",\n              render: props => /*#__PURE__*/_jsxDEV(Workspace, {\n                currentUser: currentUser,\n                type: \"view\"\n              }, props.location.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 91\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/dataset/:id\",\n              render: props => /*#__PURE__*/_jsxDEV(Dataset, {\n                currentUser: currentUser,\n                type: \"view\"\n              }, props.location.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 89\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/create-workspace\",\n              render: props => /*#__PURE__*/_jsxDEV(Workspace, {\n                currentUser: currentUser,\n                type: \"create\"\n              }, props.location.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/create-dataset\",\n              render: props => /*#__PURE__*/_jsxDEV(Dataset, {\n                currentUser: currentUser,\n                type: \"create\"\n              }, props.location.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 92\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/account\",\n              children: /*#__PURE__*/_jsxDEV(Account, {\n                setSearchPhrase: setSearchPhrase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"/qIDFiKWIG1kswQSU0Z3bwApipU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/App.js"],"names":["React","useState","useContext","BrowserRouter","Router","Switch","Route","Redirect","CurrentUserContext","OpenItemsContext","ViewItems","Home","Account","Workspace","Dataset","Search","SignIn","Header","App","searchPhrase","setSearchPhrase","currentUser","openItems","redirectPage","loaded","empty","redirectSignin","props","location","key"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport \"./Styles/app.css\";\n\nimport { CurrentUserContext } from './Contexts/currentUserContext';\nimport { OpenItemsContext } from './Contexts/openItemsContext';\nimport ViewItems from \"./Pages/View-Items\"\nimport Home from \"./Pages/Home\"\nimport Account from \"./Pages/Account\"\nimport Workspace from \"./Pages/Workspace\"\nimport Dataset from \"./Pages/Dataset\"\nimport Search from \"./Pages/Search\"\nimport SignIn from \"./Pages/Sign-In\"\nimport Header from \"./Components/Header\"\n\nexport default function App() {\n    // Local state containing the entered search phrase\n    const [searchPhrase, setSearchPhrase] = useState(null);\n    // Gaining access to current user information from the context provider\n    const {currentUser} = useContext(CurrentUserContext);\n    // Gaining access to the open items state from the context provider\n    const {openItems} = useContext(OpenItemsContext);\n\n    // Redirects page to sign-in page route if no user is signed-in or to the home page if there is\n    const redirectPage = () => {\n        if (currentUser.loaded) {\n            if (currentUser.empty) {\n                return <Redirect to={\"/sign-in\"} />\n            } else {\n                return <Redirect to={`/home`} />\n            }\n        }\n    }\n\n    // Renders sign-in page if no user is signed-in or to the home page if there is\n    const redirectSignin = () => {\n        if (currentUser.loaded) {\n            if (currentUser.empty) {\n                return <SignIn />\n            } else {\n                return <Redirect to={`/home`} />\n            }\n        }\n    }\n\n    return (\n        <Router>\n            <Switch>\n                {/* The \"/\" route doesn't exist so if a user navigates to it, they are redirected */}\n                <Route exact path=\"/\">\n                    {redirectPage()}\n                </Route>\n                {/* If a logged in user navigates to the sign in page, they are redirected to the home page */}\n                <Route exact path=\"/sign-in\">\n                    {redirectSignin()}\n                </Route>\n                {/* Checks if a user has been fetched within the context provider */}\n                {currentUser.loaded &&\n                    <>\n                        {/* If no user is currently signed in, the sign in page is rendered */}\n                        {currentUser.empty ?\n                            <Redirect to={\"/sign-in\"} />\n                        :\n                        // Else the following routes available to signed in users are defined below\n                            <>\n                                <div className=\"whole-body\">\n                                        <Header openItems={openItems} />\n                                    <Route exact path=\"/home\">\n                                        <Home setSearchPhrase={setSearchPhrase} \n                                            currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/created-workspaces\">\n                                        <ViewItems type={\"created-workspaces\"} />\n                                    </Route>\n                                    <Route exact path=\"/created-datasets\">\n                                        <ViewItems type={\"created-datasets\"} />\n                                    </Route>\n                                    <Route exact path=\"/bookmarked\">\n                                        <ViewItems type={\"bookmarks\"} currentUser={currentUser} />\n                                    </Route>\n                                    <Route exact path=\"/public-workspaces\">\n                                        <ViewItems type={\"public-workspaces\"} currentUser={currentUser} setSearchPhrase={setSearchPhrase} />\n                                    </Route>\n                                    <Route exact path=\"/public-datasets\">\n                                        <ViewItems type={\"public-datasets\"} currentUser={currentUser} setSearchPhrase={setSearchPhrase} />\n                                    </Route>\n                                    <Route path=\"/search-results/:id\" render={(props) => <Search currentUser={currentUser} searchPhrase={searchPhrase} setSearchPhrase={setSearchPhrase} key={props.location.key} />} />\n                                    <Route exact path=\"/workspace/:id\" render={(props) => <Workspace currentUser={currentUser} type={\"view\"} key={props.location.key} />} />\n                                    <Route exact path=\"/dataset/:id\" render={(props) => <Dataset currentUser={currentUser} type={\"view\"} key={props.location.key} />} />\n                                    <Route exact path=\"/create-workspace\" render={(props) => <Workspace currentUser={currentUser} type={\"create\"} key={props.location.key} />} />\n                                    <Route exact path=\"/create-dataset\" render={(props) => <Dataset currentUser={currentUser} type={\"create\"} key={props.location.key} />} />\n                                    <Route exact path=\"/account\">\n                                        <Account setSearchPhrase={setSearchPhrase} />\n                                    </Route>\n                                </div>\n                            </>\n                        }\n                    </>\n                }\n            </Switch>\n        </Router>\n    );\n}"]},"metadata":{},"sourceType":"module"}