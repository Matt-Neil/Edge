{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport workspacesAPI from '../API/workspaces';\nimport globalAPI from '../API/global';\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [noData, setNoData] = useState();\n  const [dataset, setDataset] = useState();\n  const [workspace, setWorkspace] = useState();\n  const [dataTable, setDataTable] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [changedData, setChangedData] = useState(false);\n  const [changedSettings, setChangedSettings] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [row, setRow] = useState();\n  const [maxRows, setMaxRows] = useState();\n  const [page, setPage] = useState(1);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [picture, setPicture] = useState();\n  const [visibility, setVisibility] = useState();\n  const [comments, setComments] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [section, setSection] = useState(\"data\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const [refreshTable, setRefreshTable] = useState();\n  const {\n    addOpenItems\n  } = useContext(OpenItemsContext);\n  const workspaceID = useParams().id;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspace = await workspacesAPI.get(`/${workspaceID}`);\n        const comments = await globalAPI.get(`/comment/${workspaceID}?type=workspace`);\n\n        if (workspace.data.data.creator === currentUser.id) {\n          addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n        }\n\n        setWorkspace(workspace.data.data);\n        setBookmarked(workspace.data.data.bookmarked);\n        setUpvoted(workspace.data.data.upvoted);\n        setPicture(workspace.data.data.picture);\n        setUpvotes(workspace.data.data.upvotes);\n        setDataset(workspace.data.data.dataset.data);\n        setVisibility(workspace.data.data.visibility);\n        setTitle(workspace.data.data.title);\n        setDescription(workspace.data.data.description);\n        setComments(comments.data.data);\n        fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.data}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n          setExist(true);\n          setNoData(false);\n          setLoaded(true);\n        }).catch(function () {\n          setExist(true);\n          setNoData(true);\n          setLoaded(true);\n        });\n      } catch (err) {\n        setExist(false);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(workspace.updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded]);\n\n  const existingWorkspace = () => {\n    fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n      setDataTable(text);\n      setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n      setDataset(dataID);\n      setRefreshTable(new Date().getTime());\n    });\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await workspacesAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await workspacesAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await workspacesAPI.put(`/visibility/${workspace._id}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const addComment = async e => {\n    e.preventDefault();\n\n    try {\n      await workspacesAPI.put(`/comment/${workspaceID}`, {\n        comment: comment\n      });\n      setComments([{\n        user: {\n          name: currentUser.name\n        },\n        comment: comment\n      }, ...comments]);\n      setComment(\"\");\n    } catch (err) {}\n  };\n\n  const fetchRow = () => {\n    if (!isNaN(row) && row !== \"\") {\n      setStart(row - 1);\n      setEnd(row);\n      setRefreshTable(new Date().getTime());\n    } else {\n      if (start === (page - 1) * 30 && end === page * 30) {\n        setRow(\"\");\n      } else {\n        setStart((page - 1) * 30);\n        setEnd(page * 30);\n        setRefreshTable(new Date().getTime());\n      }\n    }\n  };\n\n  const cancelRow = () => {\n    if (start === (page - 1) * 30 && end === page * 30) {\n      setRow(\"\");\n    } else {\n      setStart((page - 1) * 30);\n      setEnd(page * 30);\n      setRefreshTable(new Date().getTime());\n    }\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setPage(state => state - 1);\n    }\n\n    setStart((page - 1) * 30);\n    setEnd(page * 30);\n    setRefreshTable(new Date().getTime());\n  };\n\n  const nextPage = () => {\n    if (page * 30 < maxRows && maxRows > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshTable(new Date().getTime());\n    }\n  };\n\n  const commentDate = date => {\n    const updatedDate = new Date(date);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`;\n    } else {\n      return \"Posted just now\";\n    }\n  };\n\n  const updateSettings = () => {};\n\n  const deleteWorkspace = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"item-picture\",\n            src: `http://localhost:4000/images/${picture}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), workspace.self && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"item-image-input\",\n            type: \"file\",\n            name: \"image\",\n            onChange: e => {\n              setImage(e.target.files[0]);\n              {\n                !changedSettings && setChangedSettings(true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-heading\",\n            children: workspace.self ? /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-title-input\",\n              placeholder: \"Title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/workspace.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: workspace.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [!workspace.self && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: workspace.creatorName.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this), !workspace.self && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n              className: `item-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateBookmark();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 53\n            }, this), workspace.self && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 45\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              className: `item-icon ${upvoted ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateUpvote();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `item-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n              children: upvotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), workspace.self ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"item-description-input\",\n              placeholder: \"Description\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dark-grey-button item-delete\",\n                onClick: e => {\n                  deleteWorkspace(e);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: !changedSettings,\n                onClick: e => {\n                  updateSettings(e);\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-description\",\n            children: workspace.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"item-select\",\n            onChange: e => {\n              setSection(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"data\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comment\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-bottom\",\n          children: section === \"data\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: noData ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-exist\",\n              children: \"Cannot find dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"workspace-replace-input\",\n                  placeholder: \"Data ID\",\n                  onChange: e => {\n                    setDataID(e.target.value);\n                  },\n                  value: dataID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button item-replace-button\",\n                  onClick: () => {\n                    setDataID(undefined);\n                    setChangedData(false);\n                  },\n                  disabled: !changedData,\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button item-replace-button\",\n                  disabled: dataID === \"\",\n                  onClick: () => {\n                    existingWorkspace();\n                  },\n                  children: \"Import\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/dataset/${dataset}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-data-table-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Row number\",\n                  value: row,\n                  onChange: e => {\n                    setRow(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    cancelRow();\n                  },\n                  className: \"white-button item-data-cancel-fetch\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    fetchRow();\n                  },\n                  className: \"blue-button item-data-fetch\",\n                  children: \"Fetch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"item-data-table-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"item-data-table-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-data-table\",\n                children: /*#__PURE__*/_jsxDEV(ViewData, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshTable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"item-comment-form\",\n              method: \"PUT\",\n              onSubmit: addComment,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-comment\",\n                children: \"Leave a Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"item-comment-input\",\n                placeholder: \"Write here\",\n                value: comment,\n                onChange: e => {\n                  setComment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-comments\",\n              children: comments.map((comment, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-user\",\n                      children: comment.user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-date\",\n                      children: commentDate(comment.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"comment-card-comment\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 53\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"qx5A6zuvkZWbNwpDmZ3fKllTYCw=\", false, function () {\n  return [useParams];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useContext","Link","useParams","workspacesAPI","globalAPI","ViewData","OpenItemsContext","BookmarkIcon","ThumbUpIcon","ArrowForwardIosIcon","ArrowBackIosNewIcon","VisibilityOffIcon","VisibilityIcon","Workspace","currentUser","loaded","setLoaded","exist","setExist","noData","setNoData","dataset","setDataset","workspace","setWorkspace","dataTable","setDataTable","dataID","setDataID","changedData","setChangedData","changedSettings","setChangedSettings","date","setDate","start","setStart","end","setEnd","row","setRow","maxRows","setMaxRows","page","setPage","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","picture","setPicture","visibility","setVisibility","comments","setComments","comment","setComment","section","setSection","title","setTitle","description","setDescription","image","setImage","refreshTable","setRefreshTable","addOpenItems","workspaceID","id","fetchData","get","data","creator","_id","type","fetch","then","response","text","slice","indexOf","split","length","catch","err","updatedDate","Date","updated","currentDate","getTime","Math","floor","toString","existingWorkspace","updateUpvote","put","state","updateBookmark","updateVisibility","addComment","e","preventDefault","user","name","fetchRow","isNaN","cancelRow","previousPage","nextPage","commentDate","updateSettings","deleteWorkspace","self","target","files","value","creatorName","undefined","ceil","map","i","createdAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Link, useParams} from \"react-router-dom\"\nimport workspacesAPI from '../API/workspaces'\nimport globalAPI from '../API/global'\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst Workspace = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [exist, setExist] = useState()\n    const [noData, setNoData] = useState()\n    const [dataset, setDataset] = useState()\n    const [workspace, setWorkspace] = useState()\n    const [dataTable, setDataTable] = useState()\n    const [dataID, setDataID] = useState(\"\")\n    const [changedData, setChangedData] = useState(false)\n    const [changedSettings, setChangedSettings] = useState(false)\n    const [date, setDate] = useState(\"\");\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [row, setRow] = useState()\n    const [maxRows, setMaxRows] = useState()\n    const [page, setPage] = useState(1)\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [picture, setPicture] = useState()\n    const [visibility, setVisibility] = useState()\n    const [comments, setComments] = useState()\n    const [comment, setComment] = useState(\"\")\n    const [section, setSection] = useState(\"data\")\n    const [title, setTitle] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [image, setImage] = useState();\n    const [refreshTable, setRefreshTable] = useState()\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const workspaceID = useParams().id;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspace = await workspacesAPI.get(`/${workspaceID}`);\n                const comments = await globalAPI.get(`/comment/${workspaceID}?type=workspace`);\n\n                if (workspace.data.data.creator === currentUser.id) {\n                    addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                }\n\n                setWorkspace(workspace.data.data);\n                setBookmarked(workspace.data.data.bookmarked)\n                setUpvoted(workspace.data.data.upvoted)\n                setPicture(workspace.data.data.picture)\n                setUpvotes(workspace.data.data.upvotes)\n                setDataset(workspace.data.data.dataset.data)\n                setVisibility(workspace.data.data.visibility)\n                setTitle(workspace.data.data.title)\n                setDescription(workspace.data.data.description)\n                setComments(comments.data.data)\n\n                fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.data}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                        setExist(true)\n                        setNoData(false)\n                        setLoaded(true)\n                    }).catch(function() {\n                        setExist(true)\n                        setNoData(true)\n                        setLoaded(true)\n                    });\n            } catch (err) {\n                setExist(false)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])    \n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(workspace.updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded])\n\n    const existingWorkspace = () => {\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n            .then(response => response.text())\n            .then(text => {\n                setDataTable(text)\n                setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                setDataset(dataID)\n                setRefreshTable(new Date().getTime())\n            })\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await workspacesAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await workspacesAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await workspacesAPI.put(`/visibility/${workspace._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        try {\n            await workspacesAPI.put(`/comment/${workspaceID}`, {\n                comment: comment\n            });\n\n            setComments([{\n                user: {name: currentUser.name},\n                comment: comment\n            }, ...comments])\n            setComment(\"\")\n        } catch (err) {}\n    }\n\n    const fetchRow = () => {\n        if (!isNaN(row) && row !== \"\") {\n            setStart(row-1)\n            setEnd(row)\n            setRefreshTable(new Date().getTime())\n        } else {\n            if (start === (page-1)*30 && end === page*30) {\n                setRow(\"\")\n            } else {\n                setStart((page-1)*30)\n                setEnd(page*30)\n                setRefreshTable(new Date().getTime())\n            }\n        }\n    }\n\n    const cancelRow = () => {\n        if (start === (page-1)*30 && end === page*30) {\n            setRow(\"\")\n        } else {\n            setStart((page-1)*30)\n            setEnd(page*30)\n            setRefreshTable(new Date().getTime())\n        }\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setPage(state => state-1)\n        }\n        setStart((page-1)*30)\n        setEnd(page*30)\n        setRefreshTable(new Date().getTime())\n    }\n\n    const nextPage = () => {\n        if (page*30 < maxRows && maxRows > 30) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshTable(new Date().getTime())\n        }\n    }\n\n    const commentDate = (date) => {\n        const updatedDate = new Date(date);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`\n        } else {\n            return \"Posted just now\"\n        }\n    }\n\n    const updateSettings = () => {\n\n    }\n\n    const deleteWorkspace = () => {\n\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"width-body\">  \n                    <div className=\"item-body\">\n                        <div className=\"item-top\">\n                            <img className=\"item-picture\" src={`http://localhost:4000/images/${picture}`} />\n                            {workspace.self && \n                                <input className=\"item-image-input\"\n                                        type=\"file\" \n                                        name=\"image\" \n                                        onChange={e => {\n                                            setImage(e.target.files[0])\n                                            {!changedSettings && setChangedSettings(true)}\n                                        }} />\n                            }\n                            <div className=\"item-heading\">\n                                {workspace.self ? \n                                    <input className=\"item-title-input\"\n                                            placeholder=\"Title\" \n                                            value={title}\n                                            onChange={e => {\n                                                setTitle(e.target.value)\n                                                {!changedSettings && setChangedSettings(true)}\n                                            }} /> \n                                : \n                                    <>\n                                        <img src=\"http://localhost:3000/workspace.png\" />\n                                        <h1>{workspace.title}</h1>\n                                    </>\n                                }\n                            </div>\n                            <div>\n                                {!workspace.self && <p className=\"item-meta\">{workspace.creatorName.name}</p>}\n                                <p className=\"item-meta\">{date}</p>\n                                <span />\n                                {!workspace.self && <BookmarkIcon className={`item-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                                {workspace.self && \n                                    <>\n                                        {visibility ? \n                                            <VisibilityIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        :\n                                            <VisibilityOffIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        }\n                                    </>\n                                }\n                                <ThumbUpIcon className={`item-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                                <p className={`item-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                            </div>\n                            {workspace.self ? \n                                <>\n                                    <textarea className=\"item-description-input\"\n                                                placeholder=\"Description\" \n                                                value={description}\n                                                onChange={e => {\n                                                    setDescription(e.target.value)\n                                                    {!changedSettings && setChangedSettings(true)}\n                                                }} /> \n                                    <div className=\"item-middle\">\n                                        <button className=\"dark-grey-button item-delete\"\n                                                onClick={e => {deleteWorkspace(e)}}>Delete</button>\n                                        <button className=\"blue-button\"\n                                                disabled={!changedSettings}\n                                                onClick={e => {updateSettings(e)}}>Save Changes</button>\n                                    </div>\n                                </>\n                            : \n                                <p className=\"item-description\">{workspace.description}</p>\n                            }\n                            <select className=\"item-select\" onChange={e => {setSection(e.target.value)}}>\n                                <option value=\"data\">Data</option>\n                                <option value=\"comment\">Comments</option>\n                            </select>\n                        </div>\n                        <div className=\"item-bottom\">\n                            {section === \"data\" ? \n                                <> \n                                    {noData ?\n                                        <p className=\"item-exist\">Cannot find dataset</p>\n                                    :   \n                                        <>\n                                            <div className=\"item-options\">\n                                                <input className=\"workspace-replace-input\"\n                                                        placeholder=\"Data ID\"\n                                                        onChange={e => {setDataID(e.target.value)}}\n                                                        value={dataID} />\n                                                <button className=\"white-button item-replace-button\"\n                                                        onClick={() => {\n                                                            setDataID(undefined)\n                                                            setChangedData(false)\n                                                        }}\n                                                        disabled={!changedData}>Clear</button>\n                                                <button className=\"blue-button item-replace-button\"\n                                                        disabled={dataID === \"\"}\n                                                        onClick={() => {existingWorkspace()}}>Import</button>\n                                                <Link to={`/dataset/${dataset}`}></Link>\n                                            </div>\n                                            <div className=\"item-data-table-pagination\">\n                                                <input placeholder=\"Row number\" value={row} onChange={e => {setRow(e.target.value)}} />\n                                                <button onClick={() => {cancelRow()}} className=\"white-button item-data-cancel-fetch\">Cancel</button>\n                                                <button onClick={() => {fetchRow()}} className=\"blue-button item-data-fetch\">Fetch</button>\n                                                <span />\n                                                <ArrowBackIosNewIcon className=\"item-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                <ArrowForwardIosIcon className=\"item-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                            <div className=\"item-data-table\">\n                                                <ViewData dataTable={dataTable} start={start} end={end} key={refreshTable} />\n                                            </div>\n                                        </>\n                                    }\n                                </>\n                            : \n                                <>\n                                    <form className=\"item-comment-form\" method=\"PUT\" onSubmit={addComment}>\n                                        <p className=\"item-comment\">Leave a Comment</p>\n                                        <textarea className=\"item-comment-input\" placeholder=\"Write here\" value={comment} onChange={e => {setComment(e.target.value)}} />\n                                        <button className=\"blue-button\">Comment</button>\n                                    </form>\n                                    <div className=\"item-comments\">\n                                        {comments.map((comment, i) => {\n                                            return (\n                                                <div className=\"comment-card\" key={i}>\n                                                    <div>\n                                                        <p className=\"comment-card-user\">{comment.user.name}</p>\n                                                        <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                    </div>\n                                                    <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"width-body\">  \n                    <p className=\"item-exist\">Cannot find workspace</p>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default Workspace\n"]},"metadata":{},"sourceType":"module"}