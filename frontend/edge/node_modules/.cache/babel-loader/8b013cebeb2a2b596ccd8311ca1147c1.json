{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport workspaceAPI from '../API/workspaces';\nimport usersAPI from '../API/users';\nimport datasetsAPI from '../API/datasets';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewWorkspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [dataTable, setDataTable] = useState();\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [maxRows, setMaxRows] = useState();\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [uploadedDataID, setUploadedDataID] = useState(\"\");\n  const [workspaces, setWorkspaces] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspaces = await usersAPI.get(\"/created-workspaces\");\n        workspaces.data.data.map(workspace => {\n          setWorkspaces(previous => [...previous, workspace.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const next = () => {\n    if (setupStage && (title !== \"\" || description !== \"\") && !workspaces.includes(title)) {\n      setSetupStage(false);\n    }\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const remove = () => {\n    setDataID(\"\");\n    setDataTable();\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const existingWorkspace = async () => {\n    try {\n      const checkPublic = await datasetsAPI.get(`/check-public?data=${dataID}`);\n      setUploadedDataID(checkPublic.data.data.data);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setPage(state => state - 1);\n    }\n\n    setStart((page - 1) * 30);\n    setEnd(page * 30);\n  };\n\n  const nextPage = () => {\n    if (page * 30 < maxRows && maxRows > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n    }\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const workspaceResponse = await workspaceAPI.post(\"/\", {\n        title: title,\n        data: dataID,\n        creator: currentUser.id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: 0,\n        comments: [],\n        bookmarks: [],\n        visibility: visibility\n      });\n      history.push(`/workspace/${workspaceResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Workspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-item-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-item-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"new-sidebar-stage\"} ${setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            setSetupStage(true);\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"new-sidebar-stage\"} ${!setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Import Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-body\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [setupStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-item-setup-information\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"new-item-nav\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"new-item-filename\",\n                  children: \"Workspace Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button new-item-cancel\",\n                  onClick: () => {\n                    cancel();\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\",\n                  onClick: () => {\n                    next();\n                  },\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-item-title\",\n                placeholder: \"Title\",\n                onChange: e => {\n                  setTitle(e.target.value);\n                },\n                value: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"new-item-description\",\n                placeholder: \"Description\",\n                onChange: e => {\n                  setDescription(e.target.value);\n                },\n                value: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"new-item-setup-visibility\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"new-item-setup-visibility-label\",\n                  children: \"Public?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: () => {\n                    setVisibility(previous => !previous);\n                  },\n                  checked: visibility\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"new-item-setup-visibility\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"new-item-setup-visibility-label\",\n                  children: \"Picture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"image\",\n                  onChange: e => {\n                    setImage(e.target.files[0]);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)\n          }, void 0, false), !setupStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-item-import\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"new-item-import-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"new-workspace-import-existing\",\n                  placeholder: \"Data ID\",\n                  onChange: e => {\n                    setDataID(e.target.value);\n                  },\n                  value: dataID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\",\n                  disabled: dataID === \"\",\n                  onClick: () => {\n                    existingWorkspace();\n                  },\n                  children: \"Import\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button new-item-cancel\",\n                  onClick: () => {\n                    cancel();\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\",\n                  disabled: disableCreate,\n                  onClick: () => {\n                    uploadImage();\n                  },\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this), dataID !== \"\" && dataTable !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"new-item-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"new-item-data-information\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"new-item-filename\",\n                    children: [\"Data: \", uploadedDataID]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"grey-button new-item-remove\",\n                    onClick: () => {\n                      remove();\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"new-item-data-table-pagination\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                      className: \"new-item-data-table-pagination-icon\",\n                      onClick: () => {\n                        previousPage();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                      className: \"new-item-data-table-pagination-icon\",\n                      onClick: () => {\n                        nextPage();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"new-item-data-table\",\n                  children: /*#__PURE__*/_jsxDEV(ViewData, {\n                    dataTable: dataTable,\n                    start: start,\n                    end: end\n                  }, new Date().getTime(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 45\n              }, this), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"new-item-data-public\",\n                children: \"Dataset not public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 59\n              }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"new-item-data-public\",\n                children: \"Dataset does not exist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this)\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewWorkspace, \"4E12yHnAeOPK8xrsbNTf/R3Ksf0=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewWorkspace;\nexport default NewWorkspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWorkspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/New-Workspace.jsx"],"names":["React","useState","useEffect","useRef","useHistory","workspaceAPI","usersAPI","datasetsAPI","imageAPI","ViewData","ArrowForwardIosIcon","ArrowBackIosNewIcon","NewWorkspace","currentUser","setupStage","setSetupStage","title","setTitle","description","setDescription","visibility","setVisibility","dataTable","setDataTable","start","setStart","end","setEnd","maxRows","setMaxRows","page","setPage","image","setImage","dataID","setDataID","uploadedDataID","setUploadedDataID","workspaces","setWorkspaces","loaded","setLoaded","disableCreate","setDisabledCreate","displayPublic","setDisplayPublic","displayExist","setDisplayExist","publicInterval","existInterval","history","fetchData","get","data","map","workspace","previous","err","next","includes","cancel","goBack","remove","displayPublicInterval","clearInterval","current","setInterval","displayExistInterval","existingWorkspace","checkPublic","success","fetch","then","response","text","slice","indexOf","split","length","previousPage","state","nextPage","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","workspaceResponse","creator","id","experiments","picture","upvotes","comments","bookmarks","push","e","target","value","files","undefined","Math","ceil","Date","getTime"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport workspaceAPI from '../API/workspaces'\nimport usersAPI from '../API/users'\nimport datasetsAPI from '../API/datasets'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\nconst NewWorkspace = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [dataTable, setDataTable] = useState();\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [maxRows, setMaxRows] = useState()\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [dataID, setDataID] = useState(\"\")\n    const [uploadedDataID, setUploadedDataID] = useState(\"\")\n    const [workspaces, setWorkspaces] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspaces = await usersAPI.get(\"/created-workspaces\");\n\n                workspaces.data.data.map((workspace) => {\n                    setWorkspaces(previous => [...previous, workspace.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const next = () => {\n        if (setupStage && (title !== \"\" || description !== \"\") && !workspaces.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataID(\"\")\n        setDataTable()\n    }\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const existingWorkspace = async () => {\n        try {\n            const checkPublic = await datasetsAPI.get(`/check-public?data=${dataID}`)\n\n            setUploadedDataID(checkPublic.data.data.data)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                    })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setPage(state => state-1)\n        }\n        setStart((page-1)*30)\n        setEnd(page*30)\n    }\n\n    const nextPage = () => {\n        if (page*30 < maxRows && maxRows > 30) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n        }\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const workspaceResponse = await workspaceAPI.post(\"/\", {\n                title: title,\n                data: dataID,\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: 0,\n                comments: [],\n                bookmarks: [],\n                visibility: visibility\n            });\n\n            history.push(`/workspace/${workspaceResponse.data.data}`)\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"sidebar-body\">\n                    <div className=\"new-sidebar\">\n                        <h1>New Workspace</h1> \n                        <div className=\"new-item-header\">\n                            <p className=\"new-item-title\">{title}</p> \n                        </div>\n                        <button className={`${\"new-sidebar-stage\"} ${setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"new-sidebar-stage\"} ${!setupStage ? \"new-sidebar-stage-selected\" : \"new-sidebar-stage-unselected\"}`}\n                                disabled>Import Data</button>\n                    </div>\n                    <div className=\"inner-body\">\n                        <>\n                            {setupStage &&\n                                <>\n                                    <div className=\"new-item-setup-information\">\n                                        <div className=\"new-item-nav\">   \n                                            <p className=\"new-item-filename\">Workspace Information</p>\n                                            <button className=\"white-button new-item-cancel\"\n                                                    onClick={() => {cancel()}}>Cancel</button>\n                                            <button className=\"blue-button\"\n                                                    onClick={() => {next()}}>Next</button>\n                                        </div>\n                                        <input className=\"new-item-title\"\n                                                placeholder=\"Title\"\n                                                onChange={e => {setTitle(e.target.value)}}\n                                                value={title} />\n                                        <textarea className=\"new-item-description\"\n                                                    placeholder=\"Description\"\n                                                    onChange={e => {setDescription(e.target.value)}}\n                                                    value={description} />\n                                        <div className=\"new-item-setup-visibility\">\n                                            <label className=\"new-item-setup-visibility-label\">Public?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setVisibility(previous => !previous)}}\n                                                    checked={visibility} />\n                                        </div>\n                                        <div className=\"new-item-setup-visibility\">\n                                            <label className=\"new-item-setup-visibility-label\">Picture</label>\n                                            <input type=\"file\" \n                                                    name=\"image\" \n                                                    onChange={e => {setImage(e.target.files[0])}} />\n                                        </div>\n                                    </div>\n                                </>\n                            }\n                            {!setupStage &&\n                                <>\n                                    <div className=\"new-item-import\">\n                                        <div className=\"new-item-import-top\">\n                                            <input className=\"new-workspace-import-existing\"\n                                                    placeholder=\"Data ID\"\n                                                    onChange={e => {setDataID(e.target.value)}}\n                                                    value={dataID} />\n                                            <button className=\"blue-button\"\n                                                    disabled={dataID === \"\"}\n                                                    onClick={() => {existingWorkspace()}}>Import</button>\n                                            <span />\n                                            <button className=\"white-button new-item-cancel\"\n                                                    onClick={() => {cancel()}}>Cancel</button>\n                                            <button className=\"blue-button\"\n                                                    disabled={disableCreate}\n                                                    onClick={() => {uploadImage()}}>Create</button>\n                                        </div>\n                                        {dataID !== \"\" && dataTable !== undefined &&\n                                            <div className=\"new-item-data\">\n                                                <div className=\"new-item-data-information\">\n                                                    <p className=\"new-item-filename\">Data: {uploadedDataID}</p> \n                                                    <button className=\"grey-button new-item-remove\"\n                                                            onClick={() => {remove()}}>Remove</button>\n                                                    <span />\n                                                    <div className=\"new-item-data-table-pagination\">\n                                                        <ArrowBackIosNewIcon className=\"new-item-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                        <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                        <ArrowForwardIosIcon className=\"new-item-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"new-item-data-table\">\n                                                    <ViewData dataTable={dataTable} start={start} end={end} key={new Date().getTime()} />\n                                                </div>\n                                            </div>\n                                        }\n                                        {displayPublic && <p className=\"new-item-data-public\">Dataset not public</p>}\n                                        {displayExist && <p className=\"new-item-data-public\">Dataset does not exist</p>}\n                                    </div>\n                                </>\n                            }\n                        </>\n                    </div>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default NewWorkspace\n"]},"metadata":{},"sourceType":"module"}