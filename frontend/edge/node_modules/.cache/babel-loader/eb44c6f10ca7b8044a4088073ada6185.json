{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Experiment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport itemsAPI from '../API/items';\nimport ModelNode from '../Components/Model-Node';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateExperiment = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [stage, setStage] = useState(\"setup\");\n  const [title, setTitle] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [model, setModel] = useState([{\n    type: \"Input\",\n    value: \"3\",\n    activation: \"\"\n  }, {\n    type: \"Dense\",\n    value: \"32\",\n    activation: \"Sigmoid\"\n  }, {\n    type: \"Dense\",\n    value: \"32\",\n    activation: \"Relu\"\n  }]);\n  const [selectedNode, setSelectedNode] = useState(0);\n  const [configuration, setConfiguration] = useState({\n    epochs: \"\"\n  });\n  const [experiments, setExperiments] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [disableTrain, setDisabledTrain] = useState(true);\n  const [refreshDiagram, setRefreshDiagram] = useState();\n  const history = useHistory();\n  const workspaceID = useParams().id;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const experiments = await itemsAPI.get(`/created-experiments/${workspaceID}`);\n        experiments.data.data.experiments.map(experiment => {\n          setExperiments(state => [...state, experiment.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const next = () => {\n    if (stage === \"setup\" && title !== \"\" && !experiments.includes(title)) {\n      setStage(\"modelling\");\n    }\n\n    if (stage === \"modelling\" && model.length > 2 && configuration.epochs !== \"\") {\n      setStage(\"training\");\n    }\n\n    if (stage === \"training\" && !disableTrain) {\n      setStage(\"evaluation\");\n    }\n  };\n\n  const cancel = () => {\n    history.replace(`/${workspaceID}`);\n  };\n\n  console.log(model);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Experiment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-item-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"create-item-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${stage === \"setup\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: stage === \"setup\",\n          onClick: () => {\n            setStage(\"setup\");\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${stage === \"modelling\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: stage === \"setup\" || stage === \"modelling\",\n          onClick: () => {\n            setStage(\"modelling\");\n          },\n          children: \"Modelling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${stage === \"training\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: stage === \"setup\" || stage === \"modelling\" || stage === \"training\",\n          onClick: () => {\n            setStage(\"training\");\n          },\n          children: \"Training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${stage === \"evaluation\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Evaluation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-body\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: stage === \"setup\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-filename\",\n                children: \"Experiment Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                onClick: () => {\n                  next();\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-title\",\n              placeholder: \"Title\",\n              onChange: e => {\n                setTitle(e.target.value);\n              },\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Public?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setVisibility(previous => !previous);\n                },\n                checked: visibility\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this) : stage === \"modelling\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-modelling\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-modelling-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                onClick: () => {\n                  next();\n                },\n                children: \"Train\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-modelling-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-model\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-model-diagram\",\n                  children: model.map((node, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"create-item-model-diagram-node\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => {\n                            setSelectedNode(i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(ModelNode, {\n                            setSelectedNode: setSelectedNode,\n                            type: node.type,\n                            value: node.value,\n                            selected: i === selectedNode,\n                            last: i === model.length - 1\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 112,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 111,\n                          columnNumber: 65\n                        }, this), node.type !== \"Input\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => {\n                            model.splice(i, 1);\n                            setSelectedNode(state => state - 1);\n                            setRefreshDiagram(new Date().getTime());\n                          },\n                          children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n                            className: \"create-item-model-diagram-remove\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 118,\n                            columnNumber: 73\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 61\n                      }, this), i === model.length - 1 && node.type !== \"Output\" && /*#__PURE__*/_jsxDEV(AddIcon, {\n                        className: \"create-item-model-diagram-add\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 65\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, refreshDiagram, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-model-selected\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: model[selectedNode].type !== \"Input\" ? \"create-item-model-selected-other\" : undefined,\n                    children: model[selectedNode].type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 49\n                  }, this), model[selectedNode].type !== \"Input\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Units\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: model[selectedNode].value,\n                      onChange: e => {\n                        setModel(state => [...state.splice(selectedNode, 1), { ...state[selectedNode],\n                          value: e.target.value\n                        }]);\n                        setRefreshDiagram(new Date().getTime());\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Activation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: model[selectedNode].activation,\n                      onChange: e => {\n                        setModel(state => state[selectedNode].value = e.target.value);\n                        setRefreshDiagram(new Date().getTime());\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Relu\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Sigmoid\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-configuration\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this) : stage === \"training\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateExperiment, \"vCP3nxiu8XMBBLbcs9FM0hVUgeY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CreateExperiment;\nexport default CreateExperiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExperiment\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Experiment.jsx"],"names":["React","useState","useEffect","useHistory","useParams","itemsAPI","ModelNode","ClearIcon","AddIcon","CreateExperiment","currentUser","stage","setStage","title","setTitle","visibility","setVisibility","model","setModel","type","value","activation","selectedNode","setSelectedNode","configuration","setConfiguration","epochs","experiments","setExperiments","loaded","setLoaded","disableTrain","setDisabledTrain","refreshDiagram","setRefreshDiagram","history","workspaceID","id","fetchData","get","data","map","experiment","state","err","next","includes","length","cancel","replace","console","log","e","target","previous","node","i","splice","Date","getTime","undefined"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\"\nimport itemsAPI from '../API/items'\nimport ModelNode from '../Components/Model-Node';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst CreateExperiment = ({currentUser}) => {\n    const [stage, setStage] = useState(\"setup\");\n    const [title, setTitle] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [model, setModel] = useState([{type: \"Input\", value: \"3\", activation: \"\"}, {type: \"Dense\", value: \"32\", activation: \"Sigmoid\"}, {type: \"Dense\", value: \"32\", activation: \"Relu\"}])\n    const [selectedNode, setSelectedNode] = useState(0)\n    const [configuration, setConfiguration] = useState({epochs: \"\"})\n    const [experiments, setExperiments] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableTrain, setDisabledTrain] = useState(true)\n    const [refreshDiagram, setRefreshDiagram] = useState()\n    const history = useHistory();\n    const workspaceID = useParams().id;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const experiments = await itemsAPI.get(`/created-experiments/${workspaceID}`);\n\n                experiments.data.data.experiments.map((experiment) => {\n                    setExperiments(state => [...state, experiment.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const next = () => {\n        if (stage === \"setup\" && title !== \"\" && !experiments.includes(title)) {\n            setStage(\"modelling\")\n        }\n        if (stage === \"modelling\" && model.length > 2 && configuration.epochs !== \"\") {\n            setStage(\"training\")\n        }\n        if (stage === \"training\" && !disableTrain) {\n            setStage(\"evaluation\")\n        }\n    }\n\n    const cancel = () => {\n        history.replace(`/${workspaceID}`);\n    }\n    console.log(model)\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"sidebar-body\">\n                    <div className=\"create-sidebar\">\n                        <h1>Create Experiment</h1> \n                        <div className=\"create-item-header\">\n                            <p className=\"create-item-title\">{title}</p> \n                        </div>\n                        <button className={`${\"create-sidebar-stage\"} ${stage === \"setup\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled={stage === \"setup\"}\n                                onClick={() => {setStage(\"setup\")}}>Setup</button>\n                        <button className={`${\"create-sidebar-stage\"} ${stage === \"modelling\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled={stage === \"setup\" || stage === \"modelling\"}\n                                onClick={() => {setStage(\"modelling\")}}>Modelling</button>\n                        <button className={`${\"create-sidebar-stage\"} ${stage === \"training\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled={stage === \"setup\" || stage === \"modelling\" || stage === \"training\"}\n                                onClick={() => {setStage(\"training\")}}>Training</button>\n                        <button className={`${\"create-sidebar-stage\"} ${stage === \"evaluation\" ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled>Evaluation</button>\n                    </div>\n                    <div className=\"inner-body\">\n                        <>\n                            {stage === \"setup\" ?\n                                <div className=\"create-item-setup-information\">\n                                    <div className=\"create-item-nav\">   \n                                        <p className=\"create-item-filename\">Experiment Information</p>\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                onClick={() => {next()}}>Next</button>\n                                    </div>\n                                    <input className=\"create-item-title\"\n                                            placeholder=\"Title\"\n                                            onChange={e => {setTitle(e.target.value)}}\n                                            value={title} />\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Public?</label>\n                                        <input type=\"checkbox\" \n                                                onChange={() => {setVisibility(previous => !previous)}}\n                                                checked={visibility} />\n                                    </div>\n                                </div>\n                            : (stage === \"modelling\") ?\n                                <div className=\"create-item-modelling\">\n                                    <div className=\"create-item-modelling-top\">   \n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                onClick={() => {next()}}>Train</button>\n                                    </div>\n                                    <div className=\"create-item-modelling-body\">\n                                        <div className=\"create-item-model\">\n                                            <div className=\"create-item-model-diagram\" key={refreshDiagram}>\n                                                {model.map((node, i) => {\n                                                    return (\n                                                        <div key={i}>\n                                                            <div className=\"create-item-model-diagram-node\">\n                                                                <div onClick={() => {setSelectedNode(i)}}>\n                                                                    <ModelNode setSelectedNode={setSelectedNode} type={node.type} value={node.value} selected={i === selectedNode} last={i === model.length-1} />\n                                                                </div>\n                                                                {node.type !== \"Input\" &&\n                                                                    <div onClick={() => {model.splice(i, 1)\n                                                                                        setSelectedNode(state => state-1)\n                                                                                        setRefreshDiagram(new Date().getTime())}}>\n                                                                        <ClearIcon className=\"create-item-model-diagram-remove\" />\n                                                                    </div>\n                                                                }\n                                                            </div>\n                                                            {i === model.length-1 && node.type !== \"Output\" &&\n                                                                <AddIcon className=\"create-item-model-diagram-add\" />\n                                                            }\n                                                        </div>\n                                                    )\n                                                })}\n                                            </div>\n                                            <div className=\"create-item-model-selected\">\n                                                <p className={model[selectedNode].type !== \"Input\" ? \"create-item-model-selected-other\" : undefined}>{model[selectedNode].type}</p>\n                                                {model[selectedNode].type !== \"Input\" &&\n                                                    <>\n                                                        <label>Units</label>\n                                                        <input value={model[selectedNode].value} \n                                                                onChange={e => {setModel(state => ([\n                                                                                        ...state.splice(selectedNode, 1),\n                                                                                        { ...state[selectedNode],\n                                                                                            value: e.target.value }\n                                                                                ]))\n                                                                                setRefreshDiagram(new Date().getTime())}} />\n                                                        <label>Activation</label>\n                                                        <select value={model[selectedNode].activation} \n                                                                onChange={e => {setModel(state => state[selectedNode].value = e.target.value)\n                                                                                setRefreshDiagram(new Date().getTime())}}>\n                                                                <option>Relu</option>\n                                                                <option>Sigmoid</option>\n                                                        </select>\n                                                    </>\n                                                }   \n                                            </div>\n                                        </div>\n                                        <div className=\"create-item-configuration\">\n                                            <div>\n                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            : (stage === \"training\") ?\n                                <>\n                                </>\n                            :\n                                <>\n                                </>\n                            }\n                        </>\n                    </div>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default CreateExperiment\n"]},"metadata":{},"sourceType":"module"}