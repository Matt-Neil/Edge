{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport workspacesAPI from '../API/workspaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = () => {\n  _s();\n\n  const [loadedOther, setLoadedOther] = useState(false);\n  const [loadedSelf, setLoadedSelf] = useState(false);\n  const [workspace, setWorkspace] = useState();\n  const workspaceID = useParams().id;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspace = await workspacesAPI.get(`/${workspaceID}`);\n        setWorkspace(workspace.data.data);\n        console.log(workspace.data.data.self);\n\n        if (workspace.data.data.self) {\n          setLoadedSelf(true);\n        } else {\n          setLoadedOther(true);\n        }\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loadedOther && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), loadedSelf && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"self\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Workspace, \"qtQC2F4wCBdqvQ/5ThzoMdEMBZk=\", false, function () {\n  return [useParams];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useHistory","Link","useParams","workspacesAPI","Workspace","loadedOther","setLoadedOther","loadedSelf","setLoadedSelf","workspace","setWorkspace","workspaceID","id","fetchData","get","data","console","log","self","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,SAA1B,QAA0C,kBAA1C;AACA,OAAOC,aAAP,MAA0B,mBAA1B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AACA,QAAMa,WAAW,GAAGT,SAAS,GAAGU,EAAhC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMJ,SAAS,GAAG,MAAMN,aAAa,CAACW,GAAd,CAAmB,IAAGH,WAAY,EAAlC,CAAxB;AAEAD,QAAAA,YAAY,CAACD,SAAS,CAACM,IAAV,CAAeA,IAAhB,CAAZ;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACM,IAAV,CAAeA,IAAf,CAAoBG,IAAhC;;AACA,YAAIT,SAAS,CAACM,IAAV,CAAeA,IAAf,CAAoBG,IAAxB,EAA8B;AAC1BV,UAAAA,aAAa,CAAC,IAAD,CAAb;AACH,SAFD,MAEO;AACHF,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH;AACJ,OAXD,CAWE,OAAOa,GAAP,EAAY,CAAE;AACnB,KAbD;;AAcAN,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAA,eACKR,WAAW,iBACR;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,EAMKE,UAAU,iBACP;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA,kBADJ;AAcH,CAtCD;;GAAMH,S;UAIkBF,S;;;KAJlBE,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport workspacesAPI from '../API/workspaces'\n\nconst Workspace = () => {\n    const [loadedOther, setLoadedOther] = useState(false)\n    const [loadedSelf, setLoadedSelf] = useState(false)\n    const [workspace, setWorkspace] = useState()\n    const workspaceID = useParams().id;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspace = await workspacesAPI.get(`/${workspaceID}`);\n\n                setWorkspace(workspace.data.data);\n\n                console.log(workspace.data.data.self)\n                if (workspace.data.data.self) {\n                    setLoadedSelf(true);\n                } else {\n                    setLoadedOther(true);\n                }\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            {loadedOther &&\n                <div className=\"width-body\">  \n                    <p>other</p>\n                </div>\n            }\n            {loadedSelf &&\n                <div className=\"sidebar-body\">  \n                    <p>self</p>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Workspace\n"]},"metadata":{},"sourceType":"module"}