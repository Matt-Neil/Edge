{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport itemsAPI from '../API/items';\nimport ViewData from '../Components/View-Data';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExperimentCard from '../Components/Experiment-Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Experiment = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [model, setModel] = useState();\n  const [configuration, setConfiguration] = useState();\n  const [updated, setUpdated] = useState();\n  const [changed, setChanged] = useState(false);\n  const [visibility, setVisibility] = useState();\n  const [section, setSection] = useState(\"model\");\n  const [experiment, setExperiment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const workspaceID = useParams().workspace;\n  const experimentID = useParams().experiment;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const experiment = await itemsAPI.get(`/experiment${experimentID}?workspace=${workspaceID}`);\n        setExperiment(experiment.data.data);\n        setUpdated(experiment.data.data.updated);\n        setTitle(experiment.data.data.title);\n        setModel(experiment.data.data.model);\n        setVisibility(experiment.data.data.visibility);\n        setConfiguration(experiment.data.data.configuration);\n        setExist(true);\n        setLoaded(true);\n      } catch (err) {\n        setExist(false);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded, updated]);\n\n  const updateExperiment = async () => {\n    try {\n      setUpdated(new Date().toISOString());\n      setChanged(false);\n    } catch (err) {}\n  };\n\n  const deleteExperiment = async () => {\n    try {} catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-heading\",\n            children: experiment.self ? /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-title-input\",\n              placeholder: \"Title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: workspace.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), experiment.self && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), experiment.self && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-middle\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dark-grey-button item-delete\",\n              onClick: () => {\n                deleteWorkspace();\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"blue-button\",\n              disabled: !changedSettings,\n              onClick: () => {\n                updateSettings();\n              },\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"item-select\",\n            onChange: e => {\n              setSection(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"model\",\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"results\",\n              children: \"Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-bottom\",\n          children: section === \"model\" ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find experiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Experiment, \"b5rE3bQTZG1DLCfQvOuJ/Rj6YpI=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Experiment;\nexport default Experiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experiment\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx"],"names":["React","useState","useEffect","Link","useParams","itemsAPI","ViewData","ArrowForwardIosIcon","ArrowBackIosNewIcon","VisibilityOffIcon","VisibilityIcon","ExperimentCard","Experiment","currentUser","loaded","setLoaded","exist","setExist","model","setModel","configuration","setConfiguration","updated","setUpdated","changed","setChanged","visibility","setVisibility","section","setSection","experiment","setExperiment","title","setTitle","workspaceID","workspace","experimentID","fetchData","get","data","err","updatedDate","Date","currentDate","getTime","setDate","Math","floor","toString","updateExperiment","toISOString","deleteExperiment","self","e","target","value","changedSettings","setChangedSettings","date","updateVisibility","deleteWorkspace","updateSettings"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link, useParams} from \"react-router-dom\"\nimport itemsAPI from '../API/items'\nimport ViewData from '../Components/View-Data';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExperimentCard from '../Components/Experiment-Card'\n\nconst Experiment = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [exist, setExist] = useState()\n    const [model, setModel] = useState()\n    const [configuration, setConfiguration] = useState()\n    const [updated, setUpdated] = useState()\n    const [changed, setChanged] = useState(false)\n    const [visibility, setVisibility] = useState()\n    const [section, setSection] = useState(\"model\")\n    const [experiment, setExperiment] = useState()\n    const [title, setTitle] = useState(\"\")\n    const workspaceID = useParams().workspace;\n    const experimentID = useParams().experiment;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const experiment = await itemsAPI.get(`/experiment${experimentID}?workspace=${workspaceID}`);\n\n                setExperiment(experiment.data.data);\n                setUpdated(experiment.data.data.updated);\n                setTitle(experiment.data.data.title)\n                setModel(experiment.data.data.model)\n                setVisibility(experiment.data.data.visibility)\n                setConfiguration(experiment.data.data.configuration)\n\n                setExist(true)\n                setLoaded(true)\n            } catch (err) {\n                setExist(false)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])    \n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded, updated])\n\n    const updateExperiment = async () => {\n        try {\n            setUpdated(new Date().toISOString())\n            setChanged(false)\n        } catch (err) {}\n    }\n\n    const deleteExperiment = async () => {\n        try {\n            \n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"width-body\">  \n                    <div className=\"item-body\">\n                        <div className=\"item-top\">\n                            <div className=\"item-heading\">\n                                {experiment.self ? \n                                    <input className=\"item-title-input\"\n                                            placeholder=\"Title\" \n                                            value={title}\n                                            onChange={e => {\n                                                setTitle(e.target.value)\n                                                {!changedSettings && setChangedSettings(true)}\n                                            }} /> \n                                : \n                                    <h1>{workspace.title}</h1>\n                                }\n                            </div>\n                            <div>\n                                <p className=\"item-meta\">{date}</p>\n                                <span />\n                                {experiment.self && \n                                    <>\n                                        {visibility ? \n                                            <VisibilityIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        :\n                                            <VisibilityOffIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        }\n                                    </>\n                                }\n                            </div>\n                            {experiment.self &&\n                                <div className=\"item-middle\">\n                                    <button className=\"dark-grey-button item-delete\"\n                                            onClick={() => {deleteWorkspace()}}>Delete</button>\n                                    <button className=\"blue-button\"\n                                            disabled={!changedSettings}\n                                            onClick={() => {updateSettings()}}>Save Changes</button>\n                                </div>\n                            }\n                            <select className=\"item-select\" onChange={e => {setSection(e.target.value)}}>\n                                <option value=\"model\">Model</option>\n                                <option value=\"results\">Results</option>\n                            </select>\n                        </div>\n                        <div className=\"item-bottom\">\n                            {section === \"model\" ? \n                                <div>\n                                </div>\n                            :\n                                <div></div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"width-body\">  \n                    <p className=\"item-exist\">Cannot find experiment</p>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default Experiment"]},"metadata":{},"sourceType":"module"}