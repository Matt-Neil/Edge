{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport usersAPI from '../API/users';\nimport itemsAPI from '../API/items';\nimport imageAPI from '../API/images';\nimport trainAPI from '../API/train';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ModelNode from '../Components/Model-Node';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser,\n    type\n  } = _ref;\n  const [stage, setStage] = useState(\"model\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(20);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [datasetID, setDatasetID] = useState(\"\");\n  const [uploadedDataset, setUploadedDataset] = useState();\n  const [workspace, setWorkspace] = useState([]);\n  const [images, setImages] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState([]);\n  const [viewDataset, setViewDataset] = useState(false);\n  const [refreshData, setRefreshData] = useState();\n  const [refreshDiagram, setRefreshDiagram] = useState();\n  const [model, setModel] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(0);\n  const [configuration, setConfiguration] = useState({\n    epochs: \"\",\n    training_split: \"\",\n    validation_split: \"\",\n    test_split: \"\",\n    improvement: \"\",\n    patience: \"\",\n    batch: \"\",\n    lr_scheduler: false,\n    optimiser: \"\",\n    loss: \"\"\n  });\n  const [addNode, setAddNode] = useState(false);\n  const [results, setResults] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const [disableTrain, setDisabledTrain] = useState(true);\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const modelRef = useRef(null);\n  const workspaceID = useParams().id;\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (type === \"create\") {\n          const workspace = await usersAPI.get(\"/created?type=workspace\");\n          workspace.data.data.map(workspace => {\n            setWorkspace(previous => [...previous, workspace.title]);\n          });\n        } else {\n          const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n\n          if (workspace.data.data.creator === currentUser.id) {\n            addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n          }\n\n          setWorkspace(workspace.data.data);\n          setUpdated(workspace.data.data.updated);\n          setBookmarked(workspace.data.data.bookmarked);\n          setUpvoted(workspace.data.data.upvoted);\n          setPicture(workspace.data.data.picture);\n          setUpvotes(workspace.data.data.upvotes);\n          setDatasetID(workspace.data.data.dataset._id);\n          setVisibility(workspace.data.data.visibility);\n          setTitle(workspace.data.data.title);\n          setDescription(workspace.data.data.description);\n          setModel(workspace.data.data.model);\n          setConfiguration(workspace.data.data.configuration);\n          fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.imageFile}/labels.json`).then(response => response.json()).then(images => {\n            images.map(image => {\n              setImages(state => [...state, image.filename]);\n              setAssignedLabels(state => [...state, image.label]);\n            });\n            setUploadedDataset(workspace.data.data.dataset);\n          });\n        }\n\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (modelRef.current) {\n      modelRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'end'\n      });\n    }\n  }, [model, addNode]);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && datasetID !== \"\") {\n      existingDataset();\n    }\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 20);\n      setEnd((page - 1) * 20);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (page * 20 < images.length && images.length > 20) {\n      setPage(state => state + 1);\n      setStart(page * 20);\n      setEnd((page + 1) * 20);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const existingDataset = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?id=${datasetID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${checkPublic.data.data.imageFile}/labels.json`).then(response => response.json()).then(images => {\n          images.map(image => {\n            setImages(state => [...state, image.filename]);\n            setAssignedLabels(state => [...state, image.label]);\n          });\n          setUploadedDataset(checkPublic.data.data);\n          setRefreshData(new Date().getTime());\n          {\n            model.length === 0 && setModel([{\n              type: \"Input\",\n              value: 1,\n              activation: \"\"\n            }]);\n          }\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const workspaceResponse = await itemsAPI.post(\"/\", {\n        title: title,\n        dataset: uploadedDataset._id,\n        creator: currentUser.id,\n        description: description,\n        picture: imageName,\n        upvotes: [],\n        bookmarks: [],\n        updated: new Date().toISOString(),\n        visibility: visibility,\n        type: \"workspace\"\n      });\n      history.push(`/workspace/${workspaceResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  const train = async () => {\n    try {\n      // setDisabledTrain(true)\n      setStage(\"train\");\n      const formData = new FormData();\n      formData.append('epochs', configuration.epochs);\n      formData.append('training_split', configuration.training_split);\n      formData.append('validation_split', configuration.validation_split);\n      formData.append('test_split', configuration.test_split);\n      formData.append('improvement', configuration.improvement);\n      formData.append('patience', configuration.patience);\n      formData.append('batch', configuration.batch);\n      formData.append('lr_scheduler', configuration.lr_scheduler);\n      formData.append('optimiser', configuration.optimiser);\n      formData.append('loss', configuration.loss);\n      formData.append('imageFile', uploadedDataset.imageFile);\n      uploadedDataset.labels.map(label => {\n        formData.append('labels[]', label);\n      });\n      model.map(node => {\n        formData.append('activations[]', node.activation);\n        formData.append('units[]', node.value);\n      });\n      const response = await trainAPI.post(\"\", formData);\n\n      if (response) {\n        setResults(response);\n        setStage(\"evaluation\");\n      } else {\n        setDisabledTrain(false);\n      }\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"create-item-title\",\n          placeholder: \"Title\",\n          onChange: e => {\n            setTitle(e.target.value);\n          },\n          disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"create-item-description\",\n          placeholder: \"Description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          },\n          disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), workspace.creator === currentUser.id || type === \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"create-item-setup-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-setup-input\",\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImage(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"create-item-setup-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setVisibility(previous => !previous);\n              },\n              checked: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"create-workspace-import-existing\",\n          placeholder: \"Dataset ID\",\n          onChange: e => {\n            setDatasetID(e.target.value);\n          },\n          onKeyPress: searchFunctionKey,\n          disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n          value: datasetID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-item-view-dataset\",\n          onClick: () => {\n            setViewDataset(state => !state);\n          },\n          children: viewDataset ? \"Hide Dataset\" : \"Show Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"create-item-data-notification\",\n          children: \"Dataset not public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 43\n        }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"create-item-data-notification\",\n          children: \"Dataset does not exist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: type === \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-items-top\",\n            children: workspace.creator === currentUser.id || type === \"create\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Create Workspace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: disableTrain,\n                onClick: () => {\n                  uploadImage();\n                },\n                children: \"Train\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Evaluation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }, this), model.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-modelling-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-model\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-diagram\",\n                children: [model.map((node, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-model-diagram-node\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          setSelectedNode(i);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ModelNode, {\n                          setSelectedNode: setSelectedNode,\n                          type: node.type,\n                          value: node.value,\n                          selected: i === selectedNode,\n                          last: i === model.length - 1\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 65\n                      }, this), node.type !== \"Input\" && (workspace.creator === currentUser.id || type === \"create\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          {\n                            selectedNode === i ? setSelectedNode(state => state - 1) : selectedNode < i ? setSelectedNode(state => state) : selectedNode > i && /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: selectedNode - i === 1 ? setSelectedNode(state => state - 1) : setSelectedNode(i)\n                            }, void 0, false);\n                          }\n                          model.splice(i, 1);\n                          setRefreshDiagram(new Date().getTime());\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n                          className: \"create-model-diagram-remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 61\n                    }, this), i === model.length - 1 && node.type !== \"Output\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: addNode && (workspace.creator === currentUser.id || type === \"create\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"create-model-diagram-add\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => {\n                            setAddNode(false);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n                            className: \"create-model-diagram-add-icon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 344,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 77\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"create-model-diagram-add-options\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              setModel(state => [...state, {\n                                type: \"Dense\",\n                                value: 0,\n                                activation: \"\"\n                              }]);\n                              setSelectedNode(model.length);\n                              setAddNode(false);\n                            },\n                            children: \"Dense\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 81\n                          }, this), model.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              {\n                                uploadedDataset.labels.length === 2 ? setModel(state => [...state, {\n                                  type: \"Output\",\n                                  value: 1,\n                                  activation: \"\"\n                                }]) : setModel(state => [...state, {\n                                  type: \"Output\",\n                                  value: uploadedDataset.labels.length,\n                                  activation: \"\"\n                                }]);\n                              }\n                              setSelectedNode(model.length);\n                              setAddNode(false);\n                            },\n                            children: \"Output\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 356,\n                            columnNumber: 85\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 77\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 73\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          setAddNode(true);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                          className: \"create-model-diagram-add-icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 378,\n                          columnNumber: 77\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 73\n                      }, this)\n                    }, void 0, false)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 57\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: modelRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 49\n                }, this)]\n              }, refreshDiagram, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-selected\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: model[selectedNode].type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: model[selectedNode].value,\n                  disabled: (model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.creator === currentUser.id || type === \"create\"),\n                  onChange: e => {\n                    setModel(state => {\n                      const stateCopy = [...state];\n                      stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                        value: Number(e.target.value)\n                      };\n                      return stateCopy;\n                    });\n                    setRefreshDiagram(new Date().getTime());\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 49\n                }, this), model[selectedNode].type !== \"Input\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Activation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: model[selectedNode].activation,\n                    disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                    onChange: e => {\n                      setModel(state => {\n                        const stateCopy = [...state];\n                        stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                          activation: e.target.value\n                        };\n                        return stateCopy;\n                      });\n                      setRefreshDiagram(new Date().getTime());\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      disabled: true,\n                      defaultValue: true,\n                      value: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"sigmoid\",\n                      children: \"Sigmoid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"softmax\",\n                      children: \"Softmax\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"softplus\",\n                      children: \"Softplus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"softsign\",\n                      children: \"Softsign\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"swish\",\n                      children: \"Swish\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"selu\",\n                      children: \"Selu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"tanh\",\n                      children: \"Tanh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"elu\",\n                      children: \"Elu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"exponential\",\n                      children: \"Exponential\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"gelu\",\n                      children: \"Gelu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"hard_sigmoid\",\n                      children: \"Hard Sigmoid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"linear\",\n                      children: \"Linear\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"relu\",\n                      children: \"Relu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-configuration\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-model-configuration-option\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Epochs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.epochs,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          epochs: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Training Split\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.training_split,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          training_split: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Validation Split\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.validation_split,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          validation_split: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Test Split\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.test_split,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          test_split: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Minimum Improvement\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.improvement,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          improvement: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Patience\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.patience,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          patience: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Batch Size\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: configuration.batch,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          batch: e.target.value\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Learning Rate Scheduler\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"create-model-configuration-option-checkbox\",\n                      type: \"checkbox\",\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          lr_scheduler: !configuration.lr_scheduler\n                        }));\n                      },\n                      checked: configuration.lr_scheduler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Optimiser\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: configuration.optimiser,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          optimiser: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        disabled: true,\n                        defaultValue: true,\n                        value: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adadelta\",\n                        children: \"Adadelta\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 525,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adagrad\",\n                        children: \"Adagrad\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adam\",\n                        children: \"Adam\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Adamax\",\n                        children: \"Adamax\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 528,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Ftrl\",\n                        children: \"Ftrl\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Nadam\",\n                        children: \"Nadam\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"RMSprop\",\n                        children: \"RMSprop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"SGD\",\n                        children: \"SGD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Loss\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: configuration.loss,\n                      disabled: !(workspace.creator === currentUser.id || type === \"create\"),\n                      onChange: e => {\n                        setConfiguration(state => ({ ...state,\n                          loss: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        disabled: true,\n                        defaultValue: true,\n                        value: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 543,\n                        columnNumber: 61\n                      }, this), uploadedDataset.labels.length === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"binary_crossentropy\",\n                          children: \"Binary Crossentropy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 546,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"hinge\",\n                          children: \"Hinge\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 547,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"squared_hinge\",\n                          children: \"Squared Hinge\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 548,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true), uploadedDataset.labels.length > 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"categorical_crossentropy\",\n                          children: \"Categorical Crossentropy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 553,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"sparse_categorical_crossentropy\",\n                          children: \"Sparse Categorical Crossentropy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"kl_divergence\",\n                          children: \"Kullback Leibler Divergence\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 555,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 41\n            }, this), viewDataset && uploadedDataset && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-model-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-data-header\",\n                children: \"Selected Dataset:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-data-header-dataset\",\n                children: uploadedDataset._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-data-images-list\",\n                children: images.map((image, i) => {\n                  if (i >= start && i < end) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-model-data-image\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `http://127.0.0.1:5000/files/${uploadedDataset.imageFile}/${image}.jpg`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: assignedLabels[i]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 573,\n                        columnNumber: 69\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 65\n                    }, this);\n                  }\n                })\n              }, refreshData, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-model-data-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"create-model-data-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(images.length / 20)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"create-model-data-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: workspace.creator === currentUser.id || type === \"create\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"Select a dataset...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"No model...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 45\n            }, this)\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"IeB9b9LJAp6Eok8sc48PGcoJEYQ=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useRef","useHistory","useParams","usersAPI","itemsAPI","imageAPI","trainAPI","ArrowForwardIosIcon","ArrowBackIosNewIcon","ModelNode","ClearIcon","AddIcon","RemoveIcon","Workspace","currentUser","type","stage","setStage","title","setTitle","description","setDescription","visibility","setVisibility","start","setStart","end","setEnd","page","setPage","image","setImage","datasetID","setDatasetID","uploadedDataset","setUploadedDataset","workspace","setWorkspace","images","setImages","assignedLabels","setAssignedLabels","viewDataset","setViewDataset","refreshData","setRefreshData","refreshDiagram","setRefreshDiagram","model","setModel","selectedNode","setSelectedNode","configuration","setConfiguration","epochs","training_split","validation_split","test_split","improvement","patience","batch","lr_scheduler","optimiser","loss","addNode","setAddNode","results","setResults","loaded","setLoaded","disableCreate","setDisabledCreate","disableTrain","setDisabledTrain","displayPublic","setDisplayPublic","displayExist","setDisplayExist","modelRef","workspaceID","id","publicInterval","existInterval","history","fetchData","get","data","map","previous","creator","addOpenItems","_id","setUpdated","updated","setBookmarked","bookmarked","setUpvoted","upvoted","setPicture","picture","setUpvotes","upvotes","dataset","fetch","imageFile","then","response","json","state","filename","label","err","current","scrollIntoView","behavior","block","inline","searchFunctionKey","e","key","existingDataset","displayPublicInterval","clearInterval","setInterval","displayExistInterval","previousPage","Date","getTime","nextPage","length","checkPublic","success","value","activation","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","workspaceResponse","bookmarks","toISOString","push","train","formData","labels","node","target","files","i","splice","stateCopy","Number","Math","ceil"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\"\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport imageAPI from '../API/images'\nimport trainAPI from '../API/train'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ModelNode from '../Components/Model-Node';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nconst Workspace = ({currentUser, type}) => {\n    const [stage, setStage] = useState(\"model\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(20)\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [datasetID, setDatasetID] = useState(\"\")\n    const [uploadedDataset, setUploadedDataset] = useState()\n    const [workspace, setWorkspace] = useState([]);\n    const [images, setImages] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState([])\n    const [viewDataset, setViewDataset] = useState(false)\n    const [refreshData, setRefreshData] = useState()\n    const [refreshDiagram, setRefreshDiagram] = useState()\n    const [model, setModel] = useState([])\n    const [selectedNode, setSelectedNode] = useState(0)\n    const [configuration, setConfiguration] = useState({epochs: \"\", training_split: \"\", validation_split: \"\", test_split: \"\", improvement: \"\",\n                                                        patience: \"\", batch: \"\", lr_scheduler: false, optimiser: \"\", loss: \"\"})\n    const [addNode, setAddNode] = useState(false)\n    const [results, setResults] = useState()\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const [disableTrain, setDisabledTrain] = useState(true)\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const modelRef = useRef(null)\n    const workspaceID = useParams().id;\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (type === \"create\") {\n                    const workspace = await usersAPI.get(\"/created?type=workspace\");\n    \n                    workspace.data.data.map((workspace) => {\n                        setWorkspace(previous => [...previous, workspace.title]);\n                    })\n                } else {\n                    const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n\n                    if (workspace.data.data.creator === currentUser.id) {\n                        addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                    }\n\n                    setWorkspace(workspace.data.data);\n                    setUpdated(workspace.data.data.updated);\n                    setBookmarked(workspace.data.data.bookmarked)\n                    setUpvoted(workspace.data.data.upvoted)\n                    setPicture(workspace.data.data.picture)\n                    setUpvotes(workspace.data.data.upvotes)\n                    setDatasetID(workspace.data.data.dataset._id)\n                    setVisibility(workspace.data.data.visibility)\n                    setTitle(workspace.data.data.title)\n                    setDescription(workspace.data.data.description)\n                    setModel(workspace.data.data.model)\n                    setConfiguration(workspace.data.data.configuration)\n\n                    fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.imageFile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(workspace.data.data.dataset)\n                        })\n                }\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (modelRef.current) {\n            modelRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'end',\n                inline: 'end'\n            })\n        }\n    }, [model, addNode])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && datasetID !== \"\") {\n            existingDataset()\n        }\n    }\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*20)\n            setEnd((page-1)*20)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if (page*20 < images.length && images.length > 20) {\n            setPage(state => state+1)\n            setStart((page)*20)\n            setEnd((page+1)*20)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const existingDataset = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?id=${datasetID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${checkPublic.data.data.imageFile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(checkPublic.data.data)\n                            setRefreshData(new Date().getTime())\n                            {model.length === 0 &&\n                                setModel([{type: \"Input\", value: 1, activation: \"\"}])\n                            }\n                        })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const workspaceResponse = await itemsAPI.post(\"/\", {\n                title: title,\n                dataset: uploadedDataset._id,\n                creator: currentUser.id,\n                description: description,\n                picture: imageName,\n                upvotes: [],\n                bookmarks: [],\n                updated: new Date().toISOString(),\n                visibility: visibility,\n                type: \"workspace\"\n            });\n\n            history.push(`/workspace/${workspaceResponse.data.data}`)\n        } catch (err) {}\n    }\n\n    const train = async () => {\n        try {\n            // setDisabledTrain(true)\n            setStage(\"train\")\n    \n            const formData = new FormData();\n        \n            formData.append('epochs', configuration.epochs)\n            formData.append('training_split', configuration.training_split)\n            formData.append('validation_split', configuration.validation_split)\n            formData.append('test_split', configuration.test_split)\n            formData.append('improvement', configuration.improvement)\n            formData.append('patience', configuration.patience)\n            formData.append('batch', configuration.batch)\n            formData.append('lr_scheduler', configuration.lr_scheduler)\n            formData.append('optimiser', configuration.optimiser)\n            formData.append('loss', configuration.loss)\n            formData.append('imageFile', uploadedDataset.imageFile)\n\n            uploadedDataset.labels.map(label => {\n                formData.append('labels[]', label)\n            })\n            model.map(node => {\n                formData.append('activations[]', node.activation)\n                formData.append('units[]', node.value)\n            })\n\n            const response = await trainAPI.post(\"\", formData);\n\n            if (response) {\n                setResults(response)\n                setStage(\"evaluation\")\n            } else {\n                setDisabledTrain(false)\n            }\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <input className=\"create-item-title\"\n                                placeholder=\"Title\"\n                                onChange={e => {setTitle(e.target.value)}}\n                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                value={title} />\n                        <textarea className=\"create-item-description\"\n                                    placeholder=\"Description\"\n                                    onChange={e => {setDescription(e.target.value)}}\n                                    disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                    value={description} />\n                        {workspace.creator === currentUser.id || type === \"create\" &&\n                            <>\n                                <div className=\"create-item-setup\">\n                                    <label className=\"create-item-setup-label\">Picture</label>\n                                    <input className=\"create-item-setup-input\"\n                                            type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {setImage(e.target.files[0])}} />\n                                </div>\n                                <div className=\"create-item-setup\">\n                                    <label className=\"create-item-setup-label\">Public?</label>\n                                    <input type=\"checkbox\" \n                                            onChange={() => {setVisibility(previous => !previous)}}\n                                            checked={visibility} />\n                                </div>\n                            </>\n                        }\n                        <div className=\"sidebar-divided\" />\n                        <input className=\"create-workspace-import-existing\"\n                                placeholder=\"Dataset ID\"\n                                onChange={e => {setDatasetID(e.target.value)}}\n                                onKeyPress={searchFunctionKey}\n                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                value={datasetID} />\n                        <button className=\"create-item-view-dataset\"\n                                onClick={() => {setViewDataset(state => !state)}}>{viewDataset ? \"Hide Dataset\" : \"Show Dataset\"}</button>\n                        {displayPublic && <p className=\"create-item-data-notification\">Dataset not public</p>}\n                        {displayExist && <p className=\"create-item-data-notification\">Dataset does not exist</p>}\n                    </div>\n                    <div className=\"inner\">\n                        {type === \"create\" &&\n                            <>\n                                <div className=\"view-items-top\">\n                                    {workspace.creator === currentUser.id || type === \"create\" ?\n                                        <>\n                                            <h1>Create Workspace</h1>\n                                            <span />\n                                            <button className=\"blue-button\"\n                                                    disabled={disableTrain}\n                                                    onClick={() => {uploadImage()}}>Train</button>\n                                        </>\n                                    :\n                                        <>\n                                            <p>Model</p>\n                                            <p>Evaluation</p>\n                                        </>\n                                    }\n                                </div>\n                                {model.length !== 0 ?\n                                    <div className=\"create-modelling-body\">\n                                        <div className=\"create-model\">\n                                            <div className=\"create-model-diagram\" key={refreshDiagram}>\n                                                {model.map((node, i) => {\n                                                    return (\n                                                        <div key={i}>\n                                                            <div className={\"create-model-diagram-node\"}>\n                                                                <div onClick={() => {setSelectedNode(i)}}>\n                                                                    <ModelNode setSelectedNode={setSelectedNode} type={node.type} value={node.value} selected={i === selectedNode} last={i === model.length-1} />\n                                                                </div>\n                                                                {node.type !== \"Input\" && (workspace.creator === currentUser.id || type === \"create\") &&\n                                                                    <div onClick={() => {{selectedNode === i ?\n                                                                                            setSelectedNode(state => state-1)\n                                                                                        : selectedNode < i ?\n                                                                                            setSelectedNode(state => state)\n                                                                                        : selectedNode > i &&\n                                                                                            <>\n                                                                                                {selectedNode-i === 1 ?\n                                                                                                    setSelectedNode(state => state-1)\n                                                                                                :\n                                                                                                    setSelectedNode(i)\n                                                                                                } \n                                                                                            </>  \n                                                                                        }\n                                                                                        model.splice(i, 1)\n                                                                                        setRefreshDiagram(new Date().getTime())}}>\n                                                                        <ClearIcon className=\"create-model-diagram-remove\" />\n                                                                    </div>\n                                                                }\n                                                            </div>\n                                                            {i === model.length-1 && node.type !== \"Output\" &&\n                                                                <>\n                                                                    {addNode && (workspace.creator === currentUser.id || type === \"create\") ?\n                                                                        <div className=\"create-model-diagram-add\">\n                                                                            <div onClick={() => {setAddNode(false)}}>\n                                                                                <RemoveIcon className=\"create-model-diagram-add-icon\" />\n                                                                            </div>\n                                                                            <div className=\"create-model-diagram-add-options\">\n                                                                                <button onClick={() => {setModel(state => [...state, {\n                                                                                    type: \"Dense\",\n                                                                                    value: 0,\n                                                                                    activation: \"\"\n                                                                                }])\n                                                                                setSelectedNode(model.length)\n                                                                                setAddNode(false)\n                                                                                }}>Dense</button>\n                                                                                {model.length > 1 &&\n                                                                                    <button onClick={() => {\n                                                                                        {uploadedDataset.labels.length === 2 ?\n                                                                                            setModel(state => [...state, {\n                                                                                                type: \"Output\",\n                                                                                                value: 1,\n                                                                                                activation: \"\"\n                                                                                            }])\n                                                                                        :\n                                                                                            setModel(state => [...state, {\n                                                                                                type: \"Output\",\n                                                                                                value: uploadedDataset.labels.length,\n                                                                                                activation: \"\"\n                                                                                            }])\n                                                                                        }\n                                                                                    setSelectedNode(model.length)\n                                                                                    setAddNode(false)\n                                                                                    }}>Output</button>\n                                                                                }\n                                                                            </div>\n                                                                        </div>\n                                                                    :\n                                                                        <div onClick={() => {setAddNode(true)}}>\n                                                                            <AddIcon className=\"create-model-diagram-add-icon\" />\n                                                                        </div>\n                                                                    }\n                                                                </>\n                                                            }\n                                                        </div>\n                                                    )\n                                                })}\n                                                <div ref={modelRef} />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"create-model-selected\">\n                                                <p>{model[selectedNode].type}</p>\n                                                <label>Units</label>\n                                                <input value={model[selectedNode].value} \n                                                        disabled={(model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.creator === currentUser.id || type === \"create\")}\n                                                        onChange={e => {setModel(state => {\n                                                                            const stateCopy = [...state]\n                                                                        \n                                                                            stateCopy[selectedNode] = {\n                                                                                ...stateCopy[selectedNode],\n                                                                                value: Number(e.target.value)\n                                                                            }\n                                                                        \n                                                                            return stateCopy\n                                                                        })\n                                                                        setRefreshDiagram(new Date().getTime())}} />\n                                                {model[selectedNode].type !== \"Input\" &&\n                                                    <>\n                                                        <label>Activation</label>\n                                                        <select value={model[selectedNode].activation} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setModel(state => {\n                                                                                    const stateCopy = [...state]\n                                                                                \n                                                                                    stateCopy[selectedNode] = {\n                                                                                        ...stateCopy[selectedNode],\n                                                                                        activation: e.target.value\n                                                                                    }\n                                                                                \n                                                                                    return stateCopy\n                                                                                })\n                                                                                setRefreshDiagram(new Date().getTime())}}>\n                                                                <option disabled defaultValue value=\"\"></option>\n                                                                <option value=\"sigmoid\">Sigmoid</option>\n                                                                <option value=\"softmax\">Softmax</option>\n                                                                <option value=\"softplus\">Softplus</option>\n                                                                <option value=\"softsign\">Softsign</option>\n                                                                <option value=\"swish\">Swish</option>\n                                                                <option value=\"selu\">Selu</option>\n                                                                <option value=\"tanh\">Tanh</option>\n                                                                <option value=\"elu\">Elu</option>\n                                                                <option value=\"exponential\">Exponential</option>\n                                                                <option value=\"gelu\">Gelu</option>\n                                                                <option value=\"hard_sigmoid\">Hard Sigmoid</option>\n                                                                <option value=\"linear\">Linear</option>\n                                                                <option value=\"relu\">Relu</option>\n                                                        </select>\n                                                    </>\n                                                }  \n                                            </div>\n                                            <div className=\"create-model-configuration\">\n                                                <div className=\"create-model-configuration-option\">\n                                                    <div>\n                                                        <label>Epochs</label>\n                                                        <input value={configuration.epochs}\n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")} \n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    epochs: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Training Split</label>\n                                                        <input value={configuration.training_split} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    training_split: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Validation Split</label>\n                                                        <input value={configuration.validation_split} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    validation_split: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Test Split</label>\n                                                        <input value={configuration.test_split} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    test_split: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Minimum Improvement</label>\n                                                        <input value={configuration.improvement} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    improvement: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Patience</label>\n                                                        <input value={configuration.patience} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    patience: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Batch Size</label>\n                                                        <input value={configuration.batch} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    batch: e.target.value\n                                                                }))}} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Learning Rate Scheduler</label>\n                                                        <input className=\"create-model-configuration-option-checkbox\"\n                                                                type=\"checkbox\" \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    lr_scheduler: !configuration.lr_scheduler\n                                                                }))}}\n                                                                checked={configuration.lr_scheduler} />\n                                                    </div>\n                                                    <div>\n                                                        <label>Optimiser</label>\n                                                        <select value={configuration.optimiser} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    optimiser: e.target.value\n                                                                }))}}>\n                                                            <option disabled defaultValue value=\"\"></option>\n                                                            <option value=\"Adadelta\">Adadelta</option>\n                                                            <option value=\"Adagrad\">Adagrad</option>\n                                                            <option value=\"Adam\">Adam</option>\n                                                            <option value=\"Adamax\">Adamax</option>\n                                                            <option value=\"Ftrl\">Ftrl</option>\n                                                            <option value=\"Nadam\">Nadam</option>\n                                                            <option value=\"RMSprop\">RMSprop</option>\n                                                            <option value=\"SGD\">SGD</option>\n                                                        </select>\n                                                    </div>\n                                                    <div>\n                                                        <label>Loss</label>\n                                                        <select value={configuration.loss} \n                                                                disabled={!(workspace.creator === currentUser.id || type === \"create\")}\n                                                                onChange={e => {setConfiguration(state => ({\n                                                                    ...state,\n                                                                    loss: e.target.value\n                                                                }))}}>\n                                                            <option disabled defaultValue value=\"\"></option>\n                                                            {uploadedDataset.labels.length === 2 &&\n                                                                <>\n                                                                    <option value=\"binary_crossentropy\">Binary Crossentropy</option>\n                                                                    <option value=\"hinge\">Hinge</option>\n                                                                    <option value=\"squared_hinge\">Squared Hinge</option>\n                                                                </>\n                                                            }\n                                                            {uploadedDataset.labels.length > 2 &&\n                                                                <>\n                                                                    <option value=\"categorical_crossentropy\">Categorical Crossentropy</option>\n                                                                    <option value=\"sparse_categorical_crossentropy\">Sparse Categorical Crossentropy</option>\n                                                                    <option value=\"kl_divergence\">Kullback Leibler Divergence</option>\n                                                                </>\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {viewDataset && uploadedDataset &&\n                                            <div className=\"create-model-data\">\n                                                <p className=\"create-item-data-header\">Selected Dataset:</p>\n                                                <p className=\"create-item-data-header-dataset\">{uploadedDataset._id}</p>\n                                                <div className=\"create-model-data-images-list\" key={refreshData}>\n                                                    {images.map((image, i) => {\n                                                        if (i >= start && i < end) {\n                                                            return (\n                                                                <div className=\"create-model-data-image\" key={i}>\n                                                                    <img src={`http://127.0.0.1:5000/files/${uploadedDataset.imageFile}/${image}.jpg`} />\n                                                                    <p>{assignedLabels[i]}</p>\n                                                                </div>\n                                                            )\n                                                        }\n                                                    })}\n                                                </div>\n                                                <div className=\"create-model-data-pagination\">\n                                                    <ArrowBackIosNewIcon className=\"create-model-data-pagination-icon\" onClick={() => {previousPage()}} />\n                                                    <p>Page {page} / {Math.ceil(images.length/20)}</p>\n                                                    <ArrowForwardIosIcon className=\"create-model-data-pagination-icon\" onClick={() => {nextPage()}} />\n                                                </div>\n                                            </div>\n                                        }\n                                    </div>\n                                :\n                                    <>\n                                        {workspace.creator === currentUser.id || type === \"create\" ?\n                                            <p className=\"end-items\">Select a dataset...</p>\n                                        :\n                                            <p className=\"end-items\">No model...</p>\n                                        }\n                                    </> \n                                }\n                            </>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Workspace"]},"metadata":{},"sourceType":"module"}