{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Dataset.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport itemsAPI from '../API/items';\nimport usersAPI from '../API/users';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateDataset = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [normalised, setNormalised] = useState(false);\n  const [encoded, setEncoded] = useState(false);\n  const [dataFile, setDataFile] = useState();\n  const [dataTable, setDataTable] = useState();\n  const [dataAttributes, setDataAttributes] = useState([]);\n  const [targetAttribute, setTargetAttribute] = useState(\"\");\n  const [dataType, setDataType] = useState(\"\");\n  const [maxRows, setMaxRows] = useState();\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [datasets, setDatasets] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState();\n  const [addLabel, setAddLabel] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [refreshData, setRefreshData] = useState();\n  const [refreshLabels, setRefreshLabels] = useState();\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const datasets = await usersAPI.get(\"/created?type=dataset\");\n        datasets.data.data.map(dataset => {\n          setDatasets(state => [...state, dataset.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (dataFile !== undefined) {\n      if (dataType !== \"image\") {\n        const file = dataFile;\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          setDataTable(e.target.result);\n          setMaxRows(e.target.result.slice(e.target.result.indexOf('\\n') + 1).split('\\n').length);\n          setDataAttributes(e.target.result.slice(0, e.target.result.indexOf('\\n')).split(','));\n        };\n\n        reader.readAsText(file);\n      }\n    }\n  }, [dataFile]);\n\n  const next = () => {\n    if (title !== \"\" && description !== \"\" && dataType !== \"\" && !datasets.includes(title)) {\n      setSetupStage(false);\n    }\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const remove = () => {\n    setDataFile();\n    setDataTable();\n    setPage(1);\n    setStart(0);\n    setEnd(30);\n    setRefreshData(new Date().getTime());\n  };\n\n  const uploadImage = async () => {\n    //setDisabledCreate(true)\n    if (dataFile !== undefined && (dataType === \"image\" && !assignedLabels.includes(\"No label\") || dataType === \"value\" && targetAttribute !== \"\")) {\n      const formData = new FormData();\n      const id = new Date().toISOString();\n      formData.append('type', dataType);\n      formData.append('data', dataFile);\n      formData.append('id', id);\n\n      try {\n        console.log('hi');\n        await fileAPI.post(\"/upload\", formData);\n      } catch (err) {}\n\n      if (image) {\n        const formImage = new FormData();\n        formImage.append('image', image);\n\n        try {\n          const imageResponse = await imageAPI.post(\"/upload\", formImage); //uploadDataset(imageResponse.data.data, id)\n        } catch (err) {}\n      } else {//uploadDataset(\"default.png\", id)\n      }\n    } else {\n      setDisabledCreate(false);\n    }\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 30);\n      setEnd((page - 1) * 30);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (dataType !== \"image\" && page * 30 < maxRows && maxRows > 30 || dataType === \"image\" && page * 30 < dataFile.length && dataFile.length > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const uploadDataset = async (imageName, id) => {\n    try {\n      let newDataset = {\n        title: title,\n        datafile: id,\n        dataType: dataType,\n        creator: currentUser.id,\n        description: description,\n        comments: [],\n        picture: imageName,\n        upvotes: [],\n        bookmarks: [],\n        updated: new Date().toISOString(),\n        visibility: visibility,\n        type: \"dataset\"\n      };\n\n      if (dataType === \"value\") {\n        newDataset.target = targetAttribute;\n        newDataset.normalised = normalised;\n        newDataset.encoded = encoded;\n      } else {\n        newDataset.labels = assignedLabels;\n      }\n\n      const datasetResponse = await itemsAPI.post(\"/\", newDataset); //history.push(`/dataset/${datasetResponse.data.data}`)\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-item-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"create-item-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            setSetupStage(true);\n            setStart(0);\n            setEnd(30);\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${!setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Upload Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-body\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-filename\",\n                children: \"Dataset Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                onClick: () => {\n                  next();\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-title\",\n              placeholder: \"Title\",\n              onChange: e => {\n                setTitle(e.target.value);\n              },\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"create-item-description\",\n              placeholder: \"Description\",\n              onChange: e => {\n                setDescription(e.target.value);\n              },\n              value: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"image\",\n                onChange: e => {\n                  setImage(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Public?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setVisibility(previous => !previous);\n                },\n                checked: visibility\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Select data type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: dataType,\n                onChange: e => {\n                  setDataType(e.target.value);\n                  setDataFile();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  defaultValue: true,\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"value\",\n                  children: \"Value Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"image\",\n                  children: \"Image Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this), dataType === \"value\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Normalised?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setNormalised(previous => !previous);\n                },\n                checked: normalised\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Encoded?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setEncoded(previous => !previous);\n                },\n                checked: encoded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), !setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-import\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-import-top\",\n              children: [dataType === \"image\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                accept: \"image/*\",\n                multiple: true,\n                onChange: e => {\n                  setDataFile(e.target.files);\n                  setAssignedLabels(Array(e.target.files.length).fill(\"No label\"));\n                  setPage(1);\n                  setRefreshData(new Date().getTime());\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                accept: \".txt, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n                onChange: e => {\n                  setDataFile(e.target.files[0]);\n                  setPage(1);\n                  setRefreshData(new Date().getTime());\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: disableCreate,\n                onClick: () => {\n                  uploadImage();\n                },\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this), dataType === \"image\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-data\",\n              children: dataFile !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-dataset-labels-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"create-dataset-label-input\",\n                    placeholder: \"Label name\",\n                    onChange: e => {\n                      setAddLabel(e.target.value);\n                    },\n                    value: addLabel\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"blue-button\",\n                    onClick: () => {\n                      addLabel !== \"\" && !labels.includes(addLabel) && setLabels(state => [...state, addLabel]);\n                      setAddLabel(\"\");\n                    },\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-dataset-labels-list\",\n                    children: labels.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No labels created\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 65\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: labels.map((label, i) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"create-dataset-created-label\",\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            children: label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 81\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            onClick: () => {\n                              assignedLabels.map((assignedLabel, j) => {\n                                if (assignedLabel === labels[i]) {\n                                  setAssignedLabels(state => {\n                                    const stateCopy = [...state];\n                                    stateCopy[j] = \"No label\";\n                                    return stateCopy;\n                                  });\n                                }\n                              });\n                              labels.splice(i, 1);\n                              setRefreshLabels(new Date().getTime());\n                            },\n                            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                              className: \"create-dataset-created-label-close\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 317,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 81\n                          }, this)]\n                        }, i, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 77\n                        }, this);\n                      })\n                    }, void 0, false)\n                  }, refreshLabels, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-pagination\",\n                  children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                    className: \"create-item-data-pagination-icon\",\n                    onClick: () => {\n                      previousPage();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Page \", page, \" / \", Math.ceil(dataFile.length / 30)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                    className: \"create-item-data-pagination-icon\",\n                    onClick: () => {\n                      nextPage();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-images\",\n                  children: [...dataFile].map((image, i) => {\n                    if (i >= start && i < end) {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"create-item-data-images-list\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                            src: URL.createObjectURL(image)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            value: assignedLabels[i],\n                            onChange: e => {\n                              setAssignedLabels(state => {\n                                const stateCopy = [...state];\n                                stateCopy[i] = e.target.value;\n                                return stateCopy;\n                              });\n                              setRefreshLabels(new Date().getTime());\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"No label\",\n                              children: \"No label\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 347,\n                              columnNumber: 81\n                            }, this), labels.map((label, j) => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: label,\n                              children: label\n                            }, j, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 349,\n                              columnNumber: 85\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 338,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 73\n                        }, this)\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 69\n                      }, this);\n                    }\n                  })\n                }, refreshData, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: dataFile !== undefined && dataTable !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-information\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"create-item-data-information-label\",\n                    children: [\"File: \", dataFile.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"grey-button create-item-remove\",\n                    onClick: () => {\n                      remove();\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"create-item-data-information-label\",\n                    children: \"Target Attribute\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: targetAttribute,\n                    onChange: e => {\n                      setTargetAttribute(e.target.value);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      defaultValue: true,\n                      value: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 61\n                    }, this), dataAttributes.map((attribute, j) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: attribute,\n                      children: attribute\n                    }, j, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 65\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-item-data-pagination\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                      className: \"create-item-data-pagination-icon\",\n                      onClick: () => {\n                        previousPage();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                      className: \"create-item-data-pagination-icon\",\n                      onClick: () => {\n                        nextPage();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-table\",\n                  children: /*#__PURE__*/_jsxDEV(ViewData, {\n                    dataTable: dataTable,\n                    start: start,\n                    end: end\n                  }, refreshData, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 49\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateDataset, \"GUiTHv208HAmlLMfE6QhWDFO/jQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDataset;\nexport default CreateDataset;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDataset\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Dataset.jsx"],"names":["React","useState","useEffect","useHistory","itemsAPI","usersAPI","fileAPI","imageAPI","ViewData","ArrowForwardIosIcon","ArrowBackIosNewIcon","CloseIcon","CreateDataset","currentUser","setupStage","setSetupStage","title","setTitle","description","setDescription","visibility","setVisibility","normalised","setNormalised","encoded","setEncoded","dataFile","setDataFile","dataTable","setDataTable","dataAttributes","setDataAttributes","targetAttribute","setTargetAttribute","dataType","setDataType","maxRows","setMaxRows","start","setStart","end","setEnd","page","setPage","image","setImage","datasets","setDatasets","labels","setLabels","assignedLabels","setAssignedLabels","addLabel","setAddLabel","loaded","setLoaded","refreshData","setRefreshData","refreshLabels","setRefreshLabels","disableCreate","setDisabledCreate","history","fetchData","get","data","map","dataset","state","err","undefined","file","reader","FileReader","onload","e","target","result","slice","indexOf","split","length","readAsText","next","includes","cancel","goBack","remove","Date","getTime","uploadImage","formData","FormData","id","toISOString","append","console","log","post","formImage","imageResponse","previousPage","nextPage","uploadDataset","imageName","newDataset","datafile","creator","comments","picture","upvotes","bookmarks","updated","type","datasetResponse","value","files","previous","Array","fill","label","i","assignedLabel","j","stateCopy","splice","Math","ceil","URL","createObjectURL","name","attribute"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport itemsAPI from '../API/items'\nimport usersAPI from '../API/users'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CreateDataset = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [normalised, setNormalised] = useState(false);\n    const [encoded, setEncoded] = useState(false);\n    const [dataFile, setDataFile] = useState();\n    const [dataTable, setDataTable] = useState();\n    const [dataAttributes, setDataAttributes] = useState([])\n    const [targetAttribute, setTargetAttribute] = useState(\"\")\n    const [dataType, setDataType] = useState(\"\")\n    const [maxRows, setMaxRows] = useState()\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [datasets, setDatasets] = useState([]);\n    const [labels, setLabels] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState()\n    const [addLabel, setAddLabel] = useState(\"\")\n    const [loaded, setLoaded] = useState(false);\n    const [refreshData, setRefreshData] = useState()\n    const [refreshLabels, setRefreshLabels] = useState()\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const datasets = await usersAPI.get(\"/created?type=dataset\");\n\n                datasets.data.data.map((dataset) => {\n                    setDatasets(state => [...state, dataset.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (dataFile !== undefined) {\n            if (dataType !== \"image\") {\n                const file = dataFile;\n                const reader = new FileReader();\n    \n                reader.onload = function(e) {\n                    setDataTable(e.target.result);\n                    setMaxRows(e.target.result.slice(e.target.result.indexOf('\\n')+1).split('\\n').length)\n                    setDataAttributes(e.target.result.slice(0, e.target.result.indexOf('\\n')).split(','))\n                }\n    \n                reader.readAsText(file)\n            }\n        }\n    }, [dataFile])\n\n    const next = () => {\n        if (title !== \"\" && description !== \"\" && dataType !== \"\" && !datasets.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataFile()\n        setDataTable()\n        setPage(1)\n        setStart(0)\n        setEnd(30)\n        setRefreshData(new Date().getTime())\n    }\n\n    const uploadImage = async () => {\n        //setDisabledCreate(true)\n\n        if (dataFile !== undefined && ((dataType === \"image\" && !assignedLabels.includes(\"No label\")) \n            || (dataType === \"value\" && targetAttribute !== \"\"))) {\n            const formData = new FormData();\n            const id = new Date().toISOString();\n\n            formData.append('type', dataType)\n            formData.append('data', dataFile);\n            formData.append('id', id)\n\n            try {\n                console.log('hi')\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n\n            if (image) {\n                const formImage = new FormData();\n                formImage.append('image', image);\n                \n                try {\n                    const imageResponse = await imageAPI.post(\"/upload\", formImage);\n    \n                    //uploadDataset(imageResponse.data.data, id)\n                } catch (err) {}\n            } else {\n                //uploadDataset(\"default.png\", id)\n            }\n        } else {\n            setDisabledCreate(false)\n        }\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*30)\n            setEnd((page-1)*30)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if ((dataType !== \"image\" && page*30 < maxRows && maxRows > 30) ||\n            (dataType === \"image\" && page*30 < dataFile.length && dataFile.length > 30)) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const uploadDataset = async (imageName, id) => {\n        try {\n            let newDataset = {\n                title: title,\n                datafile: id,\n                dataType: dataType,\n                creator: currentUser.id,\n                description: description,\n                comments: [],\n                picture: imageName,\n                upvotes: [],\n                bookmarks: [],\n                updated: new Date().toISOString(),\n                visibility: visibility,\n                type: \"dataset\"\n            }\n\n            if (dataType === \"value\") {\n                newDataset.target = targetAttribute\n                newDataset.normalised = normalised\n                newDataset.encoded = encoded\n            } else {\n                newDataset.labels = assignedLabels\n            }\n\n            const datasetResponse = await itemsAPI.post(\"/\", newDataset);\n\n            //history.push(`/dataset/${datasetResponse.data.data}`)\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"sidebar-body\">\n                    <div className=\"create-sidebar\">\n                        <h1>Create Dataset</h1> \n                        <div className=\"create-item-header\">\n                            <p className=\"create-item-title\">{title}</p> \n                        </div>\n                        <button className={`${\"create-sidebar-stage\"} ${setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {\n                                    setSetupStage(true)\n                                    setStart(0)\n                                    setEnd(30)\n                                }}>Setup</button>\n                        <button className={`${\"create-sidebar-stage\"} ${!setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled>Upload Data</button>\n                    </div>\n                    <div className=\"inner-body\">\n                        <>\n                            {setupStage &&\n                                <div className=\"create-item-setup-information\">\n                                    <div className=\"create-item-nav\">   \n                                        <p className=\"create-item-filename\">Dataset Information</p>\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                onClick={() => {next()}}>Next</button>\n                                    </div>\n                                    <input className=\"create-item-title\"\n                                            placeholder=\"Title\"\n                                            onChange={e => {setTitle(e.target.value)}}\n                                            value={title} />\n                                    <textarea className=\"create-item-description\"\n                                                placeholder=\"Description\"\n                                                onChange={e => {setDescription(e.target.value)}}\n                                                value={description} />\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Picture</label>\n                                        <input type=\"file\" \n                                                name=\"image\" \n                                                onChange={e => {setImage(e.target.files[0])}} />\n                                    </div>\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Public?</label>\n                                        <input type=\"checkbox\" \n                                                onChange={() => {setVisibility(previous => !previous)}}\n                                                checked={visibility} />\n                                    </div>\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Select data type</label>\n                                        <select value={dataType} onChange={e => {\n                                            setDataType(e.target.value)\n                                            setDataFile()\n                                        }}>\n                                            <option disabled defaultValue value=\"\"></option>\n                                            <option value=\"value\">Value Data</option>\n                                            <option value=\"image\">Image Data</option>\n                                        </select>\n                                    </div>\n                                    {dataType === \"value\" &&\n                                        <div className=\"create-item-setup\">\n                                            <label className=\"create-item-setup-label\">Normalised?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setNormalised(previous => !previous)}}\n                                                    checked={normalised} />\n                                            <label className=\"create-item-setup-label\">Encoded?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setEncoded(previous => !previous)}}\n                                                    checked={encoded} />\n                                        </div>\n                                    }\n                                </div>\n                            }\n                            {!setupStage &&\n                                <div className=\"create-item-import\">\n                                    <div className=\"create-item-import-top\">\n                                        {dataType === \"image\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    accept=\"image/*\"\n                                                    multiple\n                                                    onChange={e => {\n                                                        setDataFile(e.target.files)\n                                                        setAssignedLabels(Array(e.target.files.length).fill(\"No label\"))\n                                                        setPage(1)\n                                                        setRefreshData(new Date().getTime())\n                                                    }} />\n                                        :\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    accept=\".txt, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                                    onChange={e => {\n                                                        setDataFile(e.target.files[0])\n                                                        setPage(1)\n                                                        setRefreshData(new Date().getTime())\n                                                    }} />\n                                        }\n                                        <span />\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                disabled={disableCreate}\n                                                onClick={() => {uploadImage()}}>Create</button>\n                                    </div>\n                                    {dataType === \"image\" ?\n                                        <div className=\"create-item-data\">\n                                            {dataFile !== undefined &&\n                                                <>\n                                                    <div className=\"create-dataset-labels-row\">\n                                                        <input className=\"create-dataset-label-input\"\n                                                                placeholder=\"Label name\"\n                                                                onChange={e => {setAddLabel(e.target.value)}}\n                                                                value={addLabel} />\n                                                        <button className=\"blue-button\"\n                                                                onClick={() => {\n                                                                    addLabel !== \"\" && !labels.includes(addLabel) && setLabels(state => [...state, addLabel])\n                                                                    setAddLabel(\"\")\n                                                                }}>Add</button>\n                                                        <div className=\"create-dataset-labels-list\" key={refreshLabels}>\n                                                            {labels.length === 0 ?\n                                                                <p>No labels created</p>\n                                                            :\n                                                                <>\n                                                                    {labels.map((label, i) => {\n                                                                        return (\n                                                                            <div className=\"create-dataset-created-label\" key={i}>\n                                                                                <p>{label}</p>\n                                                                                <div onClick={() => {\n                                                                                    assignedLabels.map((assignedLabel, j) => {\n                                                                                        if (assignedLabel === labels[i]) {\n                                                                                            setAssignedLabels(state => {\n                                                                                                const stateCopy = [...state]\n                                                                                            \n                                                                                                stateCopy[j] = \"No label\"\n                                                                                            \n                                                                                                return stateCopy\n                                                                                            })\n                                                                                        }\n                                                                                    })\n                                                                                    labels.splice(i, 1)\n                                                                                    setRefreshLabels(new Date().getTime())\n                                                                                }}>\n                                                                                    <CloseIcon className=\"create-dataset-created-label-close\" /> \n                                                                                </div>\n                                                                            </div>\n                                                                        )\n                                                                    })}\n                                                                </>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"create-item-data-pagination\">\n                                                        <ArrowBackIosNewIcon className=\"create-item-data-pagination-icon\" onClick={() => {previousPage()}} />\n                                                        <p>Page {page} / {Math.ceil(dataFile.length/30)}</p>\n                                                        <ArrowForwardIosIcon className=\"create-item-data-pagination-icon\" onClick={() => {nextPage()}} />\n                                                    </div>\n                                                    <div className=\"create-item-data-images\" key={refreshData}>\n                                                        {[...dataFile].map((image, i) => {\n                                                            if (i >= start && i < end) {\n                                                                return (\n                                                                    <div className=\"create-item-data-images-list\" key={i}>\n                                                                        <div>\n                                                                            <img src={URL.createObjectURL(image)} />\n                                                                            <select value={assignedLabels[i]}\n                                                                                    onChange={e => {setAssignedLabels(state => {\n                                                                                                const stateCopy = [...state]\n                                                                                            \n                                                                                                stateCopy[i] = e.target.value\n                                                                                            \n                                                                                                return stateCopy\n                                                                                            })\n                                                                                            setRefreshLabels(new Date().getTime())}}>\n                                                                                <option value=\"No label\">No label</option>\n                                                                                {labels.map((label, j) => \n                                                                                    <option value={label} key={j}>{label}</option>\n                                                                                )}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                )\n                                                            }\n                                                        })}\n                                                    </div>\n                                                </>\n                                            }\n                                        </div>\n                                    :\n                                        <>\n                                            {dataFile !== undefined && dataTable !== undefined &&\n                                                <div className=\"create-item-data\">\n                                                    <div className=\"create-item-data-information\">\n                                                        <p className=\"create-item-data-information-label\">File: {dataFile.name}</p>\n                                                        <button className=\"grey-button create-item-remove\"\n                                                                onClick={() => {remove()}}>Remove</button>\n                                                        <p className=\"create-item-data-information-label\">Target Attribute</p>\n                                                        <select value={targetAttribute}\n                                                                onChange={e => {setTargetAttribute(e.target.value)}}>\n                                                            <option defaultValue value=\"\"></option>\n                                                            {dataAttributes.map((attribute, j) => \n                                                                <option value={attribute} key={j}>{attribute}</option>\n                                                            )}\n                                                        </select>\n                                                        <span />\n                                                        <div className=\"create-item-data-pagination\">\n                                                            <ArrowBackIosNewIcon className=\"create-item-data-pagination-icon\" onClick={() => {previousPage()}} />\n                                                            <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                            <ArrowForwardIosIcon className=\"create-item-data-pagination-icon\" onClick={() => {nextPage()}} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"create-item-data-table\">\n                                                        <ViewData dataTable={dataTable} start={start} end={end} key={refreshData} />\n                                                    </div>\n                                                </div>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                            }\n                        </>\n                    </div>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default CreateDataset\n"]},"metadata":{},"sourceType":"module"}