{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openProjectsContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OpenProjectsContext = /*#__PURE__*/createContext();\n\nconst OpenProjectsContextProvider = props => {\n  _s();\n\n  const [openProjects, setOpenProjects] = useState([]);\n  useEffect(() => {\n    const localData = JSON.parse(localStorage.getItem('openProjects'));\n\n    if (localData !== null) {\n      setOpenProjects(localData);\n    }\n  }, []);\n\n  const addOpenProjects = (id, title) => {\n    if (openProjects.filter(project => project.id.match(id)).length === 0) {\n      setOpenProjects([{\n        id: id,\n        title: title\n      }, ...openProjects]);\n    }\n  };\n\n  const removeOpenProjects = id => {\n    setOpenProjects(openProjects.filter(project => project.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('openProjects', JSON.stringify(openProjects));\n  }, [openProjects]);\n  return /*#__PURE__*/_jsxDEV(OpenProjectsContext.Provider, {\n    value: {\n      openProjects,\n      addOpenProjects,\n      removeOpenProjects\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OpenProjectsContextProvider, \"vMV7E2OYGfDKPx7yZ9xahOI5UmE=\");\n\n_c = OpenProjectsContextProvider;\nexport default OpenProjectsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenProjectsContextProvider\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openProjectsContext.js"],"names":["React","createContext","useEffect","useState","OpenProjectsContext","OpenProjectsContextProvider","props","openProjects","setOpenProjects","localData","JSON","parse","localStorage","getItem","addOpenProjects","id","title","filter","project","match","length","removeOpenProjects","setItem","stringify","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;;AAEA,OAAO,MAAMC,mBAAmB,gBAAGH,aAAa,EAAzC;;AAEP,MAAMI,2BAA2B,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAlB;;AAEA,QAAIJ,SAAS,KAAK,IAAlB,EAAwB;AACpBD,MAAAA,eAAe,CAACC,SAAD,CAAf;AACH;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,eAAe,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACnC,QAAIT,YAAY,CAACU,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACH,EAAR,CAAWI,KAAX,CAAiBJ,EAAjB,CAA/B,EAAqDK,MAArD,KAAgE,CAApE,EAAuE;AACnEZ,MAAAA,eAAe,CAAC,CAAC;AACbO,QAAAA,EAAE,EAAEA,EADS;AAEbC,QAAAA,KAAK,EAAEA;AAFM,OAAD,EAGb,GAAGT,YAHU,CAAD,CAAf;AAIH;AACJ,GAPD;;AASA,QAAMc,kBAAkB,GAAIN,EAAD,IAAQ;AAC/BP,IAAAA,eAAe,CAACD,YAAY,CAACU,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAA9C,CAAD,CAAf;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACU,OAAb,CAAqB,cAArB,EAAqCZ,IAAI,CAACa,SAAL,CAAehB,YAAf,CAArC;AACH,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAACA,MAAAA,YAAD;AAAeO,MAAAA,eAAf;AAAgCO,MAAAA;AAAhC,KAArC;AAAA,cACKf,KAAK,CAACkB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCD;;GAAMnB,2B;;KAAAA,2B;AAmCN,eAAeA,2BAAf","sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\n\nexport const OpenProjectsContext = createContext()\n\nconst OpenProjectsContextProvider = (props) => {\n    const [openProjects, setOpenProjects] = useState([]);\n\n    useEffect(() => {\n        const localData = JSON.parse(localStorage.getItem('openProjects'));\n        \n        if (localData !== null) {\n            setOpenProjects(localData)\n        }\n    }, [])\n\n    const addOpenProjects = (id, title) => {\n        if (openProjects.filter(project => project.id.match(id)).length === 0) {\n            setOpenProjects([{\n                id: id,\n                title: title\n            }, ...openProjects]);\n        }\n    }\n\n    const removeOpenProjects = (id) => {\n        setOpenProjects(openProjects.filter(project => project.id !== id))\n    }\n\n    useEffect(() => {\n        localStorage.setItem('openProjects', JSON.stringify(openProjects));\n    }, [openProjects])\n\n    return (\n        <OpenProjectsContext.Provider value={{openProjects, addOpenProjects, removeOpenProjects}}>\n            {props.children}\n        </OpenProjectsContext.Provider>\n    )\n}\n\nexport default OpenProjectsContextProvider"]},"metadata":{},"sourceType":"module"}