{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Row-Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport globalAPI from '../API/global';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WorkspaceRowCard = _ref => {\n  _s();\n\n  let {\n    item,\n    created,\n    creator,\n    currentUserID\n  } = _ref;\n  const [bookmarked, setBookmarked] = useState(item.bookmarked);\n  const [upvoted, setUpvoted] = useState(item.upvoted);\n  const [upvotes, setUpvotes] = useState(item.upvotes);\n  const [visibility, setVisibility] = useState(item.visibility);\n  const {\n    addOpenItems\n  } = useContext(OpenItemsContext);\n  const [date, setDate] = useState(\"\");\n  useEffect(() => {\n    const updatedDate = new Date(item.updated);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n    } else {\n      setDate(\"Updated just now\");\n    }\n  }, []);\n\n  const addHeader = () => {\n    if (item.creator === currentUserID) {\n      addOpenItems(item._id, item.title, item.type);\n    }\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await globalAPI.put(`/bookmark/${item._id}?type=${item.type}&state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await globalAPI.put(`/visibility/${item._id}?type=${item.type}&state=${visibility}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-row-card\",\n    onClick: () => {\n      addHeader();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/images/${item.picture}`,\n        className: \"item-row-card-picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-row-card-information\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-row-card-heading\",\n        children: [item.type === \"workspace\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/workspace.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3000/dataset.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`,\n          className: \"item-row-card-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!created && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-row-card-meta\",\n          children: creator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-row-card-meta\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!created && item.creator !== currentUserID && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n        className: `item-row-card-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n        onClick: () => {\n          updateBookmark();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n        className: `item-row-card-icon ${upvoted ? \"blue\" : \"grey\"}`,\n        onClick: () => {\n          updateUpvote();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `item-row-card-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n        children: upvotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), created && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n          className: \"item-row-card-visibility\",\n          onClick: () => {\n            updateVisibility();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n          className: \"item-row-card-visibility\",\n          onClick: () => {\n            updateVisibility();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WorkspaceRowCard, \"av9E32T8fzJrfVZ+oN2ZLgJau8M=\");\n\n_c = WorkspaceRowCard;\nexport default WorkspaceRowCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkspaceRowCard\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Item-Row-Card.jsx"],"names":["React","useState","useEffect","useContext","Link","OpenItemsContext","BookmarkIcon","globalAPI","ThumbUpIcon","VisibilityOffIcon","VisibilityIcon","WorkspaceRowCard","item","created","creator","currentUserID","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","visibility","setVisibility","addOpenItems","date","setDate","updatedDate","Date","updated","currentDate","getTime","Math","floor","toString","addHeader","_id","title","type","updateUpvote","put","state","err","updateBookmark","updateVisibility","picture"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport globalAPI from '../API/global'\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst WorkspaceRowCard = ({item, created, creator, currentUserID}) => {\n    const [bookmarked, setBookmarked] = useState(item.bookmarked)\n    const [upvoted, setUpvoted] = useState(item.upvoted)\n    const [upvotes, setUpvotes] = useState(item.upvotes)\n    const [visibility, setVisibility] = useState(item.visibility)\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const [date, setDate] = useState(\"\");\n\n    useEffect(() => {\n        const updatedDate = new Date(item.updated);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n        } else {\n            setDate(\"Updated just now\")\n        }\n    }, [])\n\n    const addHeader = () => {\n        if (item.creator === currentUserID) {\n            addOpenItems(item._id, item.title, item.type)\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${item._id}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${item._id}?type=${item.type}&state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${item._id}?type=${item.type}&state=${visibility}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    return (\n        <div className=\"item-row-card\" onClick={() => {addHeader()}}>\n            <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`}>\n                <img src={`http://localhost:4000/images/${item.picture}`} className=\"item-row-card-picture\" />\n            </Link>\n            <div className=\"item-row-card-information\">\n                <div className=\"item-row-card-heading\">\n                    {item.type === \"workspace\" ? <img src=\"http://localhost:3000/workspace.png\" /> : <img src=\"http://localhost:3000/dataset.png\" />}\n                    <Link to={item.type === \"workspace\" ? `/workspace/${item._id}` : `/dataset/${item._id}`} className=\"item-row-card-title\">{item.title}</Link>\n                </div>\n                <div>\n                    {!created && <p className=\"item-row-card-meta\">{creator}</p>}\n                    <p className=\"item-row-card-meta\">{date}</p>\n                </div>\n            </div>\n            <div>\n                {!created && item.creator !== currentUserID && <BookmarkIcon className={`item-row-card-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                <ThumbUpIcon className={`item-row-card-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                <p className={`item-row-card-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                {created && \n                    <>\n                        {visibility ? \n                            <VisibilityIcon className=\"item-row-card-visibility\" onClick={() => {updateVisibility()}} />\n                        :\n                            <VisibilityOffIcon className=\"item-row-card-visibility\" onClick={() => {updateVisibility()}} />\n                        }\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default WorkspaceRowCard"]},"metadata":{},"sourceType":"module"}