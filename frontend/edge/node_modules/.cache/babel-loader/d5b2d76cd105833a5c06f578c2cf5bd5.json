{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport usersAPI from '../API/users';\nimport itemsAPI from '../API/items';\nimport imageAPI from '../API/images';\nimport DataTable from '../Components/Data-Table';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateWorkspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [dataTable, setDataTable] = useState();\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [maxRows, setMaxRows] = useState();\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [uploadedDataset, setUploadedDataset] = useState();\n  const [workspaces, setWorkspaces] = useState([]);\n  const [images, setImages] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState([]);\n  const [refreshData, setRefreshData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspaces = await usersAPI.get(\"/created?type=workspace\");\n        workspaces.data.data.map(workspace => {\n          setWorkspaces(previous => [...previous, workspace.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const next = () => {\n    if (setupStage && (title !== \"\" || description !== \"\") && !workspaces.includes(title)) {\n      setSetupStage(false);\n    }\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const remove = () => {\n    setDataID(\"\");\n    setDataTable();\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const existingWorkspace = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        if (checkPublic.data.data.dataType === \"value\") {\n          fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n            setDataTable(text);\n            setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n            setUploadedDataset(checkPublic.data.data);\n          });\n        } else {\n          fetch(`http://127.0.0.1:5000/files/${dataID}/labels.json`).then(response => response.json()).then(images => {\n            images.map(image => {\n              setImages(state => [...state, image.filename]);\n              setAssignedLabels(state => [...state, image.label]);\n            });\n            setUploadedDataset(checkPublic.data.data);\n          });\n        }\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 30);\n      setEnd((page - 1) * 30);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (uploadedDataset.dataType === \"value\" && page * 30 < maxRows && maxRows > 30 || uploadedDataset.dataType === \"image\" && page * 30 < images.length && images.length > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const workspaceResponse = await itemsAPI.post(\"/\", {\n        title: title,\n        dataset: uploadedDataset._id,\n        creator: currentUser.id,\n        description: description,\n        experiments: [],\n        picture: imageName,\n        upvotes: [],\n        comments: [],\n        bookmarks: [],\n        updated: new Date().toISOString(),\n        visibility: visibility,\n        type: \"workspace\"\n      });\n      history.push(`/workspace/${workspaceResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Workspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-item-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"create-item-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            setSetupStage(true);\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${!setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Select Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-body\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-data-information-label\",\n                children: \"Workspace Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                onClick: () => {\n                  next();\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-title\",\n              placeholder: \"Title\",\n              onChange: e => {\n                setTitle(e.target.value);\n              },\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"create-item-description\",\n              placeholder: \"Description\",\n              onChange: e => {\n                setDescription(e.target.value);\n              },\n              value: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"image\",\n                onChange: e => {\n                  setImage(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Public?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setVisibility(previous => !previous);\n                },\n                checked: visibility\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this), !setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-import\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-import-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"create-workspace-import-existing\",\n                placeholder: \"Dataset ID\",\n                onChange: e => {\n                  setDataID(e.target.value);\n                },\n                value: dataID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: dataID === \"\",\n                onClick: () => {\n                  existingWorkspace();\n                  setRefreshData(new Date().getTime());\n                },\n                children: \"Import\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: disableCreate,\n                onClick: () => {\n                  uploadImage();\n                },\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this), console.log(uploadedDataset), dataID !== \"\" && uploadedDataset !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-data-information\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"create-item-data-information-label\",\n                  children: [\"Data: \", uploadedDataset.datafile]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"grey-button create-item-remove\",\n                  onClick: () => {\n                    remove();\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-table-pagination\",\n                  children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                    className: \"create-item-data-table-pagination-icon\",\n                    onClick: () => {\n                      previousPage();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 53\n                  }, this), uploadData.dataType === \"value\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 57\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Page \", page, \" / \", Math.ceil(images.length / 30)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                    className: \"create-item-data-table-pagination-icon\",\n                    onClick: () => {\n                      nextPage();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 45\n              }, this), uploadedDataset.dataType === \"value\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-data-table\",\n                children: /*#__PURE__*/_jsxDEV(DataTable, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshData, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-data-images\",\n                children: images.map((image, i) => {\n                  if (i >= start && i < end) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item-data-images-list\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `http://127.0.0.1:5000/files/${uploadedData.datafile}/${image}.jpg`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: assignedLabels[i]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 69\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 65\n                    }, this);\n                  }\n                })\n              }, refreshData, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 41\n            }, this), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"create-item-data-public\",\n              children: \"Dataset not public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 55\n            }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"create-item-data-public\",\n              children: \"Dataset does not exist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateWorkspace, \"7qVxVJkRpvCx4tYz8HGEK+6NIt8=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateWorkspace;\nexport default CreateWorkspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWorkspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Workspace.jsx"],"names":["React","useState","useEffect","useRef","useHistory","usersAPI","itemsAPI","imageAPI","DataTable","ArrowForwardIosIcon","ArrowBackIosNewIcon","CreateWorkspace","currentUser","setupStage","setSetupStage","title","setTitle","description","setDescription","visibility","setVisibility","dataTable","setDataTable","start","setStart","end","setEnd","maxRows","setMaxRows","page","setPage","image","setImage","dataID","setDataID","uploadedDataset","setUploadedDataset","workspaces","setWorkspaces","images","setImages","assignedLabels","setAssignedLabels","refreshData","setRefreshData","loaded","setLoaded","disableCreate","setDisabledCreate","displayPublic","setDisplayPublic","displayExist","setDisplayExist","publicInterval","existInterval","history","fetchData","get","data","map","workspace","previous","err","next","includes","cancel","goBack","remove","displayPublicInterval","clearInterval","current","setInterval","displayExistInterval","existingWorkspace","checkPublic","success","dataType","fetch","then","response","text","slice","indexOf","split","length","json","state","filename","label","previousPage","Date","getTime","nextPage","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","workspaceResponse","dataset","_id","creator","id","experiments","picture","upvotes","comments","bookmarks","updated","toISOString","type","push","e","target","value","files","console","log","undefined","datafile","Math","ceil","i","uploadedData"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport imageAPI from '../API/images'\nimport DataTable from '../Components/Data-Table'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\nconst CreateWorkspace = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [dataTable, setDataTable] = useState();\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [maxRows, setMaxRows] = useState()\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [dataID, setDataID] = useState(\"\")\n    const [uploadedDataset, setUploadedDataset] = useState()\n    const [workspaces, setWorkspaces] = useState([]);\n    const [images, setImages] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState([])\n    const [refreshData, setRefreshData] = useState()\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspaces = await usersAPI.get(\"/created?type=workspace\");\n\n                workspaces.data.data.map((workspace) => {\n                    setWorkspaces(previous => [...previous, workspace.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const next = () => {\n        if (setupStage && (title !== \"\" || description !== \"\") && !workspaces.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataID(\"\")\n        setDataTable()\n    }\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const existingWorkspace = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                if (checkPublic.data.data.dataType === \"value\") {\n                    fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n                        .then(response => response.text())\n                        .then(text => {\n                            setDataTable(text)\n                            setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                            setUploadedDataset(checkPublic.data.data)\n                        })\n                } else {\n                    fetch(`http://127.0.0.1:5000/files/${dataID}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(checkPublic.data.data)\n                        })\n                }\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*30)\n            setEnd((page-1)*30)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if ((uploadedDataset.dataType === \"value\" && page*30 < maxRows && maxRows > 30) ||\n            (uploadedDataset.dataType === \"image\" && page*30 < images.length && images.length > 30)) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const workspaceResponse = await itemsAPI.post(\"/\", {\n                title: title,\n                dataset: uploadedDataset._id,\n                creator: currentUser.id,\n                description: description,\n                experiments: [],\n                picture: imageName,\n                upvotes: [],\n                comments: [],\n                bookmarks: [],\n                updated: new Date().toISOString(),\n                visibility: visibility,\n                type: \"workspace\"\n            });\n\n            history.push(`/workspace/${workspaceResponse.data.data}`)\n        } catch (err) {}\n    }\n    \n    return (\n        <>\n            {loaded &&\n                <div className=\"sidebar-body\">\n                    <div className=\"create-sidebar\">\n                        <h1>Create Workspace</h1> \n                        <div className=\"create-item-header\">\n                            <p className=\"create-item-title\">{title}</p> \n                        </div>\n                        <button className={`${\"create-sidebar-stage\"} ${setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"create-sidebar-stage\"} ${!setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled>Select Dataset</button>\n                    </div>\n                    <div className=\"inner-body\">\n                        <>\n                            {setupStage &&\n                                <div className=\"create-item-setup-information\">\n                                    <div className=\"create-item-nav\">   \n                                        <p className=\"create-item-data-information-label\">Workspace Information</p>\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                onClick={() => {next()}}>Next</button>\n                                    </div>\n                                    <input className=\"create-item-title\"\n                                            placeholder=\"Title\"\n                                            onChange={e => {setTitle(e.target.value)}}\n                                            value={title} />\n                                    <textarea className=\"create-item-description\"\n                                                placeholder=\"Description\"\n                                                onChange={e => {setDescription(e.target.value)}}\n                                                value={description} />\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Picture</label>\n                                        <input type=\"file\" \n                                                name=\"image\" \n                                                onChange={e => {setImage(e.target.files[0])}} />\n                                    </div>\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Public?</label>\n                                        <input type=\"checkbox\" \n                                                onChange={() => {setVisibility(previous => !previous)}}\n                                                checked={visibility} />\n                                    </div>\n                                </div>\n                            }\n                            {!setupStage &&\n                                <div className=\"create-item-import\">\n                                    <div className=\"create-item-import-top\">\n                                        <input className=\"create-workspace-import-existing\"\n                                                placeholder=\"Dataset ID\"\n                                                onChange={e => {setDataID(e.target.value)}}\n                                                value={dataID} />\n                                        <button className=\"blue-button\"\n                                                disabled={dataID === \"\"}\n                                                onClick={() => {\n                                                    existingWorkspace()\n                                                    setRefreshData(new Date().getTime())\n                                                }}>Import</button>\n                                        <span />\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                disabled={disableCreate}\n                                                onClick={() => {uploadImage()}}>Create</button>\n                                    </div>\n                                    {console.log(uploadedDataset)}\n                                    {dataID !== \"\" && uploadedDataset !== undefined &&\n                                        <div className=\"create-item-data\">\n                                            <div className=\"create-item-data-information\">\n                                                <p className=\"create-item-data-information-label\">Data: {uploadedDataset.datafile}</p> \n                                                <button className=\"grey-button create-item-remove\"\n                                                        onClick={() => {remove()}}>Remove</button>\n                                                <span />\n                                                <div className=\"create-item-data-table-pagination\">\n                                                    <ArrowBackIosNewIcon className=\"create-item-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                    {uploadData.dataType ===\"value\" ?\n                                                        <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                    :\n                                                        <p>Page {page} / {Math.ceil(images.length/30)}</p>\n                                                    }\n                                                    <ArrowForwardIosIcon className=\"create-item-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                                </div>\n                                            </div>\n                                            {uploadedDataset.dataType === \"value\" ?\n                                                <div className=\"create-item-data-table\">\n                                                    <DataTable dataTable={dataTable} start={start} end={end} key={refreshData} />\n                                                </div>\n                                            :\n                                                <div className=\"create-item-data-images\" key={refreshData}>\n                                                    {images.map((image, i) => {\n                                                        if (i >= start && i < end) {\n                                                            return (\n                                                                <div className=\"item-data-images-list\" key={i}>\n                                                                    <div>\n                                                                        <img src={`http://127.0.0.1:5000/files/${uploadedData.datafile}/${image}.jpg`} />\n                                                                        <p>{assignedLabels[i]}</p>\n                                                                    </div>\n                                                                </div>\n                                                            )\n                                                        }\n                                                    })}\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    {displayPublic && <p className=\"create-item-data-public\">Dataset not public</p>}\n                                    {displayExist && <p className=\"create-item-data-public\">Dataset does not exist</p>}\n                                </div>\n                            }\n                        </>\n                    </div>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default CreateWorkspace\n"]},"metadata":{},"sourceType":"module"}