{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport workspacesAPI from '../API/workspaces';\nimport globalAPI from '../API/global';\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [noData, setNoData] = useState();\n  const [workspace, setWorkspace] = useState();\n  const [dataTable, setDataTable] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [changedData, setChangedData] = useState(false);\n  const [changedSettings, setChangedSettings] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [copyData, setCopyData] = useState(true);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [visibility, setVisibility] = useState();\n  const [comments, setComments] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [section, setSection] = useState(\"data\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const {\n    addOpenItems\n  } = useContext(OpenItemsContext);\n  const copyInterval = useRef(0);\n  const workspaceID = useParams().id;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspace = await workspacesAPI.get(`/${workspaceID}`);\n        const comments = await globalAPI.get(`/comment/${workspaceID}?type=workspace`);\n\n        if (workspace.data.data.creator === currentUser.id) {\n          addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n        }\n\n        setWorkspace(workspace.data.data);\n        setBookmarked(workspace.data.data.bookmarked);\n        setUpvoted(workspace.data.data.upvoted);\n        setUpvotes(workspace.data.data.upvotes);\n        setVisibility(workspace.data.data.visibility);\n        setTitle(workspace.data.data.title);\n        setDescription(workspace.data.data.description);\n        setComments(comments.data.data);\n        fetch(`http://127.0.0.1:5000/files/${workspace.data.data.workspace.dataset.data}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setExist(true);\n          setNoData(false);\n          setLoaded(true);\n        }).catch(function () {\n          setExist(true);\n          setNoData(true);\n          setLoaded(true);\n        });\n      } catch (err) {\n        setExist(false);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(workspace.updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded]);\n\n  const existingWorkspace = () => {\n    fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n      setDataTable(text);\n    });\n  };\n\n  const copiedInterval = () => {\n    clearInterval(copyInterval.current);\n    navigator.clipboard.writeText(workspace.data);\n    setCopyData(false);\n    copyInterval.current = setInterval(() => {\n      setCopyData(true);\n    }, 800);\n    return () => {\n      clearInterval(copyInterval.current);\n    };\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await workspacesAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await workspacesAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await workspacesAPI.put(`/visibility/${workspace._id}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const addComment = async e => {\n    e.preventDefault();\n\n    try {\n      await workspacesAPI.put(`/comment/${workspaceID}`, {\n        comment: comment\n      });\n      setComments([{\n        user: {\n          name: currentUser.name\n        },\n        comment: comment\n      }, ...comments]);\n      setComment(\"\");\n    } catch (err) {}\n  };\n\n  const commentDate = date => {\n    const updatedDate = new Date(date);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`;\n    } else {\n      return \"Posted just now\";\n    }\n  };\n\n  const updateSettings = () => {};\n\n  const deleteWorkspace = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataset-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataset-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"dataset-picture\",\n            src: `http://localhost:4000/images/${picture}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), workspace.self && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"dataset-image-input\",\n            type: \"file\",\n            name: \"image\",\n            onChange: e => {\n              setImage(e.target.files[0]);\n              {\n                !changedSettings && setChangedSettings(true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dataset-heading\",\n            children: workspace.self ? /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"dataset-title-input\",\n              placeholder: \"Title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/workspace.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: workspace.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [!workspace.self && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"dataset-meta\",\n              children: workspace.creatorName.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"dataset-meta\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), !workspace.self && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n              className: `dataset-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateBookmark();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 53\n            }, this), workspace.self && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                className: \"dataset-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                className: \"dataset-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 45\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              className: `dataset-icon ${upvoted ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateUpvote();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `dataset-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n              children: upvotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), workspace.self ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"dataset-description-input\",\n              placeholder: \"Description\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dataset-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dark-grey-button dataset-delete\",\n                onClick: e => {\n                  deleteDataset(e);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: !changedSettings,\n                onClick: e => {\n                  updateSettings(e);\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dataset-description\",\n            children: workspace.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"dataset-select\",\n            onChange: e => {\n              setSection(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"data\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"workspace\",\n              children: \"Workspaces\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comment\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataset-bottom\",\n          children: section === \"data\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: noData ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-exist\",\n              children: \"Cannot find dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"data\",\n                  onChange: e => {\n                    setDataFile(e.target.files[0]);\n                    setChangedData(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button dataset-replace-button\",\n                  onClick: () => {\n                    setDataFile(undefined);\n                    setChangedData(false);\n                  },\n                  disabled: !changedData,\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button dataset-replace-button\",\n                  disabled: !changedData,\n                  onClick: e => {\n                    replaceData(e);\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dataset-copy\",\n                  children: [copyData ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Data ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 65\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Copied\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 82\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: !copyData,\n                    onClick: () => {\n                      copiedInterval();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                      className: \"dataset-copy-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `http://127.0.0.1:5000/files/${workspace.dataset.data}.csv`,\n                  download: true,\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-data-table-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Row number\",\n                  value: row,\n                  onChange: e => {\n                    setRow(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    fetchRow();\n                  },\n                  className: \"blue-button dataset-data-fetch\",\n                  children: \"Fetch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    cancelRow();\n                  },\n                  className: \"white-button dataset-data-cancel-fetch\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"dataset-data-table-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"dataset-data-table-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-data-table\",\n                children: /*#__PURE__*/_jsxDEV(ViewData, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshTable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"dataset-comment-form\",\n              method: \"PUT\",\n              onSubmit: addComment,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dataset-comment\",\n                children: \"Leave a Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"dataset-comment-input\",\n                placeholder: \"Write here\",\n                value: comment,\n                onChange: e => {\n                  setComment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dataset-comments\",\n              children: comments.map((comment, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-user\",\n                      children: comment.user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-date\",\n                      children: commentDate(comment.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"comment-card-comment\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 53\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"KsiqkQyEMkr4H5y4K3MZ8/DBQto=\", false, function () {\n  return [useParams];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useRef","useContext","Link","useParams","workspacesAPI","globalAPI","ViewData","OpenItemsContext","BookmarkIcon","ThumbUpIcon","ContentCopyIcon","Workspace","currentUser","loaded","setLoaded","exist","setExist","noData","setNoData","workspace","setWorkspace","dataTable","setDataTable","dataID","setDataID","changedData","setChangedData","changedSettings","setChangedSettings","date","setDate","copyData","setCopyData","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","visibility","setVisibility","comments","setComments","comment","setComment","section","setSection","title","setTitle","description","setDescription","image","setImage","addOpenItems","copyInterval","workspaceID","id","fetchData","get","data","creator","_id","type","fetch","dataset","then","response","text","catch","err","updatedDate","Date","updated","currentDate","getTime","Math","floor","toString","existingWorkspace","copiedInterval","clearInterval","current","navigator","clipboard","writeText","setInterval","updateUpvote","put","state","updateBookmark","updateVisibility","addComment","e","preventDefault","user","name","commentDate","updateSettings","deleteWorkspace","picture","self","target","files","value","creatorName","deleteDataset","setDataFile","undefined","replaceData","row","setRow","fetchRow","cancelRow","previousPage","page","ceil","maxRows","nextPage","start","end","refreshTable","map","i","createdAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useContext} from 'react'\nimport {Link, useParams} from \"react-router-dom\"\nimport workspacesAPI from '../API/workspaces'\nimport globalAPI from '../API/global'\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst Workspace = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [exist, setExist] = useState()\n    const [noData, setNoData] = useState()\n    const [workspace, setWorkspace] = useState()\n    const [dataTable, setDataTable] = useState()\n    const [dataID, setDataID] = useState(\"\")\n    const [changedData, setChangedData] = useState(false)\n    const [changedSettings, setChangedSettings] = useState(false)\n    const [date, setDate] = useState(\"\");\n    const [copyData, setCopyData] = useState(true)\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [visibility, setVisibility] = useState()\n    const [comments, setComments] = useState()\n    const [comment, setComment] = useState(\"\")\n    const [section, setSection] = useState(\"data\")\n    const [title, setTitle] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [image, setImage] = useState();\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const copyInterval = useRef(0)\n    const workspaceID = useParams().id;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspace = await workspacesAPI.get(`/${workspaceID}`);\n                const comments = await globalAPI.get(`/comment/${workspaceID}?type=workspace`);\n\n                if (workspace.data.data.creator === currentUser.id) {\n                    addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                }\n\n                setWorkspace(workspace.data.data);\n                setBookmarked(workspace.data.data.bookmarked)\n                setUpvoted(workspace.data.data.upvoted)\n                setUpvotes(workspace.data.data.upvotes)\n                setVisibility(workspace.data.data.visibility)\n                setTitle(workspace.data.data.title)\n                setDescription(workspace.data.data.description)\n                setComments(comments.data.data)\n\n                fetch(`http://127.0.0.1:5000/files/${workspace.data.data.workspace.dataset.data}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setExist(true)\n                        setNoData(false)\n                        setLoaded(true)\n                    }).catch(function() {\n                        setExist(true)\n                        setNoData(true)\n                        setLoaded(true)\n                    });\n            } catch (err) {\n                setExist(false)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])    \n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(workspace.updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded])\n\n    const existingWorkspace = () => {\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n            .then(response => response.text())\n            .then(text => {setDataTable(text)})\n    }\n\n    const copiedInterval = () => {\n        clearInterval(copyInterval.current)\n        navigator.clipboard.writeText(workspace.data);\n        setCopyData(false);\n        copyInterval.current = setInterval(() => {\n            setCopyData(true);\n        }, 800)\n        return ()=> {clearInterval(copyInterval.current)};\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await workspacesAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await workspacesAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await workspacesAPI.put(`/visibility/${workspace._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        try {\n            await workspacesAPI.put(`/comment/${workspaceID}`, {\n                comment: comment\n            });\n\n            setComments([{\n                user: {name: currentUser.name},\n                comment: comment\n            }, ...comments])\n            setComment(\"\")\n        } catch (err) {}\n    }\n\n    const commentDate = (date) => {\n        const updatedDate = new Date(date);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`\n        } else {\n            return \"Posted just now\"\n        }\n    }\n\n    const updateSettings = () => {\n\n    }\n\n    const deleteWorkspace = () => {\n\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"width-body\">  \n                    <div className=\"dataset-body\">\n                        <div className=\"dataset-top\">\n                            <img className=\"dataset-picture\" src={`http://localhost:4000/images/${picture}`} />\n                            {workspace.self && \n                                <input className=\"dataset-image-input\"\n                                        type=\"file\" \n                                        name=\"image\" \n                                        onChange={e => {\n                                            setImage(e.target.files[0])\n                                            {!changedSettings && setChangedSettings(true)}\n                                        }} />\n                            }\n                            <div className=\"dataset-heading\">\n                                {workspace.self ? \n                                    <input className=\"dataset-title-input\"\n                                            placeholder=\"Title\" \n                                            value={title}\n                                            onChange={e => {\n                                                setTitle(e.target.value)\n                                                {!changedSettings && setChangedSettings(true)}\n                                            }} /> \n                                : \n                                    <>\n                                        <img src=\"http://localhost:3000/workspace.png\" />\n                                        <h1>{workspace.title}</h1>\n                                    </>\n                                }\n                            </div>\n                            <div>\n                                {!workspace.self && <p className=\"dataset-meta\">{workspace.creatorName.name}</p>}\n                                <p className=\"dataset-meta\">{date}</p>\n                                <span />\n                                {!workspace.self && <BookmarkIcon className={`dataset-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                                {workspace.self && \n                                    <>\n                                        {visibility ? \n                                            <VisibilityIcon className=\"dataset-visibility\" onClick={() => {updateVisibility()}} />\n                                        :\n                                            <VisibilityOffIcon className=\"dataset-visibility\" onClick={() => {updateVisibility()}} />\n                                        }\n                                    </>\n                                }\n                                <ThumbUpIcon className={`dataset-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                                <p className={`dataset-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                            </div>\n                            {workspace.self ? \n                                <>\n                                    <textarea className=\"dataset-description-input\"\n                                                placeholder=\"Description\" \n                                                value={description}\n                                                onChange={e => {\n                                                    setDescription(e.target.value)\n                                                    {!changedSettings && setChangedSettings(true)}\n                                                }} /> \n                                    <div className=\"dataset-middle\">\n                                        <button className=\"dark-grey-button dataset-delete\"\n                                                onClick={e => {deleteDataset(e)}}>Delete</button>\n                                        <button className=\"blue-button\"\n                                                disabled={!changedSettings}\n                                                onClick={e => {updateSettings(e)}}>Save Changes</button>\n                                    </div>\n                                </>\n                            : \n                                <p className=\"dataset-description\">{workspace.description}</p>\n                            }\n                            <select className=\"dataset-select\" onChange={e => {setSection(e.target.value)}}>\n                                <option value=\"data\">Data</option>\n                                <option value=\"workspace\">Workspaces</option>\n                                <option value=\"comment\">Comments</option>\n                            </select>\n                        </div>\n                        <div className=\"dataset-bottom\">\n                            {section === \"data\" ? \n                                <> \n                                    {noData ?\n                                        <p className=\"item-exist\">Cannot find dataset</p>\n                                    :   \n                                        <>\n                                            <div className=\"dataset-options\">\n                                                <input type=\"file\" \n                                                        name=\"data\"\n                                                        onChange={e => {\n                                                            setDataFile(e.target.files[0])\n                                                            setChangedData(true)\n                                                        }} />\n                                                <button className=\"white-button dataset-replace-button\"\n                                                        onClick={() => {\n                                                            setDataFile(undefined)\n                                                            setChangedData(false)\n                                                        }}\n                                                        disabled={!changedData}>Clear</button>\n                                                <button className=\"blue-button dataset-replace-button\"\n                                                        disabled={!changedData}\n                                                        onClick={e => {replaceData(e)}}>Save</button>\n                                                <div className=\"dataset-copy\">\n                                                    {copyData ? <p>Data ID</p> : <p>Copied</p>}\n                                                    <button disabled={!copyData} onClick={() => {copiedInterval()}}>\n                                                        <ContentCopyIcon className=\"dataset-copy-icon\" />\n                                                    </button>\n                                                </div>\n                                                <a href={`http://127.0.0.1:5000/files/${workspace.dataset.data}.csv`} download>Download</a>\n                                            </div>\n                                            <div className=\"dataset-data-table-pagination\">\n                                                <input placeholder=\"Row number\" value={row} onChange={e => {setRow(e.target.value)}} />\n                                                <button onClick={() => {fetchRow()}} className=\"blue-button dataset-data-fetch\">Fetch</button>\n                                                <button onClick={() => {cancelRow()}} className=\"white-button dataset-data-cancel-fetch\">Cancel</button>\n                                                <span />\n                                                <ArrowBackIosNewIcon className=\"dataset-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                <ArrowForwardIosIcon className=\"dataset-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                            <div className=\"dataset-data-table\">\n                                                <ViewData dataTable={dataTable} start={start} end={end} key={refreshTable} />\n                                            </div>\n                                        </>\n                                    }\n                                </>\n                            : \n                                <>\n                                    <form className=\"dataset-comment-form\" method=\"PUT\" onSubmit={addComment}>\n                                        <p className=\"dataset-comment\">Leave a Comment</p>\n                                        <textarea className=\"dataset-comment-input\" placeholder=\"Write here\" value={comment} onChange={e => {setComment(e.target.value)}} />\n                                        <button className=\"blue-button\">Comment</button>\n                                    </form>\n                                    <div className=\"dataset-comments\">\n                                        {comments.map((comment, i) => {\n                                            return (\n                                                <div className=\"comment-card\" key={i}>\n                                                    <div>\n                                                        <p className=\"comment-card-user\">{comment.user.name}</p>\n                                                        <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                    </div>\n                                                    <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"width-body\">  \n                    <p className=\"item-exist\">Cannot find workspace</p>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default Workspace\n"]},"metadata":{},"sourceType":"module"}