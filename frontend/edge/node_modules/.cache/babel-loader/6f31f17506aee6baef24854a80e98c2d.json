{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openWorkspacesContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OpenWorkspacesContext = /*#__PURE__*/createContext();\n\nconst OpenWorkspacesContextProvider = props => {\n  _s();\n\n  const [openWorkspaces, setOpenWorkspaces] = useState([]);\n  useEffect(() => {\n    const localData = JSON.parse(localStorage.getItem('openWorkspaces'));\n\n    if (localData !== null) {\n      setOpenWorkspaces(localData);\n    }\n  }, []);\n\n  const addOpenWorkspaces = (id, title) => {\n    if (openWorkspaces.filter(project => project.id.match(id)).length === 0) {\n      setOpenWorkspaces([{\n        id: id,\n        title: title\n      }, ...openWorkspaces]);\n    }\n  };\n\n  const removeOpenWorkspaces = id => {\n    setOpenWorkspaces(openWorkspaces.filter(project => project.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('openWorkspaces', JSON.stringify(openWorkspaces));\n  }, [openWorkspaces]);\n  return /*#__PURE__*/_jsxDEV(OpenWorkspacesContext.Provider, {\n    value: {\n      openWorkspaces,\n      addOpenWorkspaces,\n      removeOpenWorkspaces\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OpenWorkspacesContextProvider, \"9zd8JQbr1Y34FLocsleZ+L7lR90=\");\n\n_c = OpenWorkspacesContextProvider;\nexport default OpenWorkspacesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenWorkspacesContextProvider\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/openWorkspacesContext.js"],"names":["React","createContext","useEffect","useState","OpenWorkspacesContext","OpenWorkspacesContextProvider","props","openWorkspaces","setOpenWorkspaces","localData","JSON","parse","localStorage","getItem","addOpenWorkspaces","id","title","filter","project","match","length","removeOpenWorkspaces","setItem","stringify","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;;AAEA,OAAO,MAAMC,qBAAqB,gBAAGH,aAAa,EAA3C;;AAEP,MAAMI,6BAA6B,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAlB;;AAEA,QAAIJ,SAAS,KAAK,IAAlB,EAAwB;AACpBD,MAAAA,iBAAiB,CAACC,SAAD,CAAjB;AACH;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,iBAAiB,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACrC,QAAIT,cAAc,CAACU,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACH,EAAR,CAAWI,KAAX,CAAiBJ,EAAjB,CAAjC,EAAuDK,MAAvD,KAAkE,CAAtE,EAAyE;AACrEZ,MAAAA,iBAAiB,CAAC,CAAC;AACfO,QAAAA,EAAE,EAAEA,EADW;AAEfC,QAAAA,KAAK,EAAEA;AAFQ,OAAD,EAGf,GAAGT,cAHY,CAAD,CAAjB;AAIH;AACJ,GAPD;;AASA,QAAMc,oBAAoB,GAAIN,EAAD,IAAQ;AACjCP,IAAAA,iBAAiB,CAACD,cAAc,CAACU,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAAhD,CAAD,CAAjB;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACU,OAAb,CAAqB,gBAArB,EAAuCZ,IAAI,CAACa,SAAL,CAAehB,cAAf,CAAvC;AACH,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACI,QAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAE;AAACA,MAAAA,cAAD;AAAiBO,MAAAA,iBAAjB;AAAoCO,MAAAA;AAApC,KAAvC;AAAA,cACKf,KAAK,CAACkB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCD;;GAAMnB,6B;;KAAAA,6B;AAmCN,eAAeA,6BAAf","sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\n\nexport const OpenWorkspacesContext = createContext()\n\nconst OpenWorkspacesContextProvider = (props) => {\n    const [openWorkspaces, setOpenWorkspaces] = useState([]);\n\n    useEffect(() => {\n        const localData = JSON.parse(localStorage.getItem('openWorkspaces'));\n        \n        if (localData !== null) {\n            setOpenWorkspaces(localData)\n        }\n    }, [])\n\n    const addOpenWorkspaces = (id, title) => {\n        if (openWorkspaces.filter(project => project.id.match(id)).length === 0) {\n            setOpenWorkspaces([{\n                id: id,\n                title: title\n            }, ...openWorkspaces]);\n        }\n    }\n\n    const removeOpenWorkspaces = (id) => {\n        setOpenWorkspaces(openWorkspaces.filter(project => project.id !== id))\n    }\n\n    useEffect(() => {\n        localStorage.setItem('openWorkspaces', JSON.stringify(openWorkspaces));\n    }, [openWorkspaces])\n\n    return (\n        <OpenWorkspacesContext.Provider value={{openWorkspaces, addOpenWorkspaces, removeOpenWorkspaces}}>\n            {props.children}\n        </OpenWorkspacesContext.Provider>\n    )\n}\n\nexport default OpenWorkspacesContextProvider"]},"metadata":{},"sourceType":"module"}