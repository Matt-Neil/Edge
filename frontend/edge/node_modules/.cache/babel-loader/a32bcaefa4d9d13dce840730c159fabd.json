{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Dataset.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport itemsAPI from '../API/items';\nimport usersAPI from '../API/users';\nimport fileAPI from '../API/files';\nimport imageAPI from '../API/images';\nimport ViewData from '../Components/View-Data';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateDataset = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [setupStage, setSetupStage] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [normalised, setNormalised] = useState(false);\n  const [encoded, setEncoded] = useState(false);\n  const [dataFile, setDataFile] = useState();\n  const [dataTable, setDataTable] = useState();\n  const [dataType, setDataType] = useState(\"\");\n  const [maxRows, setMaxRows] = useState();\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(30);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [datasets, setDatasets] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const datasets = await usersAPI.get(\"/created?type=dataset\");\n        datasets.data.data.map(dataset => {\n          setDatasets(state => [...state, dataset.title]);\n        });\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (dataFile !== undefined) {\n      if (dataType !== \"image\") {\n        const file = dataFile;\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          setDataTable(e.target.result);\n          setMaxRows(e.target.result.slice(e.target.result.indexOf('\\n') + 1).split('\\n').length);\n        };\n\n        reader.readAsText(file);\n      }\n    }\n  }, [dataFile]);\n\n  const next = () => {\n    if ((title !== \"\" || description !== \"\" || dataType !== \"\") && !datasets.includes(title)) {\n      setSetupStage(false);\n    }\n  };\n\n  const cancel = () => {\n    history.goBack();\n  };\n\n  const remove = () => {\n    setDataFile();\n    setDataTable();\n    setPage(1);\n    setStart(0);\n    setEnd(30);\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (dataFile !== undefined) {\n      const formData = new FormData();\n      const id = new Date().toISOString();\n      formData.append('data', dataFile);\n      formData.append('id', id);\n\n      try {\n        await fileAPI.post(\"/upload\", formData);\n      } catch (err) {}\n\n      if (image) {\n        const formImage = new FormData();\n        formImage.append('image', image);\n\n        try {\n          const imageResponse = await imageAPI.post(\"/upload\", formImage);\n          uploadDataset(imageResponse.data.data, id);\n        } catch (err) {}\n      } else {\n        uploadDataset(\"default.png\", id);\n      }\n    } else {\n      setDisabledCreate(false);\n    }\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setPage(state => state - 1);\n    }\n\n    setStart((page - 1) * 30);\n    setEnd(page * 30);\n  };\n\n  const nextPage = () => {\n    if (page * 30 < maxRows && maxRows > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n    }\n  };\n\n  const uploadDataset = async (imageName, id) => {\n    try {\n      let newDataset = {\n        title: title,\n        datafile: id,\n        dataType: dataType,\n        creator: currentUser.id,\n        description: description,\n        comments: [],\n        picture: imageName,\n        upvotes: [],\n        bookmarks: [],\n        updated: new Date().toISOString(),\n        visibility: visibility\n      };\n\n      switch (dataType) {\n        case \"numerical\":\n          newDataset.normalised = normalised;\n          break;\n\n        case \"categorical\":\n          newDataset.encoded = encoded;\n          break;\n\n        case \"mixed\":\n          newDataset.normalised = normalised;\n          newDataset.encoded = encoded;\n          break;\n      }\n\n      const datasetResponse = await itemsAPI.post(\"/\", newDataset);\n      history.push(`/dataset/${datasetResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  console.log(dataFile);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-item-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"create-item-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: setupStage,\n          onClick: () => {\n            setSetupStage(true);\n          },\n          children: \"Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${\"create-sidebar-stage\"} ${!setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`,\n          disabled: true,\n          children: \"Upload Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-body\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-item-filename\",\n                children: \"Dataset Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                onClick: () => {\n                  next();\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-title\",\n              placeholder: \"Title\",\n              onChange: e => {\n                setTitle(e.target.value);\n              },\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"create-item-description\",\n              placeholder: \"Description\",\n              onChange: e => {\n                setDescription(e.target.value);\n              },\n              value: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"image\",\n                onChange: e => {\n                  setImage(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Public?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setVisibility(previous => !previous);\n                },\n                checked: visibility\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Select Data Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: dataType,\n                onChange: e => {\n                  setDataType(e.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  defaultValue: true,\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"numerical\",\n                  children: \"Numerical Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"categorical\",\n                  children: \"Categorical Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"mixed\",\n                  children: \"Mixed Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"image\",\n                  children: \"Image Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this), dataType === \"numerical\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Normalised?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setNormalised(previous => !previous);\n                },\n                checked: normalised\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 41\n            }, this), dataType === \"categorical\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Encoded?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setEncoded(previous => !previous);\n                },\n                checked: encoded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this), dataType === \"mixed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Normalised?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setNormalised(previous => !previous);\n                },\n                checked: normalised\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"create-item-setup-label\",\n                children: \"Encoded?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => {\n                  setEncoded(previous => !previous);\n                },\n                checked: encoded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), !setupStage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-import\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-item-import-top\",\n              children: [dataType === \"image\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                accept: \"image/*\",\n                multiple: true,\n                onChange: e => {\n                  setDataFile(e.target.files);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"data\",\n                accept: \".txt, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n                onChange: e => {\n                  setDataFile(e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"white-button create-item-cancel\",\n                onClick: () => {\n                  cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: disableCreate,\n                onClick: () => {\n                  uploadImage();\n                },\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this), dataType === \"image\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: dataFile !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: dataFile.map((image, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 64\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 49\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: dataFile !== undefined && dataTable !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-item-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-information\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"create-item-filename\",\n                    children: [\"File: \", dataFile.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"grey-button create-item-remove\",\n                    onClick: () => {\n                      remove();\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-item-data-table-pagination\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                      className: \"create-item-data-table-pagination-icon\",\n                      onClick: () => {\n                        previousPage();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                      className: \"create-item-data-table-pagination-icon\",\n                      onClick: () => {\n                        nextPage();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-item-data-table\",\n                  children: /*#__PURE__*/_jsxDEV(ViewData, {\n                    dataTable: dataTable,\n                    start: start,\n                    end: end\n                  }, new Date().getTime(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 49\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateDataset, \"UaCS5Ax6MS3pxuPnRxab1wdRc5o=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDataset;\nexport default CreateDataset;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDataset\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Create-Dataset.jsx"],"names":["React","useState","useEffect","useHistory","itemsAPI","usersAPI","fileAPI","imageAPI","ViewData","ArrowForwardIosIcon","ArrowBackIosNewIcon","CreateDataset","currentUser","setupStage","setSetupStage","title","setTitle","description","setDescription","visibility","setVisibility","normalised","setNormalised","encoded","setEncoded","dataFile","setDataFile","dataTable","setDataTable","dataType","setDataType","maxRows","setMaxRows","start","setStart","end","setEnd","page","setPage","image","setImage","datasets","setDatasets","loaded","setLoaded","disableCreate","setDisabledCreate","history","fetchData","get","data","map","dataset","state","err","undefined","file","reader","FileReader","onload","e","target","result","slice","indexOf","split","length","readAsText","next","includes","cancel","goBack","remove","uploadImage","formData","FormData","id","Date","toISOString","append","post","formImage","imageResponse","uploadDataset","previousPage","nextPage","imageName","newDataset","datafile","creator","comments","picture","upvotes","bookmarks","updated","datasetResponse","push","console","log","value","files","previous","index","name","Math","ceil","getTime"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport itemsAPI from '../API/items'\nimport usersAPI from '../API/users'\nimport fileAPI from '../API/files'\nimport imageAPI from '../API/images'\nimport ViewData from '../Components/View-Data'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\nconst CreateDataset = ({currentUser}) => {\n    const [setupStage, setSetupStage] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [normalised, setNormalised] = useState(false);\n    const [encoded, setEncoded] = useState(false);\n    const [dataFile, setDataFile] = useState();\n    const [dataTable, setDataTable] = useState();\n    const [dataType, setDataType] = useState(\"\")\n    const [maxRows, setMaxRows] = useState()\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(30)\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [datasets, setDatasets] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const datasets = await usersAPI.get(\"/created?type=dataset\");\n\n                datasets.data.data.map((dataset) => {\n                    setDatasets(state => [...state, dataset.title]);\n                })\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (dataFile !== undefined) {\n            if (dataType !== \"image\") {\n                const file = dataFile;\n                const reader = new FileReader();\n    \n                reader.onload = function(e) {\n                    setDataTable(e.target.result);\n                    setMaxRows(e.target.result.slice(e.target.result.indexOf('\\n')+1).split('\\n').length)\n                }\n    \n                reader.readAsText(file)\n            }\n        }\n    }, [dataFile])\n\n    const next = () => {\n        if ((title !== \"\" || description !== \"\" || dataType !== \"\") && !datasets.includes(title)) {\n            setSetupStage(false)\n        }\n    }\n\n    const cancel = () => {\n        history.goBack();\n    }\n\n    const remove = () => {\n        setDataFile()\n        setDataTable()\n        setPage(1)\n        setStart(0)\n        setEnd(30)\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (dataFile !== undefined) {\n            const formData = new FormData();\n            const id = new Date().toISOString();\n\n            formData.append('data', dataFile);\n            formData.append('id', id)\n\n            try {\n                await fileAPI.post(\"/upload\", formData);\n            } catch (err) {}\n\n            if (image) {\n                const formImage = new FormData();\n                formImage.append('image', image);\n                \n                try {\n                    const imageResponse = await imageAPI.post(\"/upload\", formImage);\n    \n                    uploadDataset(imageResponse.data.data, id)\n                } catch (err) {}\n            } else {\n                uploadDataset(\"default.png\", id)\n            }\n        } else {\n            setDisabledCreate(false)\n        }\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setPage(state => state-1)\n        }\n        setStart((page-1)*30)\n        setEnd(page*30)\n    }\n\n    const nextPage = () => {\n        if (page*30 < maxRows && maxRows > 30) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n        }\n    }\n\n    const uploadDataset = async (imageName, id) => {\n        try {\n            let newDataset = {\n                title: title,\n                datafile: id,\n                dataType: dataType,\n                creator: currentUser.id,\n                description: description,\n                comments: [],\n                picture: imageName,\n                upvotes: [],\n                bookmarks: [],\n                updated: new Date().toISOString(),\n                visibility: visibility\n            }\n\n            switch (dataType) {\n                case \"numerical\":\n                    newDataset.normalised = normalised\n                    break;\n                case \"categorical\":\n                    newDataset.encoded = encoded\n                    break;\n                case \"mixed\":\n                    newDataset.normalised = normalised\n                    newDataset.encoded = encoded\n                    break;\n            }\n\n            const datasetResponse = await itemsAPI.post(\"/\", newDataset);\n\n            history.push(`/dataset/${datasetResponse.data.data}`)\n        } catch (err) {}\n    }\n    console.log(dataFile)\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"sidebar-body\">\n                    <div className=\"create-sidebar\">\n                        <h1>Create Dataset</h1> \n                        <div className=\"create-item-header\">\n                            <p className=\"create-item-title\">{title}</p> \n                        </div>\n                        <button className={`${\"create-sidebar-stage\"} ${setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled={setupStage}\n                                onClick={() => {setSetupStage(true)}}>Setup</button>\n                        <button className={`${\"create-sidebar-stage\"} ${!setupStage ? \"create-sidebar-stage-selected\" : \"create-sidebar-stage-unselected\"}`}\n                                disabled>Upload Data</button>\n                    </div>\n                    <div className=\"inner-body\">\n                        <>\n                            {setupStage &&\n                                <div className=\"create-item-setup-information\">\n                                    <div className=\"create-item-nav\">   \n                                        <p className=\"create-item-filename\">Dataset Information</p>\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                onClick={() => {next()}}>Next</button>\n                                    </div>\n                                    <input className=\"create-item-title\"\n                                            placeholder=\"Title\"\n                                            onChange={e => {setTitle(e.target.value)}}\n                                            value={title} />\n                                    <textarea className=\"create-item-description\"\n                                                placeholder=\"Description\"\n                                                onChange={e => {setDescription(e.target.value)}}\n                                                value={description} />\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Picture</label>\n                                        <input type=\"file\" \n                                                name=\"image\" \n                                                onChange={e => {setImage(e.target.files[0])}} />\n                                    </div>\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Public?</label>\n                                        <input type=\"checkbox\" \n                                                onChange={() => {setVisibility(previous => !previous)}}\n                                                checked={visibility} />\n                                    </div>\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Select Data Type</label>\n                                        <select value={dataType} onChange={e => {setDataType(e.target.value)}}>\n                                            <option disabled defaultValue value=\"\"></option>\n                                            <option value=\"numerical\">Numerical Data</option>\n                                            <option value=\"categorical\">Categorical Data</option>\n                                            <option value=\"mixed\">Mixed Data</option>\n                                            <option value=\"image\">Image Data</option>\n                                        </select>\n                                    </div>\n                                    {dataType === \"numerical\" &&\n                                        <div className=\"create-item-setup\">\n                                            <label className=\"create-item-setup-label\">Normalised?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setNormalised(previous => !previous)}}\n                                                    checked={normalised} />\n                                        </div>\n                                    }\n                                    {dataType === \"categorical\" &&\n                                        <div className=\"create-item-setup\">\n                                            <label className=\"create-item-setup-label\">Encoded?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setEncoded(previous => !previous)}}\n                                                    checked={encoded} />\n                                        </div>\n                                    }\n                                    {dataType === \"mixed\" &&\n                                        <div className=\"create-item-setup\">\n                                            <label className=\"create-item-setup-label\">Normalised?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setNormalised(previous => !previous)}}\n                                                    checked={normalised} />\n                                            <label className=\"create-item-setup-label\">Encoded?</label>\n                                            <input type=\"checkbox\" \n                                                    onChange={() => {setEncoded(previous => !previous)}}\n                                                    checked={encoded} />\n                                        </div>\n                                    }\n                                </div>\n                            }\n                            {!setupStage &&\n                                <div className=\"create-item-import\">\n                                    <div className=\"create-item-import-top\">\n                                        {dataType === \"image\" ?\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    accept=\"image/*\"\n                                                    multiple\n                                                    onChange={e => {setDataFile(e.target.files)}} />\n                                        :\n                                            <input type=\"file\" \n                                                    name=\"data\"\n                                                    accept=\".txt, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                                    onChange={e => {setDataFile(e.target.files[0])}} />\n                                        }\n                                        <span />\n                                        <button className=\"white-button create-item-cancel\"\n                                                onClick={() => {cancel()}}>Cancel</button>\n                                        <button className=\"blue-button\"\n                                                disabled={disableCreate}\n                                                onClick={() => {uploadImage()}}>Create</button>\n                                    </div>\n                                    {dataType === \"image\" ?\n                                        <>\n                                            {dataFile !== undefined &&\n                                                <div>\n                                                    {dataFile.map((image, index) => {\n                                                        return <p>image</p>\n                                                    })}\n                                                </div>\n                                            }\n                                        </>\n                                    :\n                                        <>\n                                            {dataFile !== undefined && dataTable !== undefined &&\n                                                <div className=\"create-item-data\">\n                                                    <div className=\"create-item-data-information\">\n                                                        <p className=\"create-item-filename\">File: {dataFile.name}</p>\n                                                        <button className=\"grey-button create-item-remove\"\n                                                                onClick={() => {remove()}}>Remove</button>\n                                                        <span />\n                                                        <div className=\"create-item-data-table-pagination\">\n                                                            <ArrowBackIosNewIcon className=\"create-item-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                            <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                            <ArrowForwardIosIcon className=\"create-item-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"create-item-data-table\">\n                                                        <ViewData dataTable={dataTable} start={start} end={end} key={new Date().getTime()} />\n                                                    </div>\n                                                </div>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                            }\n                        </>\n                    </div>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default CreateDataset\n"]},"metadata":{},"sourceType":"module"}