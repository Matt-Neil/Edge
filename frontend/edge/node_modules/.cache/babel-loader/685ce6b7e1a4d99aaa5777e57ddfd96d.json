{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport usersAPI from '../API/users';\nimport workspacesAPI from '../API/workspaces';\nimport datasetsAPI from '../API/datasets';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewItems = _ref => {\n  _s();\n\n  let {\n    type,\n    currentUser,\n    setSearchPhrase\n  } = _ref;\n  const [items, setItems] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [rowFormat, setRowFormat] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [finishedItems, setFinishedItems] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let items;\n\n        switch (type) {\n          case \"created-workspaces\":\n            items = await usersAPI.get(`/created-workspaces?date=${new Date().toISOString()}`);\n            break;\n\n          case \"created-datasets\":\n            items = await usersAPI.get(`/created-datasets?date=${new Date().toISOString()}`);\n            break;\n\n          case \"bookmarked-workspaces\":\n            items = await usersAPI.get(`/bookmarked-workspaces?date=${new Date().toISOString()}`);\n            break;\n\n          case \"bookmarked-datasets\":\n            items = await usersAPI.get(`/bookmarked-datasets?date=${new Date().toISOString()}`);\n            break;\n\n          case \"all-workspaces\":\n            items = await workspacesAPI.get(`/all?date=${new Date().toISOString()}`);\n            break;\n\n          case \"all-datasets\":\n            items = await datasetsAPI.get(`/all?date=${new Date().toISOString()}`);\n            break;\n        }\n\n        if (items.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDataItems = async date => {\n    if (!finishedItems) {\n      try {\n        let fetchedItems;\n\n        switch (type) {\n          case \"created-workspaces\":\n            fetchedItems = await usersAPI.get(`/created-workspaces?date=${date}`);\n            break;\n\n          case \"created-datasets\":\n            fetchedItems = await usersAPI.get(`/created-datasets?date=${date}`);\n            break;\n\n          case \"bookmarked-workspaces\":\n            fetchedItems = await usersAPI.get(`/bookmarked-workspaces?date=${date}`);\n            break;\n\n          case \"bookmarked-datasets\":\n            fetchedItems = await usersAPI.get(`/bookmarked-datasets?date=${date}`);\n            break;\n\n          case \"all-workspaces\":\n            fetchedItems = await workspacesAPI.get(`/all?date=${date}`);\n            break;\n\n          case \"all-datasets\":\n            fetchedItems = await datasetsAPI.get(`/all?date=${date}`);\n            break;\n        }\n\n        if (fetchedItems.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items => [...items, ...fetchedItems.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (items.length !== 0) {\n      if (type === \"all-workspaces\" || type === \"all-datasets\") {\n        {\n          fetchDataItems(items[items.length - 1].createdAt);\n        }\n      } else {\n        {\n          fetchDataItems(items[items.length - 1].updatedAt);\n        }\n      }\n    }\n  };\n\n  const displayHeading = () => {\n    let heading;\n\n    switch (type) {\n      case \"created-workspaces\":\n        heading = \"Created Workspaces\";\n        break;\n\n      case \"created-datasets\":\n        heading = \"Created Datasets\";\n        break;\n\n      case \"bookmarked-workspaces\":\n        heading = \"Bookmarked Workspaces\";\n        break;\n\n      case \"bookmarked-datasets\":\n        heading = \"Bookmarked Datasets\";\n        break;\n\n      case \"all-workspaces\":\n        heading = \"All Workspaces\";\n        break;\n\n      case \"all-datasets\":\n        heading = \"All Datasets\";\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-items-body\",\n        children: [type === \"all\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"view-items-search-input\",\n            placeholder: \"Search\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: searchFunctionKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"view-items-search-icon\",\n            onClick: e => searchFunctionButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-top\",\n          children: [displayHeading(), type === \"created-workspaces\" && /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create-workspace\",\n            className: \"blue-button\",\n            children: \"New Workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 63\n          }, this), type === \"created-datasets\" && /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create-dataset\",\n            className: \"blue-button\",\n            children: \"New Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-middle\",\n          children: [type === \"created-workspaces\" || type === \"bookmarked-workspaces\" || type === \"all-workspaces\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${items.length} Workspaces`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${items.length} Datasets`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/List.png\",\n            className: \"view-items-row-icon\",\n            onClick: () => {\n              setRowFormat(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/Grid.png\",\n            className: \"view-items-grid-icon\",\n            onClick: () => {\n              setRowFormat(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-items-list\",\n          children: items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: items.map((item, i) => {\n              if (type === \"created-workspaces\" || type === \"created-datasets\") return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                item: item,\n                created: true\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 126\n              }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                item: item,\n                created: true\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 179\n              }, this);\n              return rowFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                item: item,\n                creator: item.creatorName.name,\n                currentUserID: currentUser.id,\n                created: type === \"created\"\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 60\n              }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                item: item,\n                creator: item.creatorName.name,\n                currentUserID: currentUser.id,\n                created: type === \"created\"\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 190\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), items.length >= 0 && finishedItems ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: type === \"created-workspaces\" || type === \"bookmarked-workspaces\" || type === \"all-workspaces\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"end-items\",\n            children: \"No more workspaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"end-items\",\n            children: \"No more datasets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"load-items\",\n          onClick: () => {\n            loadMore();\n          },\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(ViewItems, \"Ri90eoXuLHdB9Or8G1ey24yF/nU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ViewItems;\nexport default ViewItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewItems\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/View-Items.jsx"],"names":["React","useState","useEffect","useHistory","Link","ItemRowCard","ItemSquareCard","usersAPI","workspacesAPI","datasetsAPI","SearchIcon","ViewItems","type","currentUser","setSearchPhrase","items","setItems","loaded","setLoaded","rowFormat","setRowFormat","input","setInput","finishedItems","setFinishedItems","history","fetchData","get","Date","toISOString","data","length","err","searchFunctionKey","e","key","push","searchFunctionButton","fetchDataItems","date","fetchedItems","loadMore","createdAt","updatedAt","displayHeading","heading","target","value","map","item","i","creatorName","name","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link} from \"react-router-dom\"\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport usersAPI from '../API/users'\nimport workspacesAPI from '../API/workspaces'\nimport datasetsAPI from '../API/datasets'\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst ViewItems = ({type, currentUser, setSearchPhrase}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [rowFormat, setRowFormat] = useState(false)\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let items;\n\n                switch (type) {\n                    case \"created-workspaces\":\n                        items = await usersAPI.get(`/created-workspaces?date=${new Date().toISOString()}`);\n                        break;\n                    case \"created-datasets\":\n                        items = await usersAPI.get(`/created-datasets?date=${new Date().toISOString()}`);\n                        break;\n                    case \"bookmarked-workspaces\":\n                        items = await usersAPI.get(`/bookmarked-workspaces?date=${new Date().toISOString()}`);\n                        break;\n                    case \"bookmarked-datasets\":\n                        items = await usersAPI.get(`/bookmarked-datasets?date=${new Date().toISOString()}`);\n                        break;\n                    case \"all-workspaces\":\n                        items = await workspacesAPI.get(`/all?date=${new Date().toISOString()}`);\n                        break;\n                    case \"all-datasets\":\n                        items = await datasetsAPI.get(`/all?date=${new Date().toISOString()}`);\n                        break;\n                }\n\n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n    \n    const fetchDataItems = async (date) => {\n        if (!finishedItems) {\n            try {\n                let fetchedItems;\n\n                switch (type) {\n                    case \"created-workspaces\":\n                        fetchedItems = await usersAPI.get(`/created-workspaces?date=${date}`);\n                        break;\n                    case \"created-datasets\":\n                        fetchedItems = await usersAPI.get(`/created-datasets?date=${date}`);\n                        break;\n                    case \"bookmarked-workspaces\":\n                        fetchedItems = await usersAPI.get(`/bookmarked-workspaces?date=${date}`);\n                        break;\n                    case \"bookmarked-datasets\":\n                        fetchedItems = await usersAPI.get(`/bookmarked-datasets?date=${date}`);\n                        break;\n                    case \"all-workspaces\":\n                        fetchedItems = await workspacesAPI.get(`/all?date=${date}`);\n                        break;\n                    case \"all-datasets\":\n                        fetchedItems = await datasetsAPI.get(`/all?date=${date}`);\n                        break;    \n                }\n    \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            if (type === \"all-workspaces\" || type === \"all-datasets\") {\n                {fetchDataItems(items[items.length-1].createdAt)}\n            } else {\n                {fetchDataItems(items[items.length-1].updatedAt)}\n            }\n        }\n    };\n\n    const displayHeading = () => {\n        let heading;\n\n        switch (type) {\n            case \"created-workspaces\":\n                heading = \"Created Workspaces\"\n                break;\n            case \"created-datasets\":\n                heading = \"Created Datasets\"\n                break;\n            case \"bookmarked-workspaces\":\n                heading = \"Bookmarked Workspaces\"\n                break;\n            case \"bookmarked-datasets\":\n                heading = \"Bookmarked Datasets\"\n                break;\n            case \"all-workspaces\":\n                heading = \"All Workspaces\"\n                break;\n            case \"all-datasets\":\n                heading = \"All Datasets\"\n                break;\n        }\n\n        return <h1>{heading}</h1>\n    }\n    \n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"view-items-body\">\n                        {type === \"all\" &&\n                            <div className=\"view-items-search\">\n                                <input className=\"view-items-search-input\"\n                                        placeholder=\"Search\"\n                                        value={input}\n                                        onChange={e => setInput(e.target.value)}\n                                        onKeyPress={searchFunctionKey} />\n                                <SearchIcon className=\"view-items-search-icon\" onClick={e => searchFunctionButton()} />\n                            </div>\n                        }\n                        <div className=\"view-items-top\">\n                            {displayHeading()}\n                            {type === \"created-workspaces\" && <Link to=\"/create-workspace\" className=\"blue-button\">New Workspace</Link>}\n                            {type === \"created-datasets\" && <Link to=\"/create-dataset\" className=\"blue-button\">New Dataset</Link>}\n                        </div>\n                        <div className=\"view-items-middle\">\n                            {(type === \"created-workspaces\" || type === \"bookmarked-workspaces\" || type === \"all-workspaces\") ?\n                                <p>{`${items.length} Workspaces`}</p>\n                            :\n                                <p>{`${items.length} Datasets`}</p>\n                            }\n                            <img src=\"http://localhost:3000/List.png\" className=\"view-items-row-icon\" onClick={() => {setRowFormat(true)}} />\n                            <img src=\"http://localhost:3000/Grid.png\" className=\"view-items-grid-icon\" onClick={() => {setRowFormat(false)}} />\n                        </div>\n                        <div className=\"view-items-list\">\n                            {items.length > 0 &&\n                                <>\n                                    {items.map((item, i) => {\n                                        if (type === \"created-workspaces\" || type === \"created-datasets\") return rowFormat ? <ItemRowCard item={item} created={true} key={i} /> : <ItemSquareCard item={item} created={true} key={i} />\n\n                                        return rowFormat ? <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} /> : <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={type === \"created\"} key={i} />\n                                    })}\n                                </>\n                            }\n                        </div>\n                        {items.length >= 0 && finishedItems ?\n                            <>\n                                {(type === \"created-workspaces\" || type === \"bookmarked-workspaces\" || type === \"all-workspaces\") ?\n                                    <p className=\"end-items\">No more workspaces</p>\n                                :\n                                    <p className=\"end-items\">No more datasets</p>\n                                }\n                            </>\n                            :\n                            <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                        }\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default ViewItems"]},"metadata":{},"sourceType":"module"}