{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport usersAPI from '../API/users';\nimport itemsAPI from '../API/items';\nimport globalAPI from '../API/global';\nimport imageAPI from '../API/images';\nimport trainAPI from '../API/train';\nimport ModelNode from '../Components/Model-Node';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser,\n    type\n  } = _ref;\n  const [stage, setStage] = useState(\"model\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [updated, setUpdated] = useState();\n  const [picture, setPicture] = useState();\n  const [date, setDate] = useState(\"\");\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(20);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState();\n  const [datasetID, setDatasetID] = useState(\"\");\n  const [uploadedDataset, setUploadedDataset] = useState();\n  const [workspace, setWorkspace] = useState([]);\n  const [images, setImages] = useState([]);\n  const [assignedLabels, setAssignedLabels] = useState([]);\n  const [refreshData, setRefreshData] = useState();\n  const [refreshDiagram, setRefreshDiagram] = useState();\n  const [changedSettings, setChangedSettings] = useState(false);\n  const [model, setModel] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(0);\n  const [configuration, setConfiguration] = useState({\n    epochs: 0,\n    training_split: 0,\n    validation_split: 0,\n    improvement: 0,\n    patience: 0,\n    batch: 32,\n    lr_scheduler: false,\n    initial_lr: 0.01,\n    optimiser: \"\",\n    loss: \"\"\n  });\n  const [addNode, setAddNode] = useState(false);\n  const [results, setResults] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [noData, setNoData] = useState();\n  const [disableCreate, setDisabledCreate] = useState(false);\n  const [disableTrain, setDisabledTrain] = useState(true);\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const {\n    addOpenItems,\n    removeOpenItems\n  } = useContext(OpenItemsContext);\n  const modelRef = useRef(null);\n  const workspaceID = useParams().id;\n  const publicInterval = useRef(0);\n  const existInterval = useRef(0);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (type === \"create\") {\n          const workspace = await usersAPI.get(\"/created?type=workspace\");\n          workspace.data.data.map(workspace => {\n            setWorkspace(previous => [...previous, workspace.title]);\n          });\n          setExist(true);\n          setLoaded(true);\n        } else {\n          const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n\n          if (workspace.data.data.self) {\n            addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n          }\n\n          setWorkspace(workspace.data.data);\n          setUpdated(workspace.data.data.updated);\n          setBookmarked(workspace.data.data.bookmarked);\n          setUpvoted(workspace.data.data.upvoted);\n          setPicture(workspace.data.data.picture);\n          setUpvotes(workspace.data.data.upvotes);\n          setDatasetID(workspace.data.data.dataset._id);\n          setVisibility(workspace.data.data.visibility);\n          setTitle(workspace.data.data.title);\n          setDescription(workspace.data.data.description);\n          setModel(workspace.data.data.model);\n          setConfiguration(workspace.data.data.configuration);\n          setUploadedDataset(workspace.data.data.dataset);\n          fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.imageFile}/labels.json`).then(response => response.json()).then(images => {\n            images.map(image => {\n              setImages(state => [...state, image.filename]);\n              setAssignedLabels(state => [...state, image.label]);\n            });\n            setExist(true);\n            setNoData(false);\n            setLoaded(true);\n          }).catch(() => {\n            setExist(true);\n            setNoData(true);\n            setLoaded(true);\n          });\n        }\n      } catch (err) {\n        setExist(false);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (modelRef.current) {\n      modelRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'end'\n      });\n    }\n  }, [model, addNode]);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded, updated]);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && datasetID !== \"\") {\n      existingDataset();\n    }\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await globalAPI.put(`/visibility/${workspaceID}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setStart((page - 2) * 20);\n      setEnd((page - 1) * 20);\n      setPage(state => state - 1);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const nextPage = () => {\n    if (page * 20 < images.length && images.length > 20) {\n      setPage(state => state + 1);\n      setStart(page * 20);\n      setEnd((page + 1) * 20);\n      setRefreshData(new Date().getTime());\n    }\n  };\n\n  const existingDataset = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?id=${datasetID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${checkPublic.data.data.imageFile}/labels.json`).then(response => response.json()).then(images => {\n          images.map(image => {\n            setImages(state => [...state, image.filename]);\n            setAssignedLabels(state => [...state, image.label]);\n          });\n          setUploadedDataset(checkPublic.data.data);\n          setRefreshData(new Date().getTime());\n          {\n            model.length === 0 && setModel([{\n              type: \"Input\",\n              value: 1,\n              activation: \"none\"\n            }]);\n          }\n          setChangedSettings(true);\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const uploadImage = async () => {\n    setDisabledCreate(true);\n\n    if (uploadedDataset && title !== \"\" && description !== \"\") {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        uploadData(imageResponse.data.data);\n      } catch (err) {}\n    } else {\n      uploadData(\"default.png\");\n    }\n  };\n\n  const uploadData = async imageName => {\n    try {\n      const workspaceResponse = await itemsAPI.post(\"/\", {\n        title: title,\n        dataset: uploadedDataset._id,\n        creator: currentUser.id,\n        description: description,\n        picture: imageName,\n        upvotes: [],\n        bookmarks: [],\n        model: model,\n        configuration: configuration,\n        updated: new Date().toISOString(),\n        visibility: visibility,\n        type: \"workspace\"\n      });\n      history.push(`/workspace/${workspaceResponse.data.data}`);\n    } catch (err) {}\n  };\n\n  const train = async () => {\n    try {\n      // setDisabledTrain(true)\n      // setStage(\"train\")\n      const formData = new FormData();\n      formData.append('epochs', configuration.epochs);\n      formData.append('training_split', configuration.training_split);\n      formData.append('validation_split', configuration.validation_split);\n      formData.append('improvement', configuration.improvement);\n      formData.append('patience', configuration.patience);\n      formData.append('batch', configuration.batch);\n      formData.append('lr_scheduler', configuration.lr_scheduler);\n      formData.append('initial_lr', configuration.initial_lr);\n      formData.append('optimiser', configuration.optimiser);\n      formData.append('loss', configuration.loss);\n      formData.append('imageFile', uploadedDataset.imageFile);\n      formData.append('height', 32);\n      formData.append('width', 32);\n      formData.append('binary', uploadedDataset.labels.length <= 2);\n      model.map(node => {\n        formData.append('activations[]', node.activation);\n        formData.append('units[]', node.value);\n      });\n      const response = await trainAPI.post(\"\", formData);\n\n      if (response) {\n        setResults(response);\n        setStage(\"evaluation\");\n      } else {\n        setDisabledTrain(false);\n      }\n    } catch (err) {}\n  };\n\n  const updateWorkspace = async () => {\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const tempPicture = picture;\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: imageResponse.data.data,\n          dataset: uploadedDataset._id,\n          model: model,\n          configuration: configuration,\n          updated: new Date().toISOString()\n        });\n        setImage(undefined);\n        setPicture(imageResponse.data.data);\n\n        if (tempPicture !== \"default.png\") {\n          await imageAPI.put('/remove', {\n            picture: tempPicture\n          });\n        }\n      } catch (err) {}\n    } else {\n      try {\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: picture,\n          dataset: uploadedDataset._id,\n          model: model,\n          configuration: configuration,\n          updated: new Date().toISOString()\n        });\n      } catch (err) {}\n    }\n\n    setUpdated(new Date().toISOString());\n    setChangedSettings(false);\n  };\n\n  const deleteWorkspace = async () => {\n    try {\n      await itemsAPI.delete(`/${workspaceID}`);\n      removeOpenItems(workspaceID);\n      history.replace(\"/home\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/workspace.png\",\n            className: !(type === \"view\" && !workspace.self) ? \"create-item-edit-image\" : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `create-item-title ${!(type === \"view\" && !workspace.self) && \"create-item-edit-input\"}`,\n            placeholder: \"Title\",\n            onChange: e => {\n              setTitle(e.target.value);\n              setChangedSettings(true);\n            },\n            disabled: !(workspace.self || type === \"create\"),\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `create-item-description ${!(type === \"view\" && !workspace.self) && \"create-item-edit-textarea\"}`,\n          placeholder: \"Description\",\n          onChange: e => {\n            setDescription(e.target.value);\n            setChangedSettings(true);\n          },\n          disabled: !(workspace.self || type === \"create\"),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this), (workspace.self || type === \"create\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"create-item-setup-label\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create-item-setup-input\",\n              type: \"file\",\n              name: \"image\",\n              onChange: e => {\n                setImage(e.target.files[0]);\n                setChangedSettings(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 33\n          }, this), type === \"create\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-item-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"create-item-setup-label\",\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setVisibility(previous => !previous);\n                setChangedSettings(true);\n              },\n              checked: visibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), !workspace.self && type !== \"create\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-creator\",\n          children: workspace.creatorName.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-information\",\n          children: [type !== \"create\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-date\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }, this), type !== \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              className: `item-icon ${upvoted ? \"blue2\" : \"white\"}`,\n              onClick: () => {\n                updateUpvote();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: upvoted ? \"blue2\" : \"white\",\n              children: upvotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), !workspace.self && type !== \"create\" && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n            className: `item-icon ${bookmarked ? \"blue2\" : \"white\"}`,\n            onClick: () => {\n              updateBookmark();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 70\n          }, this), workspace.self && type !== \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n              className: \"item-visibility\",\n              onClick: () => {\n                updateVisibility();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n              className: \"item-visibility\",\n              onClick: () => {\n                updateVisibility();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-workspace-uploaded-dataset\",\n          children: type === \"create\" || workspace.self ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `create-workspace-import-existing ${!(type === \"view\" && !workspace.self) && \"create-item-edit-input\"}`,\n              placeholder: \"Dataset ID\",\n              onChange: e => {\n                setDatasetID(e.target.value);\n              },\n              onKeyPress: searchFunctionKey,\n              value: datasetID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 37\n            }, this), type === \"view\" && /*#__PURE__*/_jsxDEV(Link, {\n              className: \"create-item-view-dataset\",\n              to: `/dataset/${datasetID}`,\n              children: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 129\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"create-workspace-uploaded-dataset-header\",\n              children: \"Selected Dataset:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/dataset/${datasetID}`,\n              className: \"create-workspace-uploaded-dataset-link\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:4000/images/${uploadedDataset.picture}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: uploadedDataset.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), type === \"view\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: workspace.self && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar-divided\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"blue-button item-save\",\n              disabled: !changedSettings,\n              onClick: () => {\n                updateWorkspace();\n              },\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-button item-delete\",\n              onClick: () => {\n                deleteWorkspace();\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)\n        }, void 0, false), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"create-item-data-notification\",\n          children: \"Dataset not public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 43\n        }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"create-item-data-notification\",\n          children: \"Dataset does not exist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"workspace-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"view-items-top\",\n              children: [type === \"create\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Create Workspace\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\" // disabled={disableTrain}\n                  ,\n                  onClick: () => {\n                    train();\n                  },\n                  children: \"Train\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true), type === \"view\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `text-button ${stage === \"model\" ? \"item-header-button-selected\" : \"item-header-button-unselected\"}`,\n                  onClick: () => {\n                    setStage(\"model\");\n                  },\n                  children: \"Model\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `text-button ${stage === \"evaluation\" ? \"item-header-button-selected\" : \"item-header-button-unselected\"}`,\n                  onClick: () => {\n                    setStage(\"evaluation\");\n                  },\n                  children: \"Evaluation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 45\n                }, this), workspace.self && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button\" // disabled={disableTrain}\n                  ,\n                  onClick: () => {\n                    train();\n                  },\n                  children: \"Train\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), stage === \"model\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: model.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-modelling-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-model\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-model-diagram\",\n                    children: [model.map((node, i) => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"create-model-diagram-node\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            onClick: () => {\n                              setSelectedNode(i);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(ModelNode, {\n                              setSelectedNode: setSelectedNode,\n                              type: node.type,\n                              value: node.value,\n                              selected: i === selectedNode,\n                              last: i === model.length - 1\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 528,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 527,\n                            columnNumber: 73\n                          }, this), node.type !== \"Input\" && (workspace.self || type === \"create\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                            onClick: () => {\n                              {\n                                selectedNode === i ? setSelectedNode(state => state - 1) : selectedNode < i ? setSelectedNode(state => state) : selectedNode > i && /*#__PURE__*/_jsxDEV(_Fragment, {\n                                  children: selectedNode - i === 1 ? setSelectedNode(state => state - 1) : setSelectedNode(i)\n                                }, void 0, false);\n                              }\n                              model.splice(i, 1);\n                              setChangedSettings(true);\n                              setRefreshDiagram(new Date().getTime());\n                            },\n                            children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n                              className: \"create-model-diagram-remove\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 547,\n                              columnNumber: 81\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 531,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 526,\n                          columnNumber: 69\n                        }, this), i === model.length - 1 && node.type !== \"Output\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: addNode && (workspace.self || type === \"create\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"create-model-diagram-add\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              onClick: () => {\n                                setAddNode(false);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n                                className: \"create-model-diagram-add-icon\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 556,\n                                columnNumber: 89\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 555,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"create-model-diagram-add-options\",\n                              children: [(model[model.length - 1].type === \"Input\" || model[model.length - 1].type === \"Conv2D\" || model[model.length - 1].type === \"MaxPooling2D\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: () => {\n                                    setModel(state => [...state, {\n                                      type: \"Conv2D\",\n                                      kernel: 3,\n                                      stride: 2,\n                                      padding: \"same\",\n                                      activation: \"none\"\n                                    }]);\n                                    setSelectedNode(model.length);\n                                    setAddNode(false);\n                                    setChangedSettings(true);\n                                  },\n                                  children: \"Conv2D\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 561,\n                                  columnNumber: 97\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: () => {\n                                    setModel(state => [...state, {\n                                      type: \"MaxPooling2D\",\n                                      pool: 3,\n                                      strides: 2,\n                                      padding: \"same\"\n                                    }]);\n                                    setSelectedNode(model.length);\n                                    setAddNode(false);\n                                    setChangedSettings(true);\n                                  },\n                                  children: \"MaxPooling2D\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 572,\n                                  columnNumber: 97\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: () => {\n                                    setModel(state => [...state, {\n                                      type: \"Flatten\"\n                                    }]);\n                                    setSelectedNode(model.length);\n                                    setAddNode(false);\n                                    setChangedSettings(true);\n                                  },\n                                  children: \"Flatten\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 582,\n                                  columnNumber: 97\n                                }, this)]\n                              }, void 0, true), (model[model.length - 1].type === \"Flatten\" || model[model.length - 1].type === \"Dense\") && /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => {\n                                  setModel(state => [...state, {\n                                    type: \"Dense\",\n                                    units: 0,\n                                    activation: \"none\"\n                                  }]);\n                                  setSelectedNode(model.length);\n                                  setAddNode(false);\n                                  setChangedSettings(true);\n                                },\n                                children: \"Dense\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 592,\n                                columnNumber: 93\n                              }, this), model[model.length - 1].type === \"Dense\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => {\n                                  {\n                                    uploadedDataset.labels.length === 2 ? setModel(state => [...state, {\n                                      type: \"Output\",\n                                      value: 1,\n                                      activation: \"none\"\n                                    }]) : setModel(state => [...state, {\n                                      type: \"Output\",\n                                      value: uploadedDataset.labels.length,\n                                      activation: \"none\"\n                                    }]);\n                                  }\n                                  setSelectedNode(model.length);\n                                  setAddNode(false);\n                                  setChangedSettings(true);\n                                },\n                                children: \"Output\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 603,\n                                columnNumber: 93\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 558,\n                              columnNumber: 85\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 554,\n                            columnNumber: 81\n                          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: (workspace.self || type === \"create\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                              onClick: () => {\n                                setAddNode(true);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                                className: \"create-model-diagram-add-icon\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 628,\n                                columnNumber: 93\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 627,\n                              columnNumber: 89\n                            }, this)\n                          }, void 0, false)\n                        }, void 0, false)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 525,\n                        columnNumber: 65\n                      }, this);\n                    }), /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: modelRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 57\n                    }, this)]\n                  }, refreshDiagram, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-model-selected\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: model[selectedNode].type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-model-selected-input\",\n                      children: model[selectedNode].type !== \"Flatten\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [!(model[selectedNode].type === \"MaxPooling2D\" || model[selectedNode].type === \"Input\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              children: \"Units\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 650,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              value: model[selectedNode].value,\n                              disabled: model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\" || !(workspace.self || type === \"create\"),\n                              onChange: e => {\n                                setModel(state => {\n                                  const stateCopy = [...state];\n                                  stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                                    value: Number(e.target.value)\n                                  };\n                                  return stateCopy;\n                                });\n                                setChangedSettings(true);\n                                setRefreshDiagram(new Date().getTime());\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 651,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 649,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              children: \"Activation\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 667,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                              value: model[selectedNode].activation,\n                              disabled: !(workspace.self || type === \"create\"),\n                              onChange: e => {\n                                setModel(state => {\n                                  const stateCopy = [...state];\n                                  stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                                    activation: e.target.value\n                                  };\n                                  return stateCopy;\n                                });\n                                setChangedSettings(true);\n                                setRefreshDiagram(new Date().getTime());\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                disabled: true,\n                                defaultValue: true,\n                                value: \"\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 682,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"sigmoid\",\n                                children: \"Sigmoid\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 683,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"softmax\",\n                                children: \"Softmax\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 684,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"softplus\",\n                                children: \"Softplus\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 685,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"softsign\",\n                                children: \"Softsign\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 686,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"swish\",\n                                children: \"Swish\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 687,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"selu\",\n                                children: \"Selu\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 688,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"tanh\",\n                                children: \"Tanh\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 689,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"elu\",\n                                children: \"Elu\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 690,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"exponential\",\n                                children: \"Exponential\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 691,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"gelu\",\n                                children: \"Gelu\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 692,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"hard_sigmoid\",\n                                children: \"Hard Sigmoid\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 693,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"linear\",\n                                children: \"Linear\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 694,\n                                columnNumber: 89\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"relu\",\n                                children: \"Relu\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 695,\n                                columnNumber: 89\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 668,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 666,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true), model[selectedNode].type === \"Conv2D\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Padding\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 702,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"create-model-configuration-option-checkbox\",\n                            type: \"checkbox\",\n                            disabled: !(workspace.self || type === \"create\"),\n                            onChange: e => {\n                              setConfiguration(state => ({ ...state,\n                                lr_scheduler: !configuration.lr_scheduler\n                              }));\n                              setChangedSettings(true);\n                            },\n                            checked: configuration.lr_scheduler\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 703,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 701,\n                          columnNumber: 73\n                        }, this), !(model[selectedNode].type === \"Dense\" || model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: model[selectedNode].type === \"Conv2D\" ? \"Filter Size\" : \"Pool Size\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 718,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            value: model[selectedNode].value,\n                            disabled: (model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.self || type === \"create\"),\n                            onChange: e => {\n                              setModel(state => {\n                                const stateCopy = [...state];\n                                stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                                  value: Number(e.target.value)\n                                };\n                                return stateCopy;\n                              });\n                              setChangedSettings(true);\n                              setRefreshDiagram(new Date().getTime());\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 719,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 717,\n                          columnNumber: 73\n                        }, this), model[selectedNode].type === \"Input\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Image Dimension\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 737,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            value: model[selectedNode].value,\n                            disabled: (model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.self || type === \"create\"),\n                            onChange: e => {\n                              setModel(state => {\n                                const stateCopy = [...state];\n                                stateCopy[selectedNode] = { ...stateCopy[selectedNode],\n                                  value: Number(e.target.value)\n                                };\n                                return stateCopy;\n                              });\n                              setChangedSettings(true);\n                              setRefreshDiagram(new Date().getTime());\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 738,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 736,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-model-configuration\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-model-configuration-option\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Epochs\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 761,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.epochs,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              epochs: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 762,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 760,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Validation Split\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 773,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.validation_split,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              validation_split: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 774,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 772,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Test Split\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 785,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.test_split,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              test_split: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 786,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 784,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Minimum Improvement\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 797,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.improvement,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              improvement: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 798,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 796,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Patience\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 809,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.patience,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              patience: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 810,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 808,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Batch Size\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 821,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.batch,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              batch: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 822,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Initial Learning Rate\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 833,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          value: configuration.batch,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              batch: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 834,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 832,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Learning Rate Scheduler\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 845,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          className: \"create-model-configuration-option-checkbox\",\n                          type: \"checkbox\",\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              lr_scheduler: !configuration.lr_scheduler\n                            }));\n                            setChangedSettings(true);\n                          },\n                          checked: configuration.lr_scheduler\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 846,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 844,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Optimiser\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 859,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: configuration.optimiser,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              optimiser: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            disabled: true,\n                            defaultValue: true,\n                            value: \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 869,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Adadelta\",\n                            children: \"Adadelta\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 870,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Adagrad\",\n                            children: \"Adagrad\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 871,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Adam\",\n                            children: \"Adam\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 872,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Adamax\",\n                            children: \"Adamax\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 873,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Ftrl\",\n                            children: \"Ftrl\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 874,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Nadam\",\n                            children: \"Nadam\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 875,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"RMSprop\",\n                            children: \"RMSprop\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 876,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SGD\",\n                            children: \"SGD\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 877,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 860,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 858,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Loss\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 881,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: configuration.loss,\n                          disabled: !(workspace.self || type === \"create\"),\n                          onChange: e => {\n                            setConfiguration(state => ({ ...state,\n                              loss: e.target.value\n                            }));\n                            setChangedSettings(true);\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            disabled: true,\n                            defaultValue: true,\n                            value: \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 891,\n                            columnNumber: 69\n                          }, this), uploadedDataset.labels.length === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"binary_crossentropy\",\n                              children: \"Binary Crossentropy\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 894,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"hinge\",\n                              children: \"Hinge\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 895,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"squared_hinge\",\n                              children: \"Squared Hinge\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 896,\n                              columnNumber: 77\n                            }, this)]\n                          }, void 0, true), uploadedDataset.labels.length > 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"categorical_crossentropy\",\n                              children: \"Categorical Crossentropy\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 901,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"kl_divergence\",\n                              children: \"Kullback Leibler Divergence\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 902,\n                              columnNumber: 77\n                            }, this)]\n                          }, void 0, true)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 882,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 880,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 759,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"end-items\",\n                children: \"Select a dataset...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 45\n              }, this)\n            }, void 0, false) : stage === \"evaluation\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this), uploadedDataset && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: noData ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"Cannot find dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-workspace-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-workspace-data-header\",\n                children: \"Selected Dataset:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"create-workspace-data-header-dataset\",\n                children: uploadedDataset.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sidebar-divided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-workspace-data-images-list\",\n                children: images.map((image, i) => {\n                  if (i >= start && i < end && assignedLabels[i] !== \"No label\") {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"create-workspace-data-image\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `http://127.0.0.1:5000/files/${uploadedDataset.imageFile}/images/${assignedLabels[i]}/${image}.jpg`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 935,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: assignedLabels[i]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 936,\n                        columnNumber: 65\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 934,\n                      columnNumber: 61\n                    }, this);\n                  }\n                })\n              }, refreshData, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sidebar-divided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-workspace-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"create-workspace-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(images.length / 20)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"create-workspace-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"k1kMZi3WNgGLJuaCT6LDxVMhkFk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useRef","useContext","useHistory","useParams","Link","usersAPI","itemsAPI","globalAPI","imageAPI","trainAPI","ModelNode","OpenItemsContext","ArrowForwardIosIcon","ArrowBackIosNewIcon","ClearIcon","AddIcon","RemoveIcon","BookmarkIcon","ThumbUpIcon","VisibilityOffIcon","VisibilityIcon","OpenInNewIcon","Workspace","currentUser","type","stage","setStage","title","setTitle","description","setDescription","visibility","setVisibility","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","updated","setUpdated","picture","setPicture","date","setDate","start","setStart","end","setEnd","page","setPage","image","setImage","datasetID","setDatasetID","uploadedDataset","setUploadedDataset","workspace","setWorkspace","images","setImages","assignedLabels","setAssignedLabels","refreshData","setRefreshData","refreshDiagram","setRefreshDiagram","changedSettings","setChangedSettings","model","setModel","selectedNode","setSelectedNode","configuration","setConfiguration","epochs","training_split","validation_split","improvement","patience","batch","lr_scheduler","initial_lr","optimiser","loss","addNode","setAddNode","results","setResults","loaded","setLoaded","exist","setExist","noData","setNoData","disableCreate","setDisabledCreate","disableTrain","setDisabledTrain","displayPublic","setDisplayPublic","displayExist","setDisplayExist","addOpenItems","removeOpenItems","modelRef","workspaceID","id","publicInterval","existInterval","history","fetchData","get","data","map","previous","self","_id","dataset","fetch","imageFile","then","response","json","state","filename","label","catch","err","current","scrollIntoView","behavior","block","inline","updatedDate","Date","currentDate","getTime","Math","floor","toString","searchFunctionKey","e","key","existingDataset","updateUpvote","put","updateBookmark","updateVisibility","displayPublicInterval","clearInterval","setInterval","displayExistInterval","previousPage","nextPage","length","checkPublic","success","value","activation","uploadImage","formImage","FormData","append","imageResponse","post","uploadData","imageName","workspaceResponse","creator","bookmarks","toISOString","push","train","formData","labels","node","updateWorkspace","tempPicture","undefined","deleteWorkspace","delete","replace","target","files","creatorName","name","i","splice","kernel","stride","padding","pool","strides","units","stateCopy","Number","test_split","ceil"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useContext} from 'react'\nimport {useHistory, useParams, Link} from \"react-router-dom\"\nimport usersAPI from '../API/users'\nimport itemsAPI from '../API/items'\nimport globalAPI from '../API/global'\nimport imageAPI from '../API/images'\nimport trainAPI from '../API/train'\nimport ModelNode from '../Components/Model-Node';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nconst Workspace = ({currentUser, type}) => {\n    const [stage, setStage] = useState(\"model\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [visibility, setVisibility] = useState(false);\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [updated, setUpdated] = useState()\n    const [picture, setPicture] = useState()\n    const [date, setDate] = useState(\"\")\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(20)\n    const [page, setPage] = useState(1)\n    const [image, setImage] = useState();\n    const [datasetID, setDatasetID] = useState(\"\")\n    const [uploadedDataset, setUploadedDataset] = useState()\n    const [workspace, setWorkspace] = useState([]);\n    const [images, setImages] = useState([])\n    const [assignedLabels, setAssignedLabels] = useState([])\n    const [refreshData, setRefreshData] = useState()\n    const [refreshDiagram, setRefreshDiagram] = useState()\n    const [changedSettings, setChangedSettings] = useState(false)\n    const [model, setModel] = useState([])\n    const [selectedNode, setSelectedNode] = useState(0)\n    const [configuration, setConfiguration] = useState({epochs: 0, training_split: 0, validation_split: 0, improvement: 0,\n                                                        patience: 0, batch: 32, lr_scheduler: false, initial_lr: 0.01, optimiser: \"\", loss: \"\"})\n    const [addNode, setAddNode] = useState(false)\n    const [results, setResults] = useState()\n    const [loaded, setLoaded] = useState(false);\n    const [exist, setExist] = useState()\n    const [noData, setNoData] = useState()\n    const [disableCreate, setDisabledCreate] = useState(false)\n    const [disableTrain, setDisabledTrain] = useState(true)\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const {addOpenItems, removeOpenItems} = useContext(OpenItemsContext);\n    const modelRef = useRef(null)\n    const workspaceID = useParams().id;\n    const publicInterval = useRef(0)\n    const existInterval = useRef(0)\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (type === \"create\") {\n                    const workspace = await usersAPI.get(\"/created?type=workspace\");\n    \n                    workspace.data.data.map((workspace) => {\n                        setWorkspace(previous => [...previous, workspace.title]);\n                    })\n\n                    setExist(true)\n                    setLoaded(true)\n                } else {\n                    const workspace = await itemsAPI.get(`/${workspaceID}?type=workspace`);\n\n                    if (workspace.data.data.self) {\n                        addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                    }\n\n                    setWorkspace(workspace.data.data);\n                    setUpdated(workspace.data.data.updated);\n                    setBookmarked(workspace.data.data.bookmarked)\n                    setUpvoted(workspace.data.data.upvoted)\n                    setPicture(workspace.data.data.picture)\n                    setUpvotes(workspace.data.data.upvotes)\n                    setDatasetID(workspace.data.data.dataset._id)\n                    setVisibility(workspace.data.data.visibility)\n                    setTitle(workspace.data.data.title)\n                    setDescription(workspace.data.data.description)\n                    setModel(workspace.data.data.model)\n                    setConfiguration(workspace.data.data.configuration)\n                    setUploadedDataset(workspace.data.data.dataset)\n\n                    fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.imageFile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setExist(true)\n                            setNoData(false)\n                            setLoaded(true)\n                        }).catch(() => {\n                            setExist(true)\n                            setNoData(true)\n                            setLoaded(true)\n                        });\n                }\n            } catch (err) {\n                setExist(false)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (modelRef.current) {\n            modelRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'end',\n                inline: 'end'\n            })\n        }\n    }, [model, addNode])\n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded, updated])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && datasetID !== \"\") {\n            existingDataset()\n        }\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${workspaceID}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setStart((page-2)*20)\n            setEnd((page-1)*20)\n            setPage(state => state-1)\n            setRefreshData(new Date().getTime())\n        }\n    }\n    \n    const nextPage = () => {\n        if (page*20 < images.length && images.length > 20) {\n            setPage(state => state+1)\n            setStart((page)*20)\n            setEnd((page+1)*20)\n            setRefreshData(new Date().getTime())\n        }\n    }\n\n    const existingDataset = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?id=${datasetID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${checkPublic.data.data.imageFile}/labels.json`)\n                        .then(response => response.json())\n                        .then(images => {\n                            images.map(image => {\n                                setImages(state => [...state, image.filename])\n                                setAssignedLabels(state => [...state, image.label])\n                            })\n                            setUploadedDataset(checkPublic.data.data)\n                            setRefreshData(new Date().getTime())\n                            {model.length === 0 &&\n                                setModel([{type: \"Input\", value: 1, activation: \"none\"}])\n                            }\n                            setChangedSettings(true)\n                        })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const uploadImage = async () => {\n        setDisabledCreate(true)\n\n        if (uploadedDataset && title !== \"\" && description !== \"\") {\n            const formImage = new FormData();\n            formImage.append('image', image);\n\n            try {\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                uploadData(imageResponse.data.data)\n            } catch (err) {}\n        } else {\n            uploadData(\"default.png\")\n        }\n    }\n\n    const uploadData = async (imageName) => {\n        try {\n            const workspaceResponse = await itemsAPI.post(\"/\", {\n                title: title,\n                dataset: uploadedDataset._id,\n                creator: currentUser.id,\n                description: description,\n                picture: imageName,\n                upvotes: [],\n                bookmarks: [],\n                model: model,\n                configuration: configuration,\n                updated: new Date().toISOString(),\n                visibility: visibility,\n                type: \"workspace\"\n            });\n\n            history.push(`/workspace/${workspaceResponse.data.data}`)\n        } catch (err) {}\n    }\n\n    const train = async () => {\n        try {\n            // setDisabledTrain(true)\n            // setStage(\"train\")\n    \n            const formData = new FormData();\n        \n            formData.append('epochs', configuration.epochs)\n            formData.append('training_split', configuration.training_split)\n            formData.append('validation_split', configuration.validation_split)\n            formData.append('improvement', configuration.improvement)\n            formData.append('patience', configuration.patience)\n            formData.append('batch', configuration.batch)\n            formData.append('lr_scheduler', configuration.lr_scheduler)\n            formData.append('initial_lr', configuration.initial_lr)\n            formData.append('optimiser', configuration.optimiser)\n            formData.append('loss', configuration.loss)\n            formData.append('imageFile', uploadedDataset.imageFile)\n            formData.append('height', 32)\n            formData.append('width', 32)\n            formData.append('binary', uploadedDataset.labels.length <= 2)\n\n            model.map(node => {\n                formData.append('activations[]', node.activation)\n                formData.append('units[]', node.value)\n            })\n\n            const response = await trainAPI.post(\"\", formData);\n\n            if (response) {\n                setResults(response)\n                setStage(\"evaluation\")\n            } else {\n                setDisabledTrain(false)\n            }\n        } catch (err) {}\n    }\n\n    const updateWorkspace = async () => {\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n            \n            try {\n                const tempPicture = picture\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: imageResponse.data.data,\n                    dataset: uploadedDataset._id,\n                    model: model,\n                    configuration: configuration,\n                    updated: new Date().toISOString()\n                })\n\n                setImage(undefined)\n                setPicture(imageResponse.data.data)\n\n                if (tempPicture !== \"default.png\") {\n                    await imageAPI.put('/remove', {picture: tempPicture});\n                }\n            } catch (err) {}\n        } else {\n            try {\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: picture,\n                    dataset: uploadedDataset._id,\n                    model: model,\n                    configuration: configuration,\n                    updated: new Date().toISOString()\n                })\n            } catch (err) {}\n        }\n\n        setUpdated(new Date().toISOString())\n        setChangedSettings(false)\n    }\n\n    const deleteWorkspace = async () => {\n        try {\n            await itemsAPI.delete(`/${workspaceID}`)\n\n            removeOpenItems(workspaceID)\n            history.replace(\"/home\")\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <div className=\"sidebar-header\">\n                            <img src=\"http://localhost:3000/workspace.png\"\n                                    className={!(type === \"view\" && !workspace.self) ? \"create-item-edit-image\" : undefined} />\n                            <input className={`create-item-title ${!(type === \"view\" && !workspace.self) && \"create-item-edit-input\"}`}\n                                    placeholder=\"Title\"\n                                    onChange={e => {\n                                        setTitle(e.target.value)\n                                        setChangedSettings(true)\n                                    }}\n                                    disabled={!(workspace.self || type === \"create\")}\n                                    value={title} />\n                        </div>\n                        <textarea className={`create-item-description ${!(type === \"view\" && !workspace.self) && \"create-item-edit-textarea\"}`}\n                                    placeholder=\"Description\"\n                                    onChange={e => {\n                                        setDescription(e.target.value)\n                                        setChangedSettings(true)\n                                    }}\n                                    disabled={!(workspace.self || type === \"create\")}\n                                    value={description} />\n                        {(workspace.self || type === \"create\") &&\n                            <>\n                                <div className=\"create-item-setup\">\n                                    <label className=\"create-item-setup-label\">Picture</label>\n                                    <input className=\"create-item-setup-input\"\n                                            type=\"file\" \n                                            name=\"image\" \n                                            onChange={e => {\n                                                setImage(e.target.files[0])\n                                                setChangedSettings(true)\n                                            }} />\n                                </div>\n                                {type === \"create\" &&\n                                    <div className=\"create-item-setup\">\n                                        <label className=\"create-item-setup-label\">Public?</label>\n                                        <input type=\"checkbox\" \n                                                onChange={() => {\n                                                    setVisibility(previous => !previous)\n                                                    setChangedSettings(true)\n                                                }}\n                                                checked={visibility} />\n                                    </div>\n                                }\n                            </>\n                        }\n                        {!workspace.self && type !== \"create\" && <p className=\"item-creator\">{workspace.creatorName.name}</p>}\n                        <div className=\"item-information\">\n                            {type !== \"create\" && <p className=\"item-date\">{date}</p>}\n                            <span />\n                            {type !== \"create\" &&\n                                <>\n                                    <ThumbUpIcon className={`item-icon ${upvoted ? \"blue2\" : \"white\"}`} onClick={() => {updateUpvote()}} />\n                                    <p className={upvoted ? \"blue2\" : \"white\"}>{upvotes}</p>\n                                </>\n                            }\n                            {!workspace.self && type !== \"create\" && <BookmarkIcon className={`item-icon ${bookmarked ? \"blue2\" : \"white\"}`} onClick={() => {updateBookmark()}} />}\n                            {workspace.self && type !== \"create\" && \n                                <>\n                                    {visibility ? \n                                        <VisibilityIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                    :\n                                        <VisibilityOffIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                    }\n                                </>\n                            }\n                        </div>\n                        <div className=\"sidebar-divided\" />\n                        <div className=\"create-workspace-uploaded-dataset\">\n                            {(type === \"create\" || workspace.self) ?\n                                <>\n                                    <input className={`create-workspace-import-existing ${!(type === \"view\" && !workspace.self) && \"create-item-edit-input\"}`}\n                                            placeholder=\"Dataset ID\"\n                                            onChange={e => {setDatasetID(e.target.value)}}\n                                            onKeyPress={searchFunctionKey}\n                                            value={datasetID} />\n                                    {type === \"view\" && <Link className=\"create-item-view-dataset\" to={`/dataset/${datasetID}`}><OpenInNewIcon /></Link>}\n                                </>\n                            :\n                                <div>\n                                    <p className=\"create-workspace-uploaded-dataset-header\">Selected Dataset:</p>\n                                    <Link to={`/dataset/${datasetID}`} className=\"create-workspace-uploaded-dataset-link\">\n                                        <img src={`http://localhost:4000/images/${uploadedDataset.picture}`} />\n                                        <p>{uploadedDataset.title}</p>\n                                    </Link>\n                                </div>\n                            }\n                        </div>\n                        \n                        {type === \"view\" &&\n                            <>\n                                {workspace.self &&\n                                    <>\n                                        <div className=\"sidebar-divided\" />\n                                        <button className=\"blue-button item-save\"\n                                                disabled={!changedSettings}\n                                                onClick={() => {updateWorkspace()}}>Save Changes</button>\n                                        <button className=\"text-button item-delete\"\n                                                onClick={() => {deleteWorkspace()}}>Delete</button>\n                                    </>\n                                }\n                            </>\n                        }\n                        {displayPublic && <p className=\"create-item-data-notification\">Dataset not public</p>}\n                        {displayExist && <p className=\"create-item-data-notification\">Dataset does not exist</p>}\n                    </div>\n                    <div className=\"inner\">\n                        <div className=\"workspace-body\">\n                            <div className=\"workspace-inner\">\n                                <div className=\"view-items-top\">\n                                    {type === \"create\" &&\n                                        <>\n                                            <h1>Create Workspace</h1>\n                                            <button className=\"blue-button\"\n                                                    // disabled={disableTrain}\n                                                    onClick={() => {train()}}>Train</button>\n                                        </>\n                                    }\n                                    {type === \"view\" &&\n                                        <>\n                                            <button className={`text-button ${stage === \"model\" ? \"item-header-button-selected\" : \"item-header-button-unselected\"}`}\n                                                    onClick={() => {setStage(\"model\")}}>Model</button>\n                                            <button className={`text-button ${stage === \"evaluation\" ? \"item-header-button-selected\" : \"item-header-button-unselected\"}`}\n                                                    onClick={() => {setStage(\"evaluation\")}}>Evaluation</button>\n                                            <span />\n                                            {workspace.self &&\n                                                <button className=\"blue-button\"\n                                                        // disabled={disableTrain}\n                                                        onClick={() => {train()}}>Train</button>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                                {stage === \"model\" ?\n                                    <>\n                                        {model.length !== 0 ?\n                                            <div className=\"create-modelling-body\">\n                                                <div className=\"create-model\">\n                                                    <div className=\"create-model-diagram\" key={refreshDiagram}>\n                                                        {model.map((node, i) => {\n                                                            return (\n                                                                <div key={i}>\n                                                                    <div className={\"create-model-diagram-node\"}>\n                                                                        <div onClick={() => {setSelectedNode(i)}}>\n                                                                            <ModelNode setSelectedNode={setSelectedNode} type={node.type} value={node.value} selected={i === selectedNode} last={i === model.length-1} />\n                                                                        </div>\n                                                                        {node.type !== \"Input\" && (workspace.self || type === \"create\") &&\n                                                                            <div onClick={() => {{selectedNode === i ?\n                                                                                                    setSelectedNode(state => state-1)\n                                                                                                : selectedNode < i ?\n                                                                                                    setSelectedNode(state => state)\n                                                                                                : selectedNode > i &&\n                                                                                                    <>\n                                                                                                        {selectedNode-i === 1 ?\n                                                                                                            setSelectedNode(state => state-1)\n                                                                                                        :\n                                                                                                            setSelectedNode(i)\n                                                                                                        } \n                                                                                                    </>  \n                                                                                                }\n                                                                                                model.splice(i, 1)\n                                                                                                setChangedSettings(true)\n                                                                                                setRefreshDiagram(new Date().getTime())}}>\n                                                                                <ClearIcon className=\"create-model-diagram-remove\" />\n                                                                            </div>\n                                                                        }\n                                                                    </div>\n                                                                    {i === model.length-1 && node.type !== \"Output\" &&\n                                                                        <>\n                                                                            {addNode && (workspace.self || type === \"create\") ?\n                                                                                <div className=\"create-model-diagram-add\">\n                                                                                    <div onClick={() => {setAddNode(false)}}>\n                                                                                        <RemoveIcon className=\"create-model-diagram-add-icon\" />\n                                                                                    </div>\n                                                                                    <div className=\"create-model-diagram-add-options\">\n                                                                                        {(model[model.length-1].type === \"Input\" || model[model.length-1].type === \"Conv2D\" || model[model.length-1].type === \"MaxPooling2D\") &&\n                                                                                            <>\n                                                                                                <button onClick={() => {setModel(state => [...state, {\n                                                                                                        type: \"Conv2D\",\n                                                                                                        kernel: 3,\n                                                                                                        stride: 2,\n                                                                                                        padding: \"same\",\n                                                                                                        activation: \"none\"\n                                                                                                    }])\n                                                                                                    setSelectedNode(model.length)\n                                                                                                    setAddNode(false)\n                                                                                                    setChangedSettings(true)\n                                                                                                }}>Conv2D</button>\n                                                                                                <button onClick={() => {setModel(state => [...state, {\n                                                                                                        type: \"MaxPooling2D\",\n                                                                                                        pool: 3,\n                                                                                                        strides: 2,\n                                                                                                        padding: \"same\"\n                                                                                                    }])\n                                                                                                    setSelectedNode(model.length)\n                                                                                                    setAddNode(false)\n                                                                                                    setChangedSettings(true)\n                                                                                                }}>MaxPooling2D</button>\n                                                                                                <button onClick={() => {setModel(state => [...state, {\n                                                                                                        type: \"Flatten\"\n                                                                                                    }])\n                                                                                                    setSelectedNode(model.length)\n                                                                                                    setAddNode(false)\n                                                                                                    setChangedSettings(true)\n                                                                                                }}>Flatten</button>\n                                                                                            </>\n                                                                                        }\n                                                                                        {(model[model.length-1].type === \"Flatten\" || model[model.length-1].type === \"Dense\") &&\n                                                                                            <button onClick={() => {setModel(state => [...state, {\n                                                                                                    type: \"Dense\",\n                                                                                                    units: 0,\n                                                                                                    activation: \"none\"\n                                                                                                }])\n                                                                                                setSelectedNode(model.length)\n                                                                                                setAddNode(false)\n                                                                                                setChangedSettings(true)\n                                                                                            }}>Dense</button>\n                                                                                        }\n                                                                                        {model[model.length-1].type === \"Dense\" &&\n                                                                                            <button onClick={() => {\n                                                                                                    {uploadedDataset.labels.length === 2 ?\n                                                                                                        setModel(state => [...state, {\n                                                                                                            type: \"Output\",\n                                                                                                            value: 1,\n                                                                                                            activation: \"none\"\n                                                                                                        }])\n                                                                                                    :\n                                                                                                        setModel(state => [...state, {\n                                                                                                            type: \"Output\",\n                                                                                                            value: uploadedDataset.labels.length,\n                                                                                                            activation: \"none\"\n                                                                                                        }])\n                                                                                                    }\n                                                                                                setSelectedNode(model.length)\n                                                                                                setAddNode(false)\n                                                                                                setChangedSettings(true)\n                                                                                            }}>Output</button>\n                                                                                        }\n                                                                                    </div>\n                                                                                </div>\n                                                                            :\n                                                                                <>  \n                                                                                    {(workspace.self || type === \"create\") &&\n                                                                                        <div onClick={() => {setAddNode(true)}}>\n                                                                                            <AddIcon className=\"create-model-diagram-add-icon\" />\n                                                                                        </div>\n                                                                                    }\n                                                                                </>\n                                                                            }\n                                                                        </>\n                                                                    }\n                                                                </div>\n                                                            )\n                                                        })}\n                                                        <div ref={modelRef} />\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    <div className=\"create-model-selected\">\n                                                        <p>{model[selectedNode].type}</p>\n                                                        <div className=\"create-model-selected-input\">\n                                                            {model[selectedNode].type !== \"Flatten\" &&\n                                                                <>\n                                                                    {!(model[selectedNode].type === \"MaxPooling2D\" || model[selectedNode].type === \"Input\") &&\n                                                                        <>\n                                                                            <div>\n                                                                                <label>Units</label>\n                                                                                <input value={model[selectedNode].value} \n                                                                                        disabled={model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\" || !(workspace.self || type === \"create\")}\n                                                                                        onChange={e => {setModel(state => {\n                                                                                                            const stateCopy = [...state]\n                                                                                                        \n                                                                                                            stateCopy[selectedNode] = {\n                                                                                                                ...stateCopy[selectedNode],\n                                                                                                                value: Number(e.target.value)\n                                                                                                            }\n                                                                                                        \n                                                                                                            return stateCopy\n                                                                                                        })\n                                                                                                        setChangedSettings(true)\n                                                                                                        setRefreshDiagram(new Date().getTime())}} />\n                                                                            </div>\n                                                                            <div>\n                                                                                <label>Activation</label>\n                                                                                <select value={model[selectedNode].activation} \n                                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                                        onChange={e => {setModel(state => {\n                                                                                                            const stateCopy = [...state]\n                                                                                                        \n                                                                                                            stateCopy[selectedNode] = {\n                                                                                                                ...stateCopy[selectedNode],\n                                                                                                                activation: e.target.value\n                                                                                                            }\n                                                                                                        \n                                                                                                            return stateCopy\n                                                                                                        })\n                                                                                                        setChangedSettings(true)\n                                                                                                        setRefreshDiagram(new Date().getTime())}}>\n                                                                                        <option disabled defaultValue value=\"\"></option>\n                                                                                        <option value=\"sigmoid\">Sigmoid</option>\n                                                                                        <option value=\"softmax\">Softmax</option>\n                                                                                        <option value=\"softplus\">Softplus</option>\n                                                                                        <option value=\"softsign\">Softsign</option>\n                                                                                        <option value=\"swish\">Swish</option>\n                                                                                        <option value=\"selu\">Selu</option>\n                                                                                        <option value=\"tanh\">Tanh</option>\n                                                                                        <option value=\"elu\">Elu</option>\n                                                                                        <option value=\"exponential\">Exponential</option>\n                                                                                        <option value=\"gelu\">Gelu</option>\n                                                                                        <option value=\"hard_sigmoid\">Hard Sigmoid</option>\n                                                                                        <option value=\"linear\">Linear</option>\n                                                                                        <option value=\"relu\">Relu</option>\n                                                                                </select>\n                                                                            </div>\n                                                                        </>\n                                                                    }\n                                                                    {model[selectedNode].type === \"Conv2D\" &&\n                                                                        <div>\n                                                                            <label>Padding</label>\n                                                                            <input className=\"create-model-configuration-option-checkbox\"\n                                                                                    type=\"checkbox\" \n                                                                                    disabled={!(workspace.self || type === \"create\")}\n                                                                                    onChange={e => {\n                                                                                        setConfiguration(state => ({\n                                                                                            ...state,\n                                                                                            lr_scheduler: !configuration.lr_scheduler\n                                                                                        }))\n                                                                                        setChangedSettings(true)\n                                                                                    }}\n                                                                                    checked={configuration.lr_scheduler} />\n                                                                        </div>\n                                                                    }\n                                                                    {!(model[selectedNode].type === \"Dense\" || model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") &&\n                                                                        <div>\n                                                                            <label>{model[selectedNode].type === \"Conv2D\" ? \"Filter Size\" : \"Pool Size\"}</label>\n                                                                            <input value={model[selectedNode].value} \n                                                                                    disabled={(model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.self || type === \"create\")}\n                                                                                    onChange={e => {setModel(state => {\n                                                                                                        const stateCopy = [...state]\n                                                                                                    \n                                                                                                        stateCopy[selectedNode] = {\n                                                                                                            ...stateCopy[selectedNode],\n                                                                                                            value: Number(e.target.value)\n                                                                                                        }\n                                                                                                    \n                                                                                                        return stateCopy\n                                                                                                    })\n                                                                                                    setChangedSettings(true)\n                                                                                                    setRefreshDiagram(new Date().getTime())}} />\n                                                                        </div>\n                                                                    }\n                                                                    {model[selectedNode].type === \"Input\" &&\n                                                                        <div>\n                                                                            <label>Image Dimension</label>\n                                                                            <input value={model[selectedNode].value} \n                                                                                    disabled={(model[selectedNode].type === \"Input\" || model[selectedNode].type === \"Output\") && !(workspace.self || type === \"create\")}\n                                                                                    onChange={e => {setModel(state => {\n                                                                                                        const stateCopy = [...state]\n                                                                                                    \n                                                                                                        stateCopy[selectedNode] = {\n                                                                                                            ...stateCopy[selectedNode],\n                                                                                                            value: Number(e.target.value)\n                                                                                                        }\n                                                                                                    \n                                                                                                        return stateCopy\n                                                                                                    })\n                                                                                                    setChangedSettings(true)\n                                                                                                    setRefreshDiagram(new Date().getTime())}} />\n                                                                        </div>\n                                                                    }\n                                                                </>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"create-model-configuration\">\n                                                        <div className=\"create-model-configuration-option\">\n                                                            <div>\n                                                                <label>Epochs</label>\n                                                                <input value={configuration.epochs}\n                                                                        disabled={!(workspace.self || type === \"create\")} \n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                epochs: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Validation Split</label>\n                                                                <input value={configuration.validation_split} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                validation_split: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Test Split</label>\n                                                                <input value={configuration.test_split} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                test_split: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Minimum Improvement</label>\n                                                                <input value={configuration.improvement} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                improvement: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Patience</label>\n                                                                <input value={configuration.patience} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                patience: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Batch Size</label>\n                                                                <input value={configuration.batch} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                batch: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Initial Learning Rate</label>\n                                                                <input value={configuration.batch} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                batch: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Learning Rate Scheduler</label>\n                                                                <input className=\"create-model-configuration-option-checkbox\"\n                                                                        type=\"checkbox\" \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                lr_scheduler: !configuration.lr_scheduler\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }}\n                                                                        checked={configuration.lr_scheduler} />\n                                                            </div>\n                                                            <div>\n                                                                <label>Optimiser</label>\n                                                                <select value={configuration.optimiser} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                optimiser: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }}>\n                                                                    <option disabled defaultValue value=\"\"></option>\n                                                                    <option value=\"Adadelta\">Adadelta</option>\n                                                                    <option value=\"Adagrad\">Adagrad</option>\n                                                                    <option value=\"Adam\">Adam</option>\n                                                                    <option value=\"Adamax\">Adamax</option>\n                                                                    <option value=\"Ftrl\">Ftrl</option>\n                                                                    <option value=\"Nadam\">Nadam</option>\n                                                                    <option value=\"RMSprop\">RMSprop</option>\n                                                                    <option value=\"SGD\">SGD</option>\n                                                                </select>\n                                                            </div>\n                                                            <div>\n                                                                <label>Loss</label>\n                                                                <select value={configuration.loss} \n                                                                        disabled={!(workspace.self || type === \"create\")}\n                                                                        onChange={e => {\n                                                                            setConfiguration(state => ({\n                                                                                ...state,\n                                                                                loss: e.target.value\n                                                                            }))\n                                                                            setChangedSettings(true)\n                                                                        }}>\n                                                                    <option disabled defaultValue value=\"\"></option>\n                                                                    {uploadedDataset.labels.length === 2 &&\n                                                                        <>\n                                                                            <option value=\"binary_crossentropy\">Binary Crossentropy</option>\n                                                                            <option value=\"hinge\">Hinge</option>\n                                                                            <option value=\"squared_hinge\">Squared Hinge</option>\n                                                                        </>\n                                                                    }\n                                                                    {uploadedDataset.labels.length > 2 &&\n                                                                        <>\n                                                                            <option value=\"categorical_crossentropy\">Categorical Crossentropy</option>\n                                                                            <option value=\"kl_divergence\">Kullback Leibler Divergence</option>\n                                                                        </>\n                                                                    }\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        :\n                                            <p className=\"end-items\">Select a dataset...</p>\n                                        }\n                                    </>\n                                : (stage === \"evaluation\") ?\n                                    <></>\n                                : \n                                    <></>\n                                }\n                            </div>\n                            {uploadedDataset && \n                                <>\n                                    {noData ?\n                                        <p className=\"end-items\">Cannot find dataset</p>\n                                    :\n                                        <div className=\"create-workspace-data\">\n                                            <p className=\"create-workspace-data-header\">Selected Dataset:</p>\n                                            <p className=\"create-workspace-data-header-dataset\">{uploadedDataset.title}</p>\n                                            <div className=\"sidebar-divided\" />\n                                            <div className=\"create-workspace-data-images-list\" key={refreshData}>\n                                                {images.map((image, i) => {\n                                                    if (i >= start && i < end && assignedLabels[i] !== \"No label\") {\n                                                        return (\n                                                            <div className=\"create-workspace-data-image\" key={i}>\n                                                                <img src={`http://127.0.0.1:5000/files/${uploadedDataset.imageFile}/images/${assignedLabels[i]}/${image}.jpg`}  />\n                                                                <p>{assignedLabels[i]}</p>\n                                                            </div>\n                                                        )\n                                                    }\n                                                })}\n                                            </div>\n                                            <div className=\"sidebar-divided\" />\n                                            <div className=\"create-workspace-pagination\">\n                                                <ArrowBackIosNewIcon className=\"create-workspace-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / {Math.ceil(images.length/20)}</p>\n                                                <ArrowForwardIosIcon className=\"create-workspace-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                        </div>\n                                    }   \n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"inner\">  \n                    <p className=\"item-exist\">Cannot find workspace</p>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Workspace"]},"metadata":{},"sourceType":"module"}