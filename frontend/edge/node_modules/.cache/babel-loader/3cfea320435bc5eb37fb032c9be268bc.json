{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport workspacesAPI from '../API/workspaces';\nimport globalAPI from '../API/global';\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Workspace = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [noData, setNoData] = useState();\n  const [workspace, setWorkspace] = useState();\n  const [dataTable, setDataTable] = useState();\n  const [dataID, setDataID] = useState(\"\");\n  const [uploadData, setUploadData] = useState();\n  const [changedData, setChangedData] = useState(false);\n  const [changedSettings, setChangedSettings] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [copyData, setCopyData] = useState(true);\n  const [bookmarked, setBookmarked] = useState();\n  const [upvoted, setUpvoted] = useState();\n  const [upvotes, setUpvotes] = useState();\n  const [visibility, setVisibility] = useState();\n  const [comments, setComments] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [section, setSection] = useState(\"data\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const {\n    addOpenItems\n  } = useContext(OpenItemsContext);\n  const copyInterval = useRef(0);\n  const workspaceID = useParams().id;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspace = await workspacesAPI.get(`/${workspaceID}`);\n        const comments = await globalAPI.get(`/comment/${workspaceID}?type=workspace`);\n\n        if (workspace.data.data.creator === currentUser.id) {\n          addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type);\n        }\n\n        setWorkspace(workspace.data.data);\n        setBookmarked(workspace.data.data.bookmarked);\n        setUpvoted(workspace.data.data.upvoted);\n        setUpvotes(workspace.data.data.upvotes);\n        setVisibility(workspace.data.data.visibility);\n        setTitle(workspace.data.data.title);\n        setDescription(workspace.data.data.description);\n        setComments(comments.data.data);\n        fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.data}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setExist(true);\n          setNoData(false);\n          setLoaded(true);\n        }).catch(function () {\n          setExist(true);\n          setNoData(true);\n          setLoaded(true);\n        });\n      } catch (err) {\n        setExist(false);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded) {\n      const updatedDate = new Date(workspace.updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded]);\n  useEffect(() => {\n    if (replaceData && uploadData !== undefined) {\n      setDataID(\"\");\n      const file = uploadData;\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setDataTable(e.target.result);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [uploadData]);\n\n  const existingWorkspace = () => {\n    setUploadData(undefined);\n    fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n      setDataTable(text);\n    });\n  };\n\n  const copiedInterval = () => {\n    clearInterval(copyInterval.current);\n    navigator.clipboard.writeText(workspace.data);\n    setCopyData(false);\n    copyInterval.current = setInterval(() => {\n      setCopyData(true);\n    }, 800);\n    return () => {\n      clearInterval(copyInterval.current);\n    };\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await workspacesAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await workspacesAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await workspacesAPI.put(`/visibility/${workspace._id}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const addComment = async e => {\n    e.preventDefault();\n\n    try {\n      await workspacesAPI.put(`/comment/${workspaceID}`, {\n        comment: comment\n      });\n      setComments([{\n        user: {\n          name: currentUser.name\n        },\n        comment: comment\n      }, ...comments]);\n      setComment(\"\");\n    } catch (err) {}\n  };\n\n  const commentDate = date => {\n    const updatedDate = new Date(date);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`;\n    } else {\n      return \"Posted just now\";\n    }\n  };\n\n  const updateSettings = () => {};\n\n  const deleteWorkspace = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:4000/images/${workspace.picture}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: workspace.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"workspace-meta\",\n              children: workspace.creatorName.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"workspace-meta\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n              className: `workspace-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateBookmark();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              className: `workspace-icon ${upvoted ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateUpvote();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `workspace-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n              children: upvotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"workspace-description\",\n            children: workspace.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"workspace-select\",\n            onChange: e => {\n              setSection(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"data\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"model\",\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comment\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-bottom\",\n          children: section === \"data\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workspace-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workspace-copy\",\n                children: [copyData ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Data ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 57\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Copied\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 74\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: !copyData,\n                  onClick: () => {\n                    copiedInterval();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                    className: \"workspace-copy-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://127.0.0.1:5000/files/${workspace.data}.csv`,\n                download: true,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ViewData, {\n              dataTable: dataTable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : section === \"model\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"workspace-comment-form\",\n              method: \"PUT\",\n              onSubmit: addComment,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"workspace-comment\",\n                children: \"Leave a Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"workspace-comment-input\",\n                value: comment,\n                onChange: e => {\n                  setComment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workspace-comments\",\n              children: comments.map((comment, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-user\",\n                      children: comment.user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-date\",\n                      children: commentDate(comment.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"comment-card-comment\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 53\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Workspace, \"Iz9gQKDaYCe1YYpjQKvnB2jRj4A=\", false, function () {\n  return [useParams];\n});\n\n_c = Workspace;\nexport default Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Workspace.jsx"],"names":["React","useState","useEffect","useRef","useContext","Link","useParams","workspacesAPI","globalAPI","ViewData","OpenItemsContext","BookmarkIcon","ThumbUpIcon","ContentCopyIcon","Workspace","currentUser","loaded","setLoaded","exist","setExist","noData","setNoData","workspace","setWorkspace","dataTable","setDataTable","dataID","setDataID","uploadData","setUploadData","changedData","setChangedData","changedSettings","setChangedSettings","date","setDate","copyData","setCopyData","bookmarked","setBookmarked","upvoted","setUpvoted","upvotes","setUpvotes","visibility","setVisibility","comments","setComments","comment","setComment","section","setSection","title","setTitle","description","setDescription","image","setImage","addOpenItems","copyInterval","workspaceID","id","fetchData","get","data","creator","_id","type","fetch","dataset","then","response","text","catch","err","updatedDate","Date","updated","currentDate","getTime","Math","floor","toString","replaceData","undefined","file","reader","FileReader","onload","e","target","result","readAsText","existingWorkspace","copiedInterval","clearInterval","current","navigator","clipboard","writeText","setInterval","updateUpvote","put","state","updateBookmark","updateVisibility","addComment","preventDefault","user","name","commentDate","updateSettings","deleteWorkspace","picture","creatorName","value","map","i","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,UAA5C,QAA6D,OAA7D;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;;;AAEA,MAAMC,SAAS,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,EAAlC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,EAApC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,EAA1C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,EAA1C;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC2B,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,EAA5C;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC+B,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACiC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACqC,UAAD,EAAaC,aAAb,IAA8BtC,QAAQ,EAA5C;AACA,QAAM,CAACuC,OAAD,EAAUC,UAAV,IAAwBxC,QAAQ,EAAtC;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,EAAtC;AACA,QAAM,CAAC2C,UAAD,EAAaC,aAAb,IAA8B5C,QAAQ,EAA5C;AACA,QAAM,CAAC6C,QAAD,EAAWC,WAAX,IAA0B9C,QAAQ,EAAxC;AACA,QAAM,CAAC+C,OAAD,EAAUC,UAAV,IAAwBhD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiD,OAAD,EAAUC,UAAV,IAAwBlD,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACmD,KAAD,EAAQC,QAAR,IAAoBpD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqD,WAAD,EAAcC,cAAd,IAAgCtD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuD,KAAD,EAAQC,QAAR,IAAoBxD,QAAQ,EAAlC;AACA,QAAM;AAACyD,IAAAA;AAAD,MAAiBtD,UAAU,CAACM,gBAAD,CAAjC;AACA,QAAMiD,YAAY,GAAGxD,MAAM,CAAC,CAAD,CAA3B;AACA,QAAMyD,WAAW,GAAGtD,SAAS,GAAGuD,EAAhC;AAEA3D,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4D,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMxC,SAAS,GAAG,MAAMf,aAAa,CAACwD,GAAd,CAAmB,IAAGH,WAAY,EAAlC,CAAxB;AACA,cAAMd,QAAQ,GAAG,MAAMtC,SAAS,CAACuD,GAAV,CAAe,YAAWH,WAAY,iBAAtC,CAAvB;;AAEA,YAAItC,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBC,OAApB,KAAgClD,WAAW,CAAC8C,EAAhD,EAAoD;AAChDH,UAAAA,YAAY,CAACpC,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBE,GAArB,EAA0B5C,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBZ,KAA9C,EAAqD9B,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBG,IAAzE,CAAZ;AACH;;AAED5C,QAAAA,YAAY,CAACD,SAAS,CAAC0C,IAAV,CAAeA,IAAhB,CAAZ;AACAzB,QAAAA,aAAa,CAACjB,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoB1B,UAArB,CAAb;AACAG,QAAAA,UAAU,CAACnB,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBxB,OAArB,CAAV;AACAG,QAAAA,UAAU,CAACrB,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBtB,OAArB,CAAV;AACAG,QAAAA,aAAa,CAACvB,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBpB,UAArB,CAAb;AACAS,QAAAA,QAAQ,CAAC/B,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBZ,KAArB,CAAR;AACAG,QAAAA,cAAc,CAACjC,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBV,WAArB,CAAd;AACAP,QAAAA,WAAW,CAACD,QAAQ,CAACkB,IAAT,CAAcA,IAAf,CAAX;AAEAI,QAAAA,KAAK,CAAE,+BAA8B9C,SAAS,CAAC0C,IAAV,CAAeA,IAAf,CAAoBK,OAApB,CAA4BL,IAAK,MAAjE,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV/C,UAAAA,YAAY,CAAC+C,IAAD,CAAZ;AACArD,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH,SAPL,EAOOwD,KAPP,CAOa,YAAW;AAChBtD,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,UAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH,SAXL;AAYH,OA7BD,CA6BE,OAAOyD,GAAP,EAAY;AACVvD,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KAlCD;;AAmCA6C,IAAAA,SAAS;AACZ,GArCQ,EAqCN,EArCM,CAAT;AAuCA5D,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,MAAJ,EAAY;AACR,YAAM2D,WAAW,GAAG,IAAIC,IAAJ,CAAStD,SAAS,CAACuD,OAAnB,CAApB;AACA,YAAMC,WAAW,GAAG,IAAIF,IAAJ,EAApB;;AAEA,UAAI,CAACE,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,GAA5E,EAAiF;AAC7E5C,QAAAA,OAAO,CAAE,WAAU6C,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,IAAuE,GAAnF,EAAyFG,QAAzF,EAAoG,YAAhH,CAAP;AACH,OAFD,MAEO,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,EAA5E,EAAgF;AACnF5C,QAAAA,OAAO,CAAE,WAAU6C,IAAI,CAACC,KAAL,CAAW,CAAC,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,IAAuE,EAAxE,EAA4EG,QAA5E,EAAX,CAAmG,aAA/G,CAAP;AACH,OAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,CAA5E,EAA+E;AAClF5C,QAAAA,OAAO,CAAE,WAAU6C,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,CAAZ,EAAmFG,QAAnF,EAA8F,WAA1G,CAAP;AACH,OAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAA1D,KAAmE,CAAvE,EAA0E;AAC7E5C,QAAAA,OAAO,CAAE,WAAU6C,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAA1D,CAAZ,EAA8EG,QAA9E,EAAyF,YAArG,CAAP;AACH,OAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,EAA1D,KAAiE,CAArE,EAAwE;AAC3E5C,QAAAA,OAAO,CAAE,WAAU6C,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,EAA1D,CAAZ,EAA4EG,QAA5E,EAAuF,cAAnG,CAAP;AACH,OAFM,MAEA;AACH/C,QAAAA,OAAO,CAAC,kBAAD,CAAP;AACH;AACJ;AACJ,GAnBQ,EAmBN,CAACnB,MAAD,CAnBM,CAAT;AAqBAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiF,WAAW,IAAIvD,UAAU,KAAKwD,SAAlC,EAA6C;AACzCzD,MAAAA,SAAS,CAAC,EAAD,CAAT;AAEA,YAAM0D,IAAI,GAAGzD,UAAb;AACA,YAAM0D,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AACxBhE,QAAAA,YAAY,CAACgE,CAAC,CAACC,MAAF,CAASC,MAAV,CAAZ;AACH,OAFD;;AAIAL,MAAAA,MAAM,CAACM,UAAP,CAAkBP,IAAlB;AACH;AACJ,GAbQ,EAaN,CAACzD,UAAD,CAbM,CAAT;;AAeA,QAAMiE,iBAAiB,GAAG,MAAM;AAC5BhE,IAAAA,aAAa,CAACuD,SAAD,CAAb;AAEAhB,IAAAA,KAAK,CAAE,+BAA8B1C,MAAO,MAAvC,CAAL,CACK4C,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AAAC/C,MAAAA,YAAY,CAAC+C,IAAD,CAAZ;AAAmB,KAFtC;AAGH,GAND;;AAQA,QAAMsB,cAAc,GAAG,MAAM;AACzBC,IAAAA,aAAa,CAACpC,YAAY,CAACqC,OAAd,CAAb;AACAC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B7E,SAAS,CAAC0C,IAAxC;AACA3B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAsB,IAAAA,YAAY,CAACqC,OAAb,GAAuBI,WAAW,CAAC,MAAM;AACrC/D,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFiC,EAE/B,GAF+B,CAAlC;AAGA,WAAO,MAAK;AAAC0D,MAAAA,aAAa,CAACpC,YAAY,CAACqC,OAAd,CAAb;AAAoC,KAAjD;AACH,GARD;;AAUA,QAAMK,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAM9F,aAAa,CAAC+F,GAAd,CAAmB,WAAU1C,WAAY,UAASpB,OAAQ,EAA1D,CAAN;;AAEA,UAAIA,OAAJ,EAAa;AACTG,QAAAA,UAAU,CAAC4D,KAAK,IAAIA,KAAK,GAAC,CAAhB,CAAV;AACH,OAFD,MAEO;AACH5D,QAAAA,UAAU,CAAC4D,KAAK,IAAIA,KAAK,GAAC,CAAhB,CAAV;AACH;;AAED9D,MAAAA,UAAU,CAAC8D,KAAK,IAAI,CAACA,KAAX,CAAV;AACH,KAVD,CAUE,OAAO7B,GAAP,EAAY,CAAE;AACnB,GAZD;;AAcA,QAAM8B,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMjG,aAAa,CAAC+F,GAAd,CAAmB,aAAY1C,WAAY,UAAStB,UAAW,EAA/D,CAAN;AAEAC,MAAAA,aAAa,CAACgE,KAAK,IAAI,CAACA,KAAX,CAAb;AACH,KAJD,CAIE,OAAO7B,GAAP,EAAY,CAAE;AACnB,GAND;;AAQA,QAAM+B,gBAAgB,GAAG,YAAY;AACjC,QAAI;AACA,YAAMlG,aAAa,CAAC+F,GAAd,CAAmB,eAAchF,SAAS,CAAC4C,GAAI,EAA/C,CAAN;AAEArB,MAAAA,aAAa,CAAC0D,KAAK,IAAI,CAACA,KAAX,CAAb;AACH,KAJD,CAIE,OAAO7B,GAAP,EAAY,CAAE;AACnB,GAND;;AAQA,QAAMgC,UAAU,GAAG,MAAOjB,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACkB,cAAF;;AAEA,QAAI;AACA,YAAMpG,aAAa,CAAC+F,GAAd,CAAmB,YAAW1C,WAAY,EAA1C,EAA6C;AAC/CZ,QAAAA,OAAO,EAAEA;AADsC,OAA7C,CAAN;AAIAD,MAAAA,WAAW,CAAC,CAAC;AACT6D,QAAAA,IAAI,EAAE;AAACC,UAAAA,IAAI,EAAE9F,WAAW,CAAC8F;AAAnB,SADG;AAET7D,QAAAA,OAAO,EAAEA;AAFA,OAAD,EAGT,GAAGF,QAHM,CAAD,CAAX;AAIAG,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAVD,CAUE,OAAOyB,GAAP,EAAY,CAAE;AACnB,GAdD;;AAgBA,QAAMoC,WAAW,GAAI5E,IAAD,IAAU;AAC1B,UAAMyC,WAAW,GAAG,IAAIC,IAAJ,CAAS1C,IAAT,CAApB;AACA,UAAM4C,WAAW,GAAG,IAAIF,IAAJ,EAApB;;AAEA,QAAI,CAACE,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,GAA5E,EAAiF;AAC7E,aAAQ,UAASC,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,IAAuE,GAAnF,EAAyFG,QAAzF,EAAoG,YAArH;AACH,KAFD,MAEO,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,EAA5E,EAAgF;AACnF,aAAQ,UAASC,IAAI,CAACC,KAAL,CAAW,CAAC,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,IAAuE,EAAxE,EAA4EG,QAA5E,EAAX,CAAmG,aAApH;AACH,KAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,KAAwE,CAA5E,EAA+E;AAClF,aAAQ,UAASC,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAAP,GAAc,EAAjE,CAAZ,EAAmFG,QAAnF,EAA8F,WAA/G;AACH,KAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAA1D,KAAmE,CAAvE,EAA0E;AAC7E,aAAQ,UAASC,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,IAA1D,CAAZ,EAA8EG,QAA9E,EAAyF,YAA1G;AACH,KAFM,MAEA,IAAI,CAACJ,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,EAA1D,KAAiE,CAArE,EAAwE;AAC3E,aAAQ,UAASC,IAAI,CAACC,KAAL,CAAY,CAACH,WAAW,CAACC,OAAZ,KAAwBJ,WAAW,CAACI,OAAZ,EAAzB,KAAmD,OAAO,EAA1D,CAAZ,EAA4EG,QAA5E,EAAuF,cAAxG;AACH,KAFM,MAEA;AACH,aAAO,iBAAP;AACH;AACJ,GAjBD;;AAmBA,QAAM6B,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAIA,sBACI;AAAA,cACKhG,MAAM,IAAIE,KAAV,gBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAG,gCAA+BI,SAAS,CAAC2F,OAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAK3F,SAAS,CAAC8B;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,wBAA+B9B,SAAS,CAAC4F,WAAV,CAAsBL;AAArD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,wBAA+B3E;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,YAAD;AAAc,cAAA,SAAS,EAAG,kBAAiBI,UAAU,GAAG,MAAH,GAAY,MAAO,EAAxE;AAA2E,cAAA,OAAO,EAAE,MAAM;AAACkE,gBAAAA,cAAc;AAAG;AAA5G;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,WAAD;AAAa,cAAA,SAAS,EAAG,kBAAiBhE,OAAO,GAAG,MAAH,GAAY,MAAO,EAApE;AAAuE,cAAA,OAAO,EAAE,MAAM;AAAC6D,gBAAAA,YAAY;AAAG;AAAtG;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAG,cAAA,SAAS,EAAG,qBAAoB7D,OAAO,GAAG,MAAH,GAAY,MAAO,EAA7D;AAAA,wBAAiEE;AAAjE;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAUI;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA,sBAAsCpB,SAAS,CAACgC;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI;AAAQ,YAAA,SAAS,EAAC,kBAAlB;AAAqC,YAAA,QAAQ,EAAEmC,CAAC,IAAI;AAACtC,cAAAA,UAAU,CAACsC,CAAC,CAACC,MAAF,CAASyB,KAAV,CAAV;AAA2B,aAAhF;AAAA,oCACI;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkBI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBACKjE,OAAO,KAAK,MAAZ,gBACG;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,2BACKd,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADjC,eAEI;AAAQ,kBAAA,QAAQ,EAAE,CAACA,QAAnB;AAA6B,kBAAA,OAAO,EAAE,MAAM;AAAC0D,oBAAAA,cAAc;AAAG,mBAA9D;AAAA,yCACI,QAAC,eAAD;AAAiB,oBAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI;AAAG,gBAAA,IAAI,EAAG,+BAA8BxE,SAAS,CAAC0C,IAAK,MAAvD;AAA8D,gBAAA,QAAQ,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAUI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAExC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA,0BADH,GAaC0B,OAAO,KAAK,OAAZ,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,gBAGE;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,wBAAhB;AAAyC,cAAA,MAAM,EAAC,KAAhD;AAAsD,cAAA,QAAQ,EAAEwD,UAAhE;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAU,gBAAA,SAAS,EAAC,yBAApB;AAA8C,gBAAA,KAAK,EAAE1D,OAArD;AAA8D,gBAAA,QAAQ,EAAEyC,CAAC,IAAI;AAACxC,kBAAAA,UAAU,CAACwC,CAAC,CAACC,MAAF,CAASyB,KAAV,CAAV;AAA2B;AAAzG;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,wBACKrE,QAAQ,CAACsE,GAAT,CAAa,CAACpE,OAAD,EAAUqE,CAAV,KAAgB;AAC1B,oCACI;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,0CACI;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,mBAAb;AAAA,gCAAkCrE,OAAO,CAAC4D,IAAR,CAAaC;AAA/C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,mBAAb;AAAA,gCAAkCC,WAAW,CAAC9D,OAAO,CAACsE,SAAT;AAA7C;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAKI;AAAG,oBAAA,SAAS,EAAC,sBAAb;AAAA,8BAAqCtE,OAAO,CAACA;AAA7C;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA,mBAAmCqE,CAAnC;AAAA;AAAA;AAAA;AAAA,wBADJ;AASH,eAVA;AADL;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,GA6DCrG,MAAM,IAAI,CAACE,KAAX,iBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AA/DR,mBADJ;AAsEH,CAtQD;;GAAMJ,S;UAwBkBR,S;;;KAxBlBQ,S;AAwQN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect, useRef, useContext} from 'react'\nimport {Link, useParams} from \"react-router-dom\"\nimport workspacesAPI from '../API/workspaces'\nimport globalAPI from '../API/global'\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst Workspace = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [exist, setExist] = useState()\n    const [noData, setNoData] = useState()\n    const [workspace, setWorkspace] = useState()\n    const [dataTable, setDataTable] = useState()\n    const [dataID, setDataID] = useState(\"\")\n    const [uploadData, setUploadData] = useState()\n    const [changedData, setChangedData] = useState(false)\n    const [changedSettings, setChangedSettings] = useState(false)\n    const [date, setDate] = useState(\"\");\n    const [copyData, setCopyData] = useState(true)\n    const [bookmarked, setBookmarked] = useState()\n    const [upvoted, setUpvoted] = useState()\n    const [upvotes, setUpvotes] = useState()\n    const [visibility, setVisibility] = useState()\n    const [comments, setComments] = useState()\n    const [comment, setComment] = useState(\"\")\n    const [section, setSection] = useState(\"data\")\n    const [title, setTitle] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [image, setImage] = useState();\n    const {addOpenItems} = useContext(OpenItemsContext);\n    const copyInterval = useRef(0)\n    const workspaceID = useParams().id;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspace = await workspacesAPI.get(`/${workspaceID}`);\n                const comments = await globalAPI.get(`/comment/${workspaceID}?type=workspace`);\n\n                if (workspace.data.data.creator === currentUser.id) {\n                    addOpenItems(workspace.data.data._id, workspace.data.data.title, workspace.data.data.type)\n                }\n\n                setWorkspace(workspace.data.data);\n                setBookmarked(workspace.data.data.bookmarked)\n                setUpvoted(workspace.data.data.upvoted)\n                setUpvotes(workspace.data.data.upvotes)\n                setVisibility(workspace.data.data.visibility)\n                setTitle(workspace.data.data.title)\n                setDescription(workspace.data.data.description)\n                setComments(comments.data.data)\n\n                fetch(`http://127.0.0.1:5000/files/${workspace.data.data.dataset.data}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setExist(true)\n                        setNoData(false)\n                        setLoaded(true)\n                    }).catch(function() {\n                        setExist(true)\n                        setNoData(true)\n                        setLoaded(true)\n                    });\n            } catch (err) {\n                setExist(false)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])    \n\n    useEffect(() => {\n        if (loaded) {\n            const updatedDate = new Date(workspace.updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded])\n\n    useEffect(() => {\n        if (replaceData && uploadData !== undefined) {\n            setDataID(\"\")\n\n            const file = uploadData;\n            const reader = new FileReader();\n\n            reader.onload = function(e) {\n                setDataTable(e.target.result);\n            }\n\n            reader.readAsText(file)\n        }\n    }, [uploadData])\n\n    const existingWorkspace = () => {\n        setUploadData(undefined)\n\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n            .then(response => response.text())\n            .then(text => {setDataTable(text)})\n    }\n\n    const copiedInterval = () => {\n        clearInterval(copyInterval.current)\n        navigator.clipboard.writeText(workspace.data);\n        setCopyData(false);\n        copyInterval.current = setInterval(() => {\n            setCopyData(true);\n        }, 800)\n        return ()=> {clearInterval(copyInterval.current)};\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await workspacesAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await workspacesAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await workspacesAPI.put(`/visibility/${workspace._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        try {\n            await workspacesAPI.put(`/comment/${workspaceID}`, {\n                comment: comment\n            });\n\n            setComments([{\n                user: {name: currentUser.name},\n                comment: comment\n            }, ...comments])\n            setComment(\"\")\n        } catch (err) {}\n    }\n\n    const commentDate = (date) => {\n        const updatedDate = new Date(date);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`\n        } else {\n            return \"Posted just now\"\n        }\n    }\n\n    const updateSettings = () => {\n\n    }\n\n    const deleteWorkspace = () => {\n\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"width-body\">  \n                    <div className=\"workspace-body\">\n                        <div className=\"workspace-top\">\n                            <img src={`http://localhost:4000/images/${workspace.picture}`} />\n                            <h1>{workspace.title}</h1>\n                            <div>\n                                <p className=\"workspace-meta\">{workspace.creatorName.name}</p>\n                                <p className=\"workspace-meta\">{date}</p>\n                                <BookmarkIcon className={`workspace-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />\n                                <ThumbUpIcon className={`workspace-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                                <p className={`workspace-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                            </div>\n                            <p className=\"workspace-description\">{workspace.description}</p>\n                            <select className=\"workspace-select\" onChange={e => {setSection(e.target.value)}}>\n                                <option value=\"data\">Data</option>\n                                <option value=\"model\">Model</option>\n                                <option value=\"comment\">Comments</option>\n                            </select>\n                        </div>\n                        <div className=\"workspace-bottom\">\n                            {section === \"data\" ? \n                                <> \n                                    <div className=\"workspace-data\">\n                                        <div className=\"workspace-copy\">\n                                            {copyData ? <p>Data ID</p> : <p>Copied</p>}\n                                            <button disabled={!copyData} onClick={() => {copiedInterval()}}>\n                                                <ContentCopyIcon className=\"workspace-copy-icon\" />\n                                            </button>\n                                        </div>\n                                        <a href={`http://127.0.0.1:5000/files/${workspace.data}.csv`} download>Download</a>\n                                    </div>\n                                    <ViewData dataTable={dataTable} />\n                                </>\n                            : section === \"model\" ?\n                                <p>model</p>\n                            :\n                                <>\n                                    <form className=\"workspace-comment-form\" method=\"PUT\" onSubmit={addComment}>\n                                        <p className=\"workspace-comment\">Leave a Comment</p>\n                                        <textarea className=\"workspace-comment-input\" value={comment} onChange={e => {setComment(e.target.value)}} />\n                                        <button className=\"blue-button\">Comment</button>\n                                    </form>\n                                    <div className=\"workspace-comments\">\n                                        {comments.map((comment, i) => {\n                                            return (\n                                                <div className=\"comment-card\" key={i}>\n                                                    <div>\n                                                        <p className=\"comment-card-user\">{comment.user.name}</p>\n                                                        <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                    </div>\n                                                    <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"width-body\">  \n                    <p className=\"item-exist\">Cannot find workspace</p>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default Workspace\n"]},"metadata":{},"sourceType":"module"}