{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { CardFormatContext } from '../Contexts/cardFormatContext';\nimport ItemRowCard from '../Components/Item-Row-Card';\nimport ItemSquareCard from '../Components/Item-Square-Card';\nimport globalAPI from '../API/global';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Shortcut from '../Components/Shortcut';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    searchPhrase,\n    setSearchPhrase,\n    currentUser\n  } = _ref;\n  const [items, setItems] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [finishedItems, setFinishedItems] = useState(false);\n  const {\n    cardFormat,\n    changeCardFormat\n  } = useContext(CardFormatContext);\n  const urlPhrase = useParams().id;\n  const history = useHistory(); // Whenever the search page is rendered the useEffect hook is executed to fetch search results\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Check if the search phrase is empty\n      if (searchPhrase === null) {\n        // Check if search phrase in the URL is empty\n        if (urlPhrase) {\n          // Create GET request to fetch all results using the search phrase in the URL\n          const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n\n          if (items.data.data.length < 21) {\n            setFinishedItems(true);\n          }\n\n          setItems(items.data.data);\n          setLoaded(true);\n        } else {\n          history.push(\"/home\");\n        } // Else use the search phrase\n\n      } else {\n        // Create GET request to fetch all results using the search phrase\n        const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n\n        if (items.data.data.length < 21) {\n          setFinishedItems(true);\n        }\n\n        setItems(items.data.data);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const searchFunctionKey = e => {\n    if (e.key === \"Enter\" && input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const searchFunctionButton = () => {\n    if (input !== \"\") {\n      setSearchPhrase(input);\n      history.push(`/search-results/${input}`);\n    }\n  };\n\n  const fetchDataItems = async id => {\n    if (!finishedItems) {\n      try {\n        // Create a GET request for more search results with an ID less than the last result already fetched\n        const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n\n        if (fetchedItems.data.data.length < 21) {\n          setFinishedItems(true);\n        } // Append new search results to current search results\n\n\n        setItems(items => [...items, ...fetchedItems.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (items.length !== 0) {\n      {\n        fetchDataItems(items[items.length - 1]._id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"home-search-input\",\n            placeholder: \"Search\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: searchFunctionKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"home-search-icon\",\n            onClick: e => searchFunctionButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"home-options-link\",\n          to: \"/public-workspaces\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Public Workspaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n            className: \"home-options-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"home-options-link\",\n          to: \"public-datasets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Public Datasets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n            className: \"home-options-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Shortcut, {\n          type: \"workspaces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Shortcut, {\n          type: \"datasets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-divided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Shortcut, {\n          type: \"bookmarked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Search Results: \", urlPhrase]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"toggle-card-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/List.png\",\n                className: \"toggle-card-type-row-icon\",\n                onClick: () => {\n                  changeCardFormat();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/Grid.png\",\n                className: \"toggle-card-type-grid-icon\",\n                onClick: () => {\n                  changeCardFormat();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"view-items-results\",\n            children: `${items.length} Results`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-items-list\",\n            children: items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: items.map((item, i) => {\n                return cardFormat ? /*#__PURE__*/_jsxDEV(ItemRowCard, {\n                  item: item,\n                  creator: item.creatorName.name,\n                  currentUserID: currentUser.id,\n                  created: currentUser.id === item.creator\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(ItemSquareCard, {\n                  item: item,\n                  creator: item.creatorName.name,\n                  currentUserID: currentUser.id,\n                  created: currentUser.id === item.creator\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), items.length >= 0 && finishedItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"end-items\",\n            children: \"End reached\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"load-items\",\n            onClick: () => {\n              loadMore();\n            },\n            children: \"Load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"KdsncNBI1tfNvTW0FiTOy5KMoq8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Search.jsx"],"names":["React","useState","useEffect","useContext","Link","useHistory","useParams","CardFormatContext","ItemRowCard","ItemSquareCard","globalAPI","SearchIcon","Shortcut","ArrowForwardIosIcon","Search","searchPhrase","setSearchPhrase","currentUser","items","setItems","loaded","setLoaded","input","setInput","finishedItems","setFinishedItems","cardFormat","changeCardFormat","urlPhrase","id","history","fetchData","get","data","length","push","searchFunctionKey","e","key","searchFunctionButton","fetchDataItems","fetchedItems","err","loadMore","_id","target","value","map","item","i","creatorName","name","creator"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,SAA1B,QAA0C,kBAA1C;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;;;;AAEA,MAAMC,MAAM,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,YAAD;AAAeC,IAAAA,eAAf;AAAgCC,IAAAA;AAAhC,GAAiD;AAC7D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,EAAlC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAACyB,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAiCxB,UAAU,CAACI,iBAAD,CAAjD;AACA,QAAMqB,SAAS,GAAGtB,SAAS,GAAGuB,EAA9B;AACA,QAAMC,OAAO,GAAGzB,UAAU,EAA1B,CAP6D,CAS7D;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6B,SAAS,GAAG,YAAY;AAC1B;AACA,UAAIhB,YAAY,KAAK,IAArB,EAA2B;AACvB;AACA,YAAIa,SAAJ,EAAe;AACX;AACA,gBAAMV,KAAK,GAAG,MAAMR,SAAS,CAACsB,GAAV,CAAe,kBAAiBJ,SAAU,EAA1C,CAApB;;AAEA,cAAIV,KAAK,CAACe,IAAN,CAAWA,IAAX,CAAgBC,MAAhB,GAAyB,EAA7B,EAAiC;AAC7BT,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AAEDN,UAAAA,QAAQ,CAACD,KAAK,CAACe,IAAN,CAAWA,IAAZ,CAAR;AACAZ,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH,SAVD,MAUO;AACHS,UAAAA,OAAO,CAACK,IAAR,CAAa,OAAb;AACH,SAdsB,CAe3B;;AACC,OAhBD,MAgBO;AACH;AACA,cAAMjB,KAAK,GAAG,MAAMR,SAAS,CAACsB,GAAV,CAAe,kBAAiBjB,YAAa,EAA7C,CAApB;;AAEA,YAAIG,KAAK,CAACe,IAAN,CAAWA,IAAX,CAAgBC,MAAhB,GAAyB,EAA7B,EAAiC;AAC7BT,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AAEDN,QAAAA,QAAQ,CAACD,KAAK,CAACe,IAAN,CAAWA,IAAZ,CAAR;AACAZ,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KA7BD;;AA8BAU,IAAAA,SAAS;AACZ,GAhCQ,EAgCN,EAhCM,CAAT;;AAkCA,QAAMK,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBhB,KAAK,KAAK,EAAnC,EAAuC;AACnCN,MAAAA,eAAe,CAACM,KAAD,CAAf;AACAQ,MAAAA,OAAO,CAACK,IAAR,CAAc,mBAAkBb,KAAM,EAAtC;AACH;AACJ,GALD;;AAOA,QAAMiB,oBAAoB,GAAG,MAAM;AAC/B,QAAIjB,KAAK,KAAK,EAAd,EAAkB;AACdN,MAAAA,eAAe,CAACM,KAAD,CAAf;AACAQ,MAAAA,OAAO,CAACK,IAAR,CAAc,mBAAkBb,KAAM,EAAtC;AACH;AACJ,GALD;;AAOA,QAAMkB,cAAc,GAAG,MAAOX,EAAP,IAAc;AACjC,QAAI,CAACL,aAAL,EAAoB;AAChB,UAAI;AACA;AACA,cAAMiB,YAAY,GAAG,MAAM/B,SAAS,CAACsB,GAAV,CAAe,kBAAiBJ,SAAU,OAAMC,EAAG,EAAnD,CAA3B;;AAEA,YAAIY,YAAY,CAACR,IAAb,CAAkBA,IAAlB,CAAuBC,MAAvB,GAAgC,EAApC,EAAwC;AACpCT,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,SAND,CAQA;;;AACAN,QAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW,GAAGuB,YAAY,CAACR,IAAb,CAAkBA,IAAhC,CAAV,CAAR;AACH,OAVD,CAUE,OAAOS,GAAP,EAAY,CAAE;AACnB;AACJ,GAdD;;AAgBA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIzB,KAAK,CAACgB,MAAN,KAAiB,CAArB,EAAwB;AACpB;AAACM,QAAAA,cAAc,CAACtB,KAAK,CAACA,KAAK,CAACgB,MAAN,GAAa,CAAd,CAAL,CAAsBU,GAAvB,CAAd;AAA0C;AAC9C;AACJ,GAJD;;AAMA,sBACI;AAAA,cACKxB,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,mBAAjB;AACQ,YAAA,WAAW,EAAC,QADpB;AAEQ,YAAA,KAAK,EAAEE,KAFf;AAGQ,YAAA,QAAQ,EAAEe,CAAC,IAAId,QAAQ,CAACc,CAAC,CAACQ,MAAF,CAASC,KAAV,CAH/B;AAIQ,YAAA,UAAU,EAAEV;AAJpB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,kBAAtB;AAAyC,YAAA,OAAO,EAAEC,CAAC,IAAIE,oBAAoB;AAA3E;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAoC,UAAA,EAAE,EAAC,oBAAvC;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,mBAAD;AAAqB,YAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAcI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAoC,UAAA,EAAE,EAAC,iBAAvC;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,mBAAD;AAAqB,YAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAkBI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAmBI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoBI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAqBI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAsBI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAuBI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA0BI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACI;AAAA,6CAAqBX,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,GAAG,EAAC,gCAAT;AAA0C,gBAAA,SAAS,EAAC,2BAApD;AAAgF,gBAAA,OAAO,EAAE,MAAM;AAACD,kBAAAA,gBAAgB;AAAG;AAAnH;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAK,gBAAA,GAAG,EAAC,gCAAT;AAA0C,gBAAA,SAAS,EAAC,4BAApD;AAAiF,gBAAA,OAAO,EAAE,MAAM;AAACA,kBAAAA,gBAAgB;AAAG;AAApH;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA,sBAAoC,GAAET,KAAK,CAACgB,MAAO;AAAnD;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBACKhB,KAAK,CAACgB,MAAN,GAAe,CAAf,iBACG;AAAA,wBACKhB,KAAK,CAAC6B,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpB,uBAAOvB,UAAU,gBACb,QAAC,WAAD;AAAa,kBAAA,IAAI,EAAEsB,IAAnB;AAAyB,kBAAA,OAAO,EAAEA,IAAI,CAACE,WAAL,CAAiBC,IAAnD;AAAyD,kBAAA,aAAa,EAAElC,WAAW,CAACY,EAApF;AAAwF,kBAAA,OAAO,EAAEZ,WAAW,CAACY,EAAZ,KAAmBmB,IAAI,CAACI;AAAzH,mBAAuIH,CAAvI;AAAA;AAAA;AAAA;AAAA,wBADa,gBAGb,QAAC,cAAD;AAAgB,kBAAA,IAAI,EAAED,IAAtB;AAA4B,kBAAA,OAAO,EAAEA,IAAI,CAACE,WAAL,CAAiBC,IAAtD;AAA4D,kBAAA,aAAa,EAAElC,WAAW,CAACY,EAAvF;AAA2F,kBAAA,OAAO,EAAEZ,WAAW,CAACY,EAAZ,KAAmBmB,IAAI,CAACI;AAA5H,mBAA0IH,CAA1I;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAIH,eALA;AADL;AAFR;AAAA;AAAA;AAAA;AAAA,kBAVJ,EAsBK/B,KAAK,CAACgB,MAAN,IAAgB,CAAhB,IAAqBV,aAArB,gBACG;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,gBAGG;AAAG,YAAA,SAAS,EAAC,YAAb;AAA0B,YAAA,OAAO,EAAE,MAAM;AAACmB,cAAAA,QAAQ;AAAG,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AA+DH,CA/ID;;GAAM7B,M;UAMgBR,S,EACFD,U;;;KAPdS,M;AAiJN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Link, useHistory, useParams} from \"react-router-dom\"\nimport { CardFormatContext } from '../Contexts/cardFormatContext';\nimport ItemRowCard from '../Components/Item-Row-Card'\nimport ItemSquareCard from '../Components/Item-Square-Card'\nimport globalAPI from '../API/global'\nimport SearchIcon from '@mui/icons-material/Search';\nimport Shortcut from '../Components/Shortcut'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\n\nconst Search = ({searchPhrase, setSearchPhrase, currentUser}) => {\n    const [items, setItems] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [input, setInput] = useState(\"\");\n    const [finishedItems, setFinishedItems] = useState(false);\n    const {cardFormat, changeCardFormat} = useContext(CardFormatContext);\n    const urlPhrase = useParams().id;\n    const history = useHistory();\n\n    // Whenever the search page is rendered the useEffect hook is executed to fetch search results\n    useEffect(() => {\n        const fetchData = async () => {\n            // Check if the search phrase is empty\n            if (searchPhrase === null) {\n                // Check if search phrase in the URL is empty\n                if (urlPhrase) {\n                    // Create GET request to fetch all results using the search phrase in the URL\n                    const items = await globalAPI.get(`/search?phrase=${urlPhrase}`);\n                    \n                    if (items.data.data.length < 21) {\n                        setFinishedItems(true)\n                    }\n\n                    setItems(items.data.data);\n                    setLoaded(true);\n                } else {\n                    history.push(\"/home\");\n                }\n            // Else use the search phrase\n            } else {\n                // Create GET request to fetch all results using the search phrase\n                const items = await globalAPI.get(`/search?phrase=${searchPhrase}`);\n    \n                if (items.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n    \n                setItems(items.data.data);\n                setLoaded(true);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const searchFunctionKey = (e) => {\n        if (e.key === \"Enter\" && input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const searchFunctionButton = () => {\n        if (input !== \"\") {\n            setSearchPhrase(input);\n            history.push(`/search-results/${input}`);\n        }\n    }\n\n    const fetchDataItems = async (id) => {\n        if (!finishedItems) {\n            try {\n                // Create a GET request for more search results with an ID less than the last result already fetched\n                const fetchedItems = await globalAPI.get(`/search?phrase=${urlPhrase}&id=${id}`);\n                \n                if (fetchedItems.data.data.length < 21) {\n                    setFinishedItems(true)\n                }\n    \n                // Append new search results to current search results\n                setItems(items => [...items, ...fetchedItems.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (items.length !== 0) {\n            {fetchDataItems(items[items.length-1]._id)}\n        }\n    };\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"main-body\">\n                    <div className=\"sidebar\">\n                        <div className=\"home-search\">\n                            <input className=\"home-search-input\" \n                                    placeholder=\"Search\"\n                                    value={input}\n                                    onChange={e => setInput(e.target.value)}\n                                    onKeyPress={searchFunctionKey} />\n                            <SearchIcon className=\"home-search-icon\" onClick={e => searchFunctionButton()} />\n                        </div>\n                        <div className=\"sidebar-divided\" />\n                        <Link className=\"home-options-link\" to=\"/public-workspaces\">\n                            <p>Public Workspaces</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <Link className=\"home-options-link\" to=\"public-datasets\">\n                            <p>Public Datasets</p>\n                            <ArrowForwardIosIcon className=\"home-options-icon\" />\n                        </Link>\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"workspaces\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"datasets\"} />\n                        <div className=\"sidebar-divided\" />\n                        <Shortcut type={\"bookmarked\"} />\n                    </div>\n                    <div className=\"inner\">\n                        <div className=\"home-inner\">\n                            <div className=\"view-items-top\">\n                                <h1>Search Results: {urlPhrase}</h1>\n                                <div className=\"toggle-card-type\">\n                                    <span />\n                                    <img src=\"http://localhost:3000/List.png\" className=\"toggle-card-type-row-icon\" onClick={() => {changeCardFormat()}} />\n                                    <img src=\"http://localhost:3000/Grid.png\" className=\"toggle-card-type-grid-icon\" onClick={() => {changeCardFormat()}} />\n                                </div>\n                            </div>\n                            <p className=\"view-items-results\">{`${items.length} Results`}</p>\n                            <div className=\"view-items-list\">\n                                {items.length > 0 &&\n                                    <>\n                                        {items.map((item, i) => {\n                                            return cardFormat ? \n                                                <ItemRowCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={currentUser.id === item.creator} key={i} /> \n                                                : \n                                                <ItemSquareCard item={item} creator={item.creatorName.name} currentUserID={currentUser.id} created={currentUser.id === item.creator} key={i} />\n                                        })}\n                                    </>\n                                }\n                            </div>\n                            {items.length >= 0 && finishedItems ?\n                                <p className=\"end-items\">End reached</p>\n                                :\n                                <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}