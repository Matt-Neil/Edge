{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account-Workspaces.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport SelfWorkspaceRowCard from '../Components/Self-Workspace-Row-Card';\nimport SelfWorkspaceSquareCard from '../Components/Self-Workspace-Square-Card';\nimport workspacesAPI from '../API/workspaces';\nimport GridOnIcon from '@mui/icons-material/GridOn';\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountWorkspaces = () => {\n  _s();\n\n  const [workspaces, setWorkspaces] = useState();\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const workspaces = await workspacesAPI.get(\"/\");\n        setWorkspaces(workspaces.data.data);\n        setLoaded(true);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-workspaces-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-workspaces-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Workspaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/new-workspace\",\n            className: \"blue-button\",\n            children: \"New Workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-workspaces-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${workspaces.length} Workspaces`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormatListBulletedIcon, {\n              className: \"account-workspaces-row-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(GridOnIcon, {\n              className: \"account-workspaces-grid-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-workspaces-list\",\n          children: workspaces.map((workspace, i) => {\n            return /*#__PURE__*/_jsxDEV(SelfWorkspaceRowCard, {\n              workspace: workspace\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountWorkspaces, \"orAoJFlAHpofPN/JoylEHHxEvtc=\");\n\n_c = AccountWorkspaces;\nexport default AccountWorkspaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWorkspaces\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Account-Workspaces.jsx"],"names":["React","useState","useEffect","useHistory","Link","useParams","SelfWorkspaceRowCard","SelfWorkspaceSquareCard","workspacesAPI","GridOnIcon","FormatListBulletedIcon","AccountWorkspaces","workspaces","setWorkspaces","loaded","setLoaded","fetchData","get","data","err","length","map","workspace","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,SAA1B,QAA0C,kBAA1C;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,uBAAP,MAAoC,0CAApC;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,EAA5C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMJ,UAAU,GAAG,MAAMJ,aAAa,CAACS,GAAd,CAAkB,GAAlB,CAAzB;AAEAJ,QAAAA,aAAa,CAACD,UAAU,CAACM,IAAX,CAAgBA,IAAjB,CAAb;AACAH,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH,OALD,CAKE,OAAOI,GAAP,EAAY,CAAE;AACnB,KAPD;;AAQAH,IAAAA,SAAS;AACZ,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,cACKF,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,gBAAT;AAA0B,YAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACI;AAAA,sBAAK,GAAEF,UAAU,CAACQ,MAAO;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI,QAAC,sBAAD;AAAwB,cAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAYI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,oBACKR,UAAU,CAACS,GAAX,CAAe,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAC9B,gCAAO,QAAC,oBAAD;AAAsB,cAAA,SAAS,EAAED;AAAjC,eAAiDC,CAAjD;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AA0BH,CA1CD;;GAAMZ,iB;;KAAAA,iB;AA4CN,eAAeA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory, Link, useParams} from \"react-router-dom\"\nimport SelfWorkspaceRowCard from '../Components/Self-Workspace-Row-Card'\nimport SelfWorkspaceSquareCard from '../Components/Self-Workspace-Square-Card'\nimport workspacesAPI from '../API/workspaces'\nimport GridOnIcon from '@mui/icons-material/GridOn';\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\n\nconst AccountWorkspaces = () => {\n    const [workspaces, setWorkspaces] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const workspaces = await workspacesAPI.get(\"/\");\n\n                setWorkspaces(workspaces.data.data);\n                setLoaded(true);\n            } catch (err) {}\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            {loaded &&\n                <div className=\"width-body\">  \n                    <div className=\"account-workspaces-body\">\n                        <div className=\"account-workspaces-top\">\n                            <h1>My Workspaces</h1>\n                            <Link to=\"/new-workspace\" className=\"blue-button\">New Workspace</Link>\n                        </div>\n                        <div className=\"account-workspaces-middle\">\n                            <p>{`${workspaces.length} Workspaces`}</p>\n                            <div>\n                                <FormatListBulletedIcon className=\"account-workspaces-row-icon\" />\n                                <GridOnIcon className=\"account-workspaces-grid-icon\" />\n                            </div>\n                        </div>\n                        <div className=\"account-workspaces-list\">\n                            {workspaces.map((workspace, i) => {\n                                return <SelfWorkspaceRowCard workspace={workspace} key={i} />\n                            })}\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default AccountWorkspaces"]},"metadata":{},"sourceType":"module"}