{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/messageContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessageContext = /*#__PURE__*/createContext(false);\n\nconst MessageContextProvider = props => {\n  _s();\n\n  // Initiates context provider's state to display message as false\n  const [displayMessage, setDisplayMessage] = useState(false); // Initiates context provider's useRef hook for timer\n\n  const messageInterval = useRef(0); // Creates timer to display message\n\n  const displayMessageInterval = () => {\n    // Create new interval starting from 0\n    clearInterval(messageInterval.current); // Sets flag to display message in relevant component to true\n\n    setDisplayMessage(true); // Start timer for 1.5 seconds and on completion set flag to display message to false\n\n    messageInterval.current = setInterval(() => {\n      setDisplayMessage(false);\n    }, 1500);\n    return () => {\n      clearInterval(messageInterval.current);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(MessageContext.Provider, {\n    value: {\n      displayMessage,\n      displayMessageInterval\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageContextProvider, \"IU6YagSPRdotQoQ+IZYF2pbu+/A=\");\n\n_c = MessageContextProvider;\nexport default MessageContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageContextProvider\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Contexts/messageContext.js"],"names":["React","createContext","useState","useRef","MessageContext","MessageContextProvider","props","displayMessage","setDisplayMessage","messageInterval","displayMessageInterval","clearInterval","current","setInterval","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,MAAxC,QAAqD,OAArD;;AAEA,OAAO,MAAMC,cAAc,gBAAGH,aAAa,CAAC,KAAD,CAApC;;AAEP,MAAMI,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACtC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD,CAFsC,CAGtC;;AACA,QAAMO,eAAe,GAAGN,MAAM,CAAC,CAAD,CAA9B,CAJsC,CAMtC;;AACA,QAAMO,sBAAsB,GAAG,MAAM;AACjC;AACAC,IAAAA,aAAa,CAACF,eAAe,CAACG,OAAjB,CAAb,CAFiC,CAGjC;;AACAJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAJiC,CAKjC;;AACAC,IAAAA,eAAe,CAACG,OAAhB,GAA0BC,WAAW,CAAC,MAAM;AACxCL,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAFoC,EAElC,IAFkC,CAArC;AAGA,WAAO,MAAK;AAACG,MAAAA,aAAa,CAACF,eAAe,CAACG,OAAjB,CAAb;AAAuC,KAApD;AACH,GAVD;;AAYA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACL,MAAAA,cAAD;AAAiBG,MAAAA;AAAjB,KAAhC;AAAA,cACKJ,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMT,sB;;KAAAA,sB;AA0BN,eAAeA,sBAAf","sourcesContent":["import React, {createContext, useState, useRef} from 'react'\n\nexport const MessageContext = createContext(false)\n\nconst MessageContextProvider = (props) => {\n    // Initiates context provider's state to display message as false\n    const [displayMessage, setDisplayMessage] = useState(false);\n    // Initiates context provider's useRef hook for timer\n    const messageInterval = useRef(0);\n\n    // Creates timer to display message\n    const displayMessageInterval = () => {\n        // Create new interval starting from 0\n        clearInterval(messageInterval.current)\n        // Sets flag to display message in relevant component to true\n        setDisplayMessage(true);\n        // Start timer for 1.5 seconds and on completion set flag to display message to false\n        messageInterval.current = setInterval(() => {\n            setDisplayMessage(false);\n        }, 1500)\n        return ()=> {clearInterval(messageInterval.current)};\n    }\n\n    return (\n        <MessageContext.Provider value={{displayMessage, displayMessageInterval}}>\n            {props.children}\n        </MessageContext.Provider>\n    )\n}\n\nexport default MessageContextProvider"]},"metadata":{},"sourceType":"module"}