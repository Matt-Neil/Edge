{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport globalAPI from '../API/global';\nimport imageAPI from '../API/images';\nimport itemsAPI from '../API/items';\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExperimentCard from '../Components/Experiment-Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Experiment = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  const [exist, setExist] = useState();\n  const [mode, setModel] = useState();\n  const [configuration, setConfiguration] = useState();\n  const [updated, setUpdated] = useState();\n  const [changedModel, setChangedModel] = useState(false);\n  const [changedConfiguration, setChangedConfiguration] = useState(false);\n  const [visibility, setVisibility] = useState();\n  const [experiment, setExperiment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [displayPublic, setDisplayPublic] = useState(false);\n  const [displayExist, setDisplayExist] = useState(false);\n  const workspaceID = useParams().workspace;\n  const experimentID = useParams().experiment;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const experiment = await itemsAPI.get(`/experiment${experimentID}?workspace=${workspaceID}`);\n        setExperiment(experiment.data.data);\n        setUpdated(experiment.data.data.updated);\n        setTitle(experiment.data.data.title);\n        setModel(experiment.data.data.model);\n        setVisibility(experiment.data.data.visibility);\n        setConfiguration(experiment.data.data.configuration);\n        setExist(true);\n        setLoaded(true);\n      } catch (err) {\n        setExist(false);\n        setLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loaded && exist) {\n      const updatedDate = new Date(updated);\n      const currentDate = new Date();\n\n      if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n        setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`);\n      } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n        setDate(`Updated ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`);\n      } else {\n        setDate(\"Updated just now\");\n      }\n    }\n  }, [loaded, updated]);\n\n  const fetchDataExperiments = async date => {\n    if (!finishedExperiments) {\n      try {\n        const fetchedExperiments = await itemsAPI.get(`/created-experiments/${workspaceID}?date=${date}`);\n\n        if (fetchedExperiments.data.data.length < 21) {\n          setFinishedExperiments(true);\n        }\n\n        setExperiments(items => [...items, ...fetchedExperiments.data.data]);\n      } catch (err) {}\n    }\n  };\n\n  const loadMore = () => {\n    if (experiments.length !== 0) {\n      {\n        fetchDataExperiments(experiments[experiments.length - 1].updated);\n      }\n    }\n  };\n\n  const displayPublicInterval = () => {\n    clearInterval(publicInterval.current);\n    setDisplayPublic(true);\n    publicInterval.current = setInterval(() => {\n      setDisplayPublic(false);\n    }, 1200);\n    return () => {\n      clearInterval(publicInterval.current);\n    };\n  };\n\n  const displayExistInterval = () => {\n    clearInterval(existInterval.current);\n    setDisplayExist(true);\n    existInterval.current = setInterval(() => {\n      setDisplayExist(false);\n    }, 1200);\n    return () => {\n      clearInterval(existInterval.current);\n    };\n  };\n\n  const existingWorkspace = async () => {\n    try {\n      const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`);\n\n      if (checkPublic.data.success && checkPublic.data.data.visibility) {\n        fetch(`http://127.0.0.1:5000/files/${dataID}.csv`).then(response => response.text()).then(text => {\n          setDataTable(text);\n          setMaxRows(text.slice(text.indexOf('\\n') + 1).split('\\n').length);\n          setDataset(checkPublic._id);\n          setRefreshTable(new Date().getTime());\n        });\n      } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n        displayPublicInterval();\n      } else {\n        displayExistInterval();\n      }\n    } catch (err) {}\n  };\n\n  const updateUpvote = async () => {\n    try {\n      await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n      if (upvoted) {\n        setUpvotes(state => state - 1);\n      } else {\n        setUpvotes(state => state + 1);\n      }\n\n      setUpvoted(state => !state);\n    } catch (err) {}\n  };\n\n  const updateBookmark = async () => {\n    try {\n      await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n      setBookmarked(state => !state);\n    } catch (err) {}\n  };\n\n  const updateVisibility = async () => {\n    try {\n      await globalAPI.put(`/visibility/${workspace._id}`);\n      setVisibility(state => !state);\n    } catch (err) {}\n  };\n\n  const addComment = async e => {\n    e.preventDefault();\n\n    try {\n      await globalAPI.put(`/comment/${workspaceID}?type=workspace`, {\n        comment: comment\n      });\n      setComments([{\n        user: {\n          name: currentUser.name\n        },\n        comment: comment\n      }, ...comments]);\n      setComment(\"\");\n    } catch (err) {}\n  };\n\n  const fetchRow = () => {\n    if (!isNaN(row) && row !== \"\") {\n      setStart(row - 1);\n      setEnd(row);\n      setRefreshTable(new Date().getTime());\n    } else {\n      if (start === (page - 1) * 30 && end === page * 30) {\n        setRow(\"\");\n      } else {\n        setStart((page - 1) * 30);\n        setEnd(page * 30);\n        setRefreshTable(new Date().getTime());\n      }\n    }\n  };\n\n  const cancelRow = () => {\n    if (!(start === (page - 1) * 30 && end === page * 30)) {\n      setStart((page - 1) * 30);\n      setEnd(page * 30);\n      setRefreshTable(new Date().getTime());\n    }\n\n    setRow(\"\");\n  };\n\n  const previousPage = () => {\n    if (page > 1) {\n      setPage(state => state - 1);\n    }\n\n    setStart((page - 1) * 30);\n    setEnd(page * 30);\n    setRefreshTable(new Date().getTime());\n  };\n\n  const nextPage = () => {\n    if (page * 30 < maxRows && maxRows > 30) {\n      setPage(state => state + 1);\n      setStart(page * 30);\n      setEnd((page + 1) * 30);\n      setRefreshTable(new Date().getTime());\n    }\n  };\n\n  const commentDate = date => {\n    const updatedDate = new Date(date);\n    const currentDate = new Date();\n\n    if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365).toString()} years ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n      return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24)).toString()} days ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600)).toString()} hours ago`;\n    } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n      return `Posted ${Math.floor((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60)).toString()} minutes ago`;\n    } else {\n      return \"Posted just now\";\n    }\n  };\n\n  const updateSettings = async () => {\n    if (image) {\n      const formImage = new FormData();\n      formImage.append('image', image);\n\n      try {\n        const tempPicture = picture;\n        const imageResponse = await imageAPI.post(\"/upload\", formImage);\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: imageResponse.data.data,\n          dataset: dataset,\n          updated: new Date().toISOString()\n        });\n        setImage(undefined);\n        setPicture(imageResponse.data.data);\n\n        if (tempPicture !== \"default.png\") {\n          await imageAPI.put('/remove', {\n            picture: tempPicture\n          });\n        }\n      } catch (err) {}\n    } else {\n      try {\n        await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n          title: title,\n          description: description,\n          picture: picture,\n          dataset: dataset,\n          updated: new Date().toISOString()\n        });\n      } catch (err) {}\n    }\n\n    setUpdated(new Date().toISOString());\n    setChangedSettings(false);\n  };\n\n  const deleteWorkspace = async () => {\n    try {\n      await itemsAPI.delete(`/${workspaceID}`);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"item-picture\",\n            src: `http://localhost:4000/images/${picture}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), workspace.self && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"item-image-input\",\n            type: \"file\",\n            name: \"image\",\n            onChange: e => {\n              setImage(e.target.files[0]);\n              {\n                !changedSettings && setChangedSettings(true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-heading\",\n            children: workspace.self ? /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-title-input\",\n              placeholder: \"Title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"http://localhost:3000/workspace.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: workspace.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [!workspace.self && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: workspace.creatorName.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-meta\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/dataset/${dataset}`,\n              className: \"workspace-dataset-link\",\n              children: \"View Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this), !workspace.self && /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n              className: `item-icon ${bookmarked ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateBookmark();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 53\n            }, this), workspace.self && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                className: \"item-visibility\",\n                onClick: () => {\n                  updateVisibility();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 45\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              className: `item-icon ${upvoted ? \"blue\" : \"grey\"}`,\n              onClick: () => {\n                updateUpvote();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `item-upvotes ${upvoted ? \"blue\" : \"grey\"}`,\n              children: upvotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this), workspace.self ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"item-description-input\",\n              placeholder: \"Description\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n                {\n                  !changedSettings && setChangedSettings(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dark-grey-button item-delete\",\n                onClick: () => {\n                  deleteWorkspace();\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                disabled: !changedSettings,\n                onClick: () => {\n                  updateSettings();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-description\",\n            children: workspace.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"item-select\",\n            onChange: e => {\n              setSection(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"experiments\",\n              children: \"Experiments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"data\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comments\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-bottom\",\n          children: section === \"experiments\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-experiments\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-experiments-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${experiments.length} Experiments`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 41\n              }, this), workspace.self && /*#__PURE__*/_jsxDEV(Link, {\n                className: \"blue-button item-experiments-create\",\n                to: `${workspaceID}/create-experiment`,\n                children: \"Create Experiment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-experiments-list\",\n              children: experiments.map((experiment, i) => {\n                if (currentUser.id === workspace.creator) return /*#__PURE__*/_jsxDEV(ExperimentCard, {\n                  experiment: experiment.experiments,\n                  created: true,\n                  workspaceID: workspaceID\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 98\n                }, this);\n                return /*#__PURE__*/_jsxDEV(ExperimentCard, {\n                  experiment: experiment.experiments,\n                  created: false,\n                  workspaceID: workspaceID\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 56\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 37\n            }, this), experiments.length >= 0 && finishedExperiments ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"No more experiments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"load-items\",\n              onClick: () => {\n                loadMore();\n              },\n              children: \"Load more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 33\n          }, this) : section === \"data\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: noData ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-items\",\n              children: \"Cannot find dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [workspace.self && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Change Dataset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"workspace-replace-input\",\n                  placeholder: \"Data ID\",\n                  onChange: e => {\n                    setDataID(e.target.value);\n                  },\n                  value: dataID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"white-button item-replace-button\",\n                  onClick: () => {\n                    setDataID(undefined);\n                    setChangedData(false);\n                  },\n                  disabled: !changedData,\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"blue-button item-replace-button\",\n                  disabled: dataID === \"\",\n                  onClick: () => {\n                    existingWorkspace();\n                  },\n                  children: \"Import\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 53\n                }, this), displayPublic && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"create-item-data-public\",\n                  children: \"Dataset not public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 71\n                }, this), displayExist && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"create-item-data-public\",\n                  children: \"Dataset does not exist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 70\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-data-table-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Row number\",\n                  value: row,\n                  onChange: e => {\n                    setRow(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    cancelRow();\n                  },\n                  className: \"white-button item-data-cancel-find\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    fetchRow();\n                  },\n                  className: \"blue-button item-data-find\",\n                  children: \"Find\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n                  className: \"item-data-table-pagination-icon\",\n                  onClick: () => {\n                    previousPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Page \", page, \" / \", Math.ceil(maxRows / 30)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: \"item-data-table-pagination-icon\",\n                  onClick: () => {\n                    nextPage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-data-table\",\n                children: /*#__PURE__*/_jsxDEV(ViewData, {\n                  dataTable: dataTable,\n                  start: start,\n                  end: end\n                }, refreshTable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"item-comment-form\",\n              method: \"PUT\",\n              onSubmit: addComment,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-comment\",\n                children: \"Leave a Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"item-comment-input\",\n                placeholder: \"Write here\",\n                value: comment,\n                onChange: e => {\n                  setComment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"blue-button\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-comments\",\n              children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"end-items\",\n                children: \"No comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: comments.map((comment, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"comment-card-user\",\n                        children: comment.user\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"comment-card-date\",\n                        children: commentDate(comment.createdAt)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"comment-card-comment\",\n                      children: comment.comment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 61\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this) : loaded && !exist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-exist\",\n        children: \"Cannot find workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Experiment, \"DiP6/QNWYDiBNptGwvJXShhlsMM=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Experiment;\nexport default Experiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experiment\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Pages/Experiment.jsx"],"names":["React","useState","useEffect","useContext","useRef","Link","useParams","globalAPI","imageAPI","itemsAPI","ViewData","OpenItemsContext","BookmarkIcon","ThumbUpIcon","ArrowForwardIosIcon","ArrowBackIosNewIcon","VisibilityOffIcon","VisibilityIcon","ExperimentCard","Experiment","currentUser","loaded","setLoaded","exist","setExist","mode","setModel","configuration","setConfiguration","updated","setUpdated","changedModel","setChangedModel","changedConfiguration","setChangedConfiguration","visibility","setVisibility","experiment","setExperiment","title","setTitle","displayPublic","setDisplayPublic","displayExist","setDisplayExist","workspaceID","workspace","experimentID","fetchData","get","data","model","err","updatedDate","Date","currentDate","getTime","setDate","Math","floor","toString","fetchDataExperiments","date","finishedExperiments","fetchedExperiments","length","setFinishedExperiments","setExperiments","items","loadMore","experiments","displayPublicInterval","clearInterval","publicInterval","current","setInterval","displayExistInterval","existInterval","existingWorkspace","checkPublic","dataID","success","fetch","then","response","text","setDataTable","setMaxRows","slice","indexOf","split","setDataset","_id","setRefreshTable","updateUpvote","put","upvoted","setUpvotes","state","setUpvoted","updateBookmark","bookmarked","setBookmarked","updateVisibility","addComment","e","preventDefault","comment","setComments","user","name","comments","setComment","fetchRow","isNaN","row","setStart","setEnd","start","page","end","setRow","cancelRow","previousPage","setPage","nextPage","maxRows","commentDate","updateSettings","image","formImage","FormData","append","tempPicture","picture","imageResponse","post","description","dataset","toISOString","setImage","undefined","setPicture","setChangedSettings","deleteWorkspace","delete","self","target","files","changedSettings","value","creatorName","upvotes","setDescription","setSection","section","map","i","id","creator","noData","setDataID","setChangedData","changedData","ceil","dataTable","refreshTable","createdAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useRef} from 'react'\nimport {Link, useParams} from \"react-router-dom\"\nimport globalAPI from '../API/global'\nimport imageAPI from '../API/images'\nimport itemsAPI from '../API/items'\nimport ViewData from '../Components/View-Data';\nimport { OpenItemsContext } from '../Contexts/openItemsContext';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExperimentCard from '../Components/Experiment-Card'\n\nconst Experiment = ({currentUser}) => {\n    const [loaded, setLoaded] = useState(false)\n    const [exist, setExist] = useState()\n    const [mode, setModel] = useState()\n    const [configuration, setConfiguration] = useState()\n    const [updated, setUpdated] = useState()\n    const [changedModel, setChangedModel] = useState(false)\n    const [changedConfiguration, setChangedConfiguration] = useState(false)\n    const [visibility, setVisibility] = useState()\n    const [experiment, setExperiment] = useState()\n    const [title, setTitle] = useState(\"\")\n    const [displayPublic, setDisplayPublic] = useState(false)\n    const [displayExist, setDisplayExist] = useState(false)\n    const workspaceID = useParams().workspace;\n    const experimentID = useParams().experiment;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const experiment = await itemsAPI.get(`/experiment${experimentID}?workspace=${workspaceID}`);\n\n                setExperiment(experiment.data.data);\n                setUpdated(experiment.data.data.updated);\n                setTitle(experiment.data.data.title)\n                setModel(experiment.data.data.model)\n                setVisibility(experiment.data.data.visibility)\n                setConfiguration(experiment.data.data.configuration)\n\n                setExist(true)\n                setLoaded(true)\n            } catch (err) {\n                setExist(false)\n                setLoaded(true)\n            }\n        }\n        fetchData();\n    }, [])    \n\n    useEffect(() => {\n        if (loaded && exist) {\n            const updatedDate = new Date(updated);\n            const currentDate = new Date();\n    \n            if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`)\n            } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n                setDate(`Updated ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`)\n            } else {\n                setDate(\"Updated just now\")\n            }\n        }\n    }, [loaded, updated])\n\n    const fetchDataExperiments = async (date) => {\n        if (!finishedExperiments) {\n            try {\n                const fetchedExperiments = await itemsAPI.get(`/created-experiments/${workspaceID}?date=${date}`);\n    \n                if (fetchedExperiments.data.data.length < 21) {\n                    setFinishedExperiments(true)\n                }\n\n                setExperiments(items => [...items, ...fetchedExperiments.data.data]);\n            } catch (err) {}\n        }\n    }\n\n    const loadMore = () => {\n        if (experiments.length !== 0) {\n            {fetchDataExperiments(experiments[experiments.length-1].updated)}\n        }\n    };\n\n    const displayPublicInterval = () => {\n        clearInterval(publicInterval.current)\n        setDisplayPublic(true);\n        publicInterval.current = setInterval(() => {\n            setDisplayPublic(false);\n        }, 1200)\n        return ()=> {clearInterval(publicInterval.current)};\n    }\n\n    const displayExistInterval = () => {\n        clearInterval(existInterval.current)\n        setDisplayExist(true);\n        existInterval.current = setInterval(() => {\n            setDisplayExist(false);\n        }, 1200)\n        return ()=> {clearInterval(existInterval.current)};\n    }\n\n    const existingWorkspace = async () => {\n        try {\n            const checkPublic = await itemsAPI.get(`/check-public-dataset?datafile=${dataID}`)\n    \n            if (checkPublic.data.success && checkPublic.data.data.visibility) {\n                fetch(`http://127.0.0.1:5000/files/${dataID}.csv`)\n                    .then(response => response.text())\n                    .then(text => {\n                        setDataTable(text)\n                        setMaxRows(text.slice(text.indexOf('\\n')+1).split('\\n').length)\n                        setDataset(checkPublic._id)\n                        setRefreshTable(new Date().getTime())\n                    })\n            } else if (checkPublic.data.success && !checkPublic.data.data.visibility) {\n                displayPublicInterval()\n            } else {\n                displayExistInterval()\n            }\n        } catch (err) {}\n    }\n\n    const updateUpvote = async () => {\n        try {\n            await globalAPI.put(`/upvote/${workspaceID}?state=${upvoted}`);\n\n            if (upvoted) {\n                setUpvotes(state => state-1)\n            } else {\n                setUpvotes(state => state+1)\n            }\n\n            setUpvoted(state => !state)\n        } catch (err) {}\n    }\n\n    const updateBookmark = async () => {\n        try {\n            await globalAPI.put(`/bookmark/${workspaceID}?state=${bookmarked}`);\n            \n            setBookmarked(state => !state)\n        } catch (err) {}\n    }\n\n    const updateVisibility = async () => {\n        try {\n            await globalAPI.put(`/visibility/${workspace._id}`);\n\n            setVisibility(state => !state)\n        } catch (err) {}\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        try {\n            await globalAPI.put(`/comment/${workspaceID}?type=workspace`, {\n                comment: comment\n            });\n\n            setComments([{\n                user: {name: currentUser.name},\n                comment: comment\n            }, ...comments])\n            setComment(\"\")\n        } catch (err) {}\n    }\n\n    const fetchRow = () => {\n        if (!isNaN(row) && row !== \"\") {\n            setStart(row-1)\n            setEnd(row)\n            setRefreshTable(new Date().getTime())\n        } else {\n            if (start === (page-1)*30 && end === page*30) {\n                setRow(\"\")\n            } else {\n                setStart((page-1)*30)\n                setEnd(page*30)\n                setRefreshTable(new Date().getTime())\n            }\n        }\n    }\n\n    const cancelRow = () => {\n        if (!(start === (page-1)*30 && end === page*30)) {\n            setStart((page-1)*30)\n            setEnd(page*30)\n            setRefreshTable(new Date().getTime())\n        }\n        setRow(\"\")\n    }\n\n    const previousPage = () => {\n        if (page > 1) {\n            setPage(state => state-1)\n        }\n        setStart((page-1)*30)\n        setEnd(page*30)\n        setRefreshTable(new Date().getTime())\n    }\n\n    const nextPage = () => {\n        if (page*30 < maxRows && maxRows > 30) {\n            setPage(state => state+1)\n            setStart((page)*30)\n            setEnd((page+1)*30)\n            setRefreshTable(new Date().getTime())\n        }\n    }\n\n    const commentDate = (date) => {\n        const updatedDate = new Date(date);\n        const currentDate = new Date();\n\n        if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 365) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 365)).toString()} years ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 30) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) % 30).toString())} months ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600 * 24))).toString()} days ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 3600))).toString()} hours ago`\n        } else if ((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60) >= 1) {\n            return `Posted ${Math.floor(((currentDate.getTime() - updatedDate.getTime()) / (1000 * 60))).toString()} minutes ago`\n        } else {\n            return \"Posted just now\"\n        }\n    }\n\n    const updateSettings = async () => {\n        if (image) {\n            const formImage = new FormData();\n            formImage.append('image', image);\n            \n            try {\n                const tempPicture = picture\n                const imageResponse = await imageAPI.post(\"/upload\", formImage);\n\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: imageResponse.data.data,\n                    dataset: dataset,\n                    updated: new Date().toISOString()\n                })\n\n                setImage(undefined)\n                setPicture(imageResponse.data.data)\n\n                if (tempPicture !== \"default.png\") {\n                    await imageAPI.put('/remove', {picture: tempPicture});\n                }\n            } catch (err) {}\n        } else {\n            try {\n                await itemsAPI.put(`/${workspaceID}?type=workspace`, {\n                    title: title,\n                    description: description,\n                    picture: picture,\n                    dataset: dataset,\n                    updated: new Date().toISOString()\n                })\n            } catch (err) {}\n        }\n\n        setUpdated(new Date().toISOString())\n        setChangedSettings(false)\n    }\n\n    const deleteWorkspace = async () => {\n        try {\n            await itemsAPI.delete(`/${workspaceID}`)\n        } catch (err) {}\n    }\n\n    return (\n        <>\n            {loaded && exist ?\n                <div className=\"width-body\">  \n                    <div className=\"item-body\">\n                        <div className=\"item-top\">\n                            <img className=\"item-picture\" src={`http://localhost:4000/images/${picture}`} />\n                            {workspace.self && \n                                <input className=\"item-image-input\"\n                                        type=\"file\" \n                                        name=\"image\" \n                                        onChange={e => {\n                                            setImage(e.target.files[0])\n                                            {!changedSettings && setChangedSettings(true)}\n                                        }} />\n                            }\n                            <div className=\"item-heading\">\n                                {workspace.self ? \n                                    <input className=\"item-title-input\"\n                                            placeholder=\"Title\" \n                                            value={title}\n                                            onChange={e => {\n                                                setTitle(e.target.value)\n                                                {!changedSettings && setChangedSettings(true)}\n                                            }} /> \n                                : \n                                    <>\n                                        <img src=\"http://localhost:3000/workspace.png\" />\n                                        <h1>{workspace.title}</h1>\n                                    </>\n                                }\n                            </div>\n                            <div>\n                                {!workspace.self && <p className=\"item-meta\">{workspace.creatorName.name}</p>}\n                                <p className=\"item-meta\">{date}</p>\n                                <span />\n                                <Link to={`/dataset/${dataset}`} className=\"workspace-dataset-link\">View Dataset</Link>\n                                {!workspace.self && <BookmarkIcon className={`item-icon ${bookmarked ? \"blue\" : \"grey\"}`} onClick={() => {updateBookmark()}} />}\n                                {workspace.self && \n                                    <>\n                                        {visibility ? \n                                            <VisibilityIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        :\n                                            <VisibilityOffIcon className=\"item-visibility\" onClick={() => {updateVisibility()}} />\n                                        }\n                                    </>\n                                }\n                                <ThumbUpIcon className={`item-icon ${upvoted ? \"blue\" : \"grey\"}`} onClick={() => {updateUpvote()}} />\n                                <p className={`item-upvotes ${upvoted ? \"blue\" : \"grey\"}`}>{upvotes}</p>\n                            </div>\n                            {workspace.self ? \n                                <>\n                                    <textarea className=\"item-description-input\"\n                                                placeholder=\"Description\" \n                                                value={description}\n                                                onChange={e => {\n                                                    setDescription(e.target.value)\n                                                    {!changedSettings && setChangedSettings(true)}\n                                                }} /> \n                                    <div className=\"item-middle\">\n                                        <button className=\"dark-grey-button item-delete\"\n                                                onClick={() => {deleteWorkspace()}}>Delete</button>\n                                        <button className=\"blue-button\"\n                                                disabled={!changedSettings}\n                                                onClick={() => {updateSettings()}}>Save Changes</button>\n                                    </div>\n                                </>\n                            : \n                                <p className=\"item-description\">{workspace.description}</p>\n                            }\n                            <select className=\"item-select\" onChange={e => {setSection(e.target.value)}}>\n                                <option value=\"experiments\">Experiments</option>\n                                <option value=\"data\">Data</option>\n                                <option value=\"comments\">Comments</option>\n                            </select>\n                        </div>\n                        <div className=\"item-bottom\">\n                            {section === \"experiments\" ? \n                                <div className=\"item-experiments\">\n                                    <div className=\"item-experiments-middle\">\n                                        <p>{`${experiments.length} Experiments`}</p>\n                                        {workspace.self && <Link className=\"blue-button item-experiments-create\" to={`${workspaceID}/create-experiment`}>Create Experiment</Link>}\n                                    </div> \n                                    <div className=\"item-experiments-list\">\n                                            {experiments.map((experiment, i) => {\n                                                if (currentUser.id === workspace.creator) return <ExperimentCard experiment={experiment.experiments} created={true} workspaceID={workspaceID} key={i} />\n\n                                                return <ExperimentCard experiment={experiment.experiments} created={false} workspaceID={workspaceID} key={i} />\n                                            })}\n                                        </div>\n                                    {experiments.length >= 0 && finishedExperiments ?\n                                        <p className=\"end-items\">No more experiments</p>\n                                        :\n                                        <p className=\"load-items\" onClick={() => {loadMore()}}>Load more</p>\n                                    }\n                                </div>\n                            : section === \"data\" ?\n                                <>\n                                    {noData ?\n                                        <p className=\"end-items\">Cannot find dataset</p>\n                                    :   \n                                        <>\n                                            {workspace.self && \n                                                <div className=\"item-options\">\n                                                    <p>Change Dataset</p>\n                                                    <input className=\"workspace-replace-input\"\n                                                            placeholder=\"Data ID\"\n                                                            onChange={e => {setDataID(e.target.value)}}\n                                                            value={dataID} />\n                                                    <button className=\"white-button item-replace-button\"\n                                                            onClick={() => {\n                                                                setDataID(undefined)\n                                                                setChangedData(false)\n                                                            }}\n                                                            disabled={!changedData}>Clear</button>\n                                                    <button className=\"blue-button item-replace-button\"\n                                                            disabled={dataID === \"\"}\n                                                            onClick={() => {existingWorkspace()}}>Import</button>\n                                                    {displayPublic && <p className=\"create-item-data-public\">Dataset not public</p>}\n                                                    {displayExist && <p className=\"create-item-data-public\">Dataset does not exist</p>}\n                                                </div>\n                                            }\n                                            <div className=\"item-data-table-pagination\">\n                                                <input placeholder=\"Row number\" value={row} onChange={e => {setRow(e.target.value)}} />\n                                                <button onClick={() => {cancelRow()}} className=\"white-button item-data-cancel-find\">Cancel</button>\n                                                <button onClick={() => {fetchRow()}} className=\"blue-button item-data-find\">Find</button>\n                                                <span />\n                                                <ArrowBackIosNewIcon className=\"item-data-table-pagination-icon\" onClick={() => {previousPage()}} />\n                                                <p>Page {page} / {Math.ceil(maxRows/30)}</p>\n                                                <ArrowForwardIosIcon className=\"item-data-table-pagination-icon\" onClick={() => {nextPage()}} />\n                                            </div>\n                                            <div className=\"item-data-table\">\n                                                <ViewData dataTable={dataTable} start={start} end={end} key={refreshTable} />\n                                            </div>\n                                        </>\n                                    }\n                                </>\n                            : \n                                <>\n                                    <form className=\"item-comment-form\" method=\"PUT\" onSubmit={addComment}>\n                                        <p className=\"item-comment\">Leave a Comment</p>\n                                        <textarea className=\"item-comment-input\" placeholder=\"Write here\" value={comment} onChange={e => {setComment(e.target.value)}} />\n                                        <button className=\"blue-button\">Comment</button>\n                                    </form>\n                                    <div className=\"item-comments\">\n                                        {comments.length === 0 ?\n                                            <p className=\"end-items\">No comments</p>\n                                            :\n                                            <>\n                                                {comments.map((comment, i) => {\n                                                    return (\n                                                        <div className=\"comment-card\" key={i}>\n                                                            <div>\n                                                                <p className=\"comment-card-user\">{comment.user}</p>\n                                                                <p className=\"comment-card-date\">{commentDate(comment.createdAt)}</p>\n                                                            </div>\n                                                            <p className=\"comment-card-comment\">{comment.comment}</p>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </>\n                                        }\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            : loaded && !exist &&\n                <div className=\"width-body\">  \n                    <p className=\"item-exist\">Cannot find workspace</p>\n                </div>\n            }   \n        </>\n    )\n}\n\nexport default Experiment"]},"metadata":{},"sourceType":"module"}