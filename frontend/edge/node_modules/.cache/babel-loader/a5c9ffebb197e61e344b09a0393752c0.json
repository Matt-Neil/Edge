{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Model-Node.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModelNode = _ref => {\n  let {\n    type,\n    selected,\n    last\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `model-node ${type === \"Input\" && \"model-node-input\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: selected ? \"model-node-selected\" : \"model-node-unselected\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), !last && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"http://localhost:3000/Node-Connector.png\",\n      className: \"model-node-connector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ModelNode;\nexport default ModelNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelNode\");","map":{"version":3,"sources":["/Users/matt/Documents/GitHub/Edge/frontend/edge/src/Components/Model-Node.jsx"],"names":["React","ModelNode","type","selected","last"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,QAA4B;AAAA,MAA3B;AAACC,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA;AAAjB,GAA2B;AAC1C,sBACI;AAAK,IAAA,SAAS,EAAG,cAAaF,IAAI,KAAK,OAAT,IAAoB,kBAAmB,EAArE;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEC,QAAQ,GAAG,qBAAH,GAA2B,uBAAnD;AAAA,6BACI;AAAA,kBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,CAACE,IAAD,iBACG;AAAK,MAAA,GAAG,EAAC,0CAAT;AAAoD,MAAA,SAAS,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;KAAMH,S;AAaN,eAAeA,SAAf","sourcesContent":["import React from 'react'\n\nconst ModelNode = ({type, selected, last}) => {\n    return (\n        <div className={`model-node ${type === \"Input\" && \"model-node-input\"}`}>\n            <div className={selected ? \"model-node-selected\" : \"model-node-unselected\"}>\n                <p>{type}</p>\n            </div>\n            {!last &&\n                <img src=\"http://localhost:3000/Node-Connector.png\" className=\"model-node-connector\" />\n            }\n        </div>\n    )\n};\n\nexport default ModelNode;\n"]},"metadata":{},"sourceType":"module"}